cset: moving following pidspec: 30311
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35204076 seconds)
loading group "string"... done (took 0.594550091 seconds)
loading group "linalg"... done (took 7.645462871 seconds)
loading group "parallel"... done (took 0.174401412 seconds)
loading group "find"... done (took 1.1746813 seconds)
loading group "tuple"... done (took 2.103252847 seconds)
loading group "dates"... done (took 1.346457821 seconds)
loading group "micro"... done (took 0.248634557 seconds)
loading group "io"... done (took 0.928460697 seconds)
loading group "scalar"... done (took 41.057464979 seconds)
loading group "sparse"... done (took 13.669960922 seconds)
loading group "broadcast"... done (took 1.054218851 seconds)
loading group "union"... done (took 14.714993529 seconds)
loading group "simd"... done (took 4.840964493 seconds)
loading group "random"... done (took 9.709964672 seconds)
loading group "problem"... done (took 2.086369895 seconds)
loading group "array"... done (took 22.899250588 seconds)
loading group "misc"... done (took 2.098324058 seconds)
loading group "sort"... done (took 3.528445837 seconds)
loading group "collection"... done (took 19.459480486 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.489441868 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139181752 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141908703 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148066854 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183241564 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135556478 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152883203 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.1081726 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942669557 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171458171 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138520611 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.488934996 seconds)
done (took 4.983327165 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205846713 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080077005 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095056865 seconds)
  done (took 0.868366981 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.087144406 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140149412 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088770712 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073132217 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072072898 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090110323 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072695158 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.088462415 seconds)
  done (took 1.319791757 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079645145 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073850832 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.09166871 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074743024 seconds)
  done (took 1.013566519 seconds)
done (took 4.196504086 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.710022998 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.254229637 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201313285 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.497889701 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.17282971 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.203879636 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659663942 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34200444 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.237286829 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100214896 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12616353 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388431249 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112326159 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672919739 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083406737 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121077812 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169822125 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452458289 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088875322 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089496101 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111546981 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15236028 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10893233 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081428559 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175210135 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075900985 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.181194613 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10315943 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074047236 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.264769388 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.181955927 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692298462 seconds)
  done (took 10.618138319 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110780375 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134088366 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074711692 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150063105 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132082632 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077595156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0924826 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07515485 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118688627 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174454517 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11313923 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135930752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087914814 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077249363 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.111914077 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.22484196 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116399886 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094419444 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094418051 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084092109 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132373864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107503871 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087809827 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102440901 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163477135 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199770222 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106837876 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11995842 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074954806 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.106782313 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138280118 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153019199 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073841962 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073549001 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17205085 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117873445 seconds)
  done (took 4.919905039 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.103492696 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.152253092 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188013586 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097560589 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167218869 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090290996 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14043947 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074007842 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108502718 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254970897 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182402685 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070802937 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.172207417 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139044727 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094249875 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090597293 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080547806 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073196496 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.504402772 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159648309 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109064969 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111719898 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093681131 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080846914 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365978083 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082355889 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071629911 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095095867 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066338819 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153980831 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094272099 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.154825657 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095497655 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096244944 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127847573 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185435504 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106422799 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129983069 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092259065 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074842743 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173354122 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079502107 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092145038 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100832981 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129465828 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132162526 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.088764092 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074712967 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207133311 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090051597 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088884497 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.948303889 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.174856086 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08646019 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085261339 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.089360422 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330358224 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09519812 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074089694 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091348864 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298418585 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.105001817 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091215887 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074064835 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09228326 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076325435 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380177446 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092379489 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.048778702 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075843475 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084346739 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091146715 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089979948 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08132007 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080975941 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110057926 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07370761 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093248154 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074188602 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.089719452 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075388565 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109320977 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079737793 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089646457 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14541427 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.087020749 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093576467 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121532191 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.077870069 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089043911 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123190792 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077338717 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073621651 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130122861 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074517163 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110466069 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091424833 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135783322 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075174255 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.154450385 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086381029 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102632179 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094396877 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123649162 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102385618 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076630751 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094542129 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072405708 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071408325 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.088766289 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142533394 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087335905 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075088591 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074282983 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103540508 seconds)
  done (took 21.937775685 seconds)
done (took 39.274971513 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32800248 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104715884 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105470658 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103375079 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103440955 seconds)
  done (took 1.515661255 seconds)
done (took 2.262462042 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.159003352 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109421883 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088522481 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104273992 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089194358 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109538841 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124630398 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105195885 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109627946 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087950042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104547807 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088177014 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07219732 seconds)
  done (took 2.119172461 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089040911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109155138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077393445 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088640841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086627411 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088824456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103495543 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093800603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104051137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079740849 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070503251 seconds)
  done (took 1.730570741 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088857001 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090490004 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093708198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088244637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08692082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0882859 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103195424 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093986405 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103350652 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080734299 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073857775 seconds)
  done (took 1.734934993 seconds)
done (took 6.318770926 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088379076 seconds)
  done (took 0.823718585 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.985386172 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.822533002 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098361708 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.158871915 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301684442 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206465891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.579100163 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127144312 seconds)
  done (took 15.227635764 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.123275363 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092267651 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074507225 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092294789 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078975307 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091898988 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076814104 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076613574 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090932029 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078550527 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089994835 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074768387 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093484348 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077562459 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092526348 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076058763 seconds)
  done (took 2.179800284 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11146161 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110333499 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096421355 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083622947 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095647908 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078991707 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098520775 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080281393 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093511876 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078679431 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099220208 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082105993 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096790328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.076652779 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0961169 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084059741 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093460976 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080738462 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098366213 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097282914 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084166258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093858275 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082176168 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09814726 seconds)
  done (took 3.036503943 seconds)
done (took 22.010024325 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144930742 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079437564 seconds)
  done (took 0.970257594 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094963373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112507038 seconds)
  done (took 0.960575637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100012405 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092195138 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.127432874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092707014 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092833084 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076001441 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123059626 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.076575292 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092323682 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076703593 seconds)
  done (took 1.702848209 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080126732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079760706 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099287955 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.111782519 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08638757 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094042629 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080810723 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095641557 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082096926 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089250855 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083419975 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10796505 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.081516935 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.109004105 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097412522 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082221564 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101123215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.079615917 seconds)
  done (took 2.395759318 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07576692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077515639 seconds)
  done (took 0.908862239 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078917222 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074122106 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094787139 seconds)
    (4/7) benchmarking "year"...
    done (took 0.093451285 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074526594 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073945042 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.089467859 seconds)
  done (took 1.334655375 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468103605 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135407438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257306605 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078480353 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.113359622 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.32134219 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073038183 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.095861164 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078739156 seconds)
  done (took 2.414236563 seconds)
done (took 11.43756313 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085815862 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094884783 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.122748484 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.439450222 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111357755 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07357805 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150158375 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246298253 seconds)
done (took 2.084027011 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.138063831 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.59678029 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.420071598 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220453824 seconds)
  done (took 1.996951612 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400861326 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101364035 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082642984 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075089694 seconds)
  done (took 1.423750112 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074010575 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077331254 seconds)
  done (took 0.914395204 seconds)
done (took 5.232611436 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074272475 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.124019549 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074000466 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070442393 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089458853 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073526561 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.089763873 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071678164 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072895725 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091642914 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074064017 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089351653 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074131954 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070576962 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087247761 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073882445 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089268664 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071108672 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070475623 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087745007 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071676875 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089611742 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071527002 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071133935 seconds)
  done (took 2.718284796 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101969068 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091646054 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079584067 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097425297 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078782041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096556058 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08000163 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091433111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080407869 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.203896715 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077344983 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095061607 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07669488 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094894858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077013236 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094917405 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080518158 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091831167 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076436163 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095364483 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07993884 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091342198 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07887747 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095614048 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078092551 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094167126 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076494273 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.090722625 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079354322 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095162889 seconds)
  done (took 3.488694655 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079345418 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070435631 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088959155 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078885762 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088536321 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077682237 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070669156 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089361826 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072571954 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088077882 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073235819 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070923804 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089320242 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072908975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089438578 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075276464 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10156677 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071826721 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070844768 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089290368 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074352365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08854615 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074687067 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071016258 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088912082 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071547989 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08899007 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071642483 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072644805 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089059302 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074943588 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092190097 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071155888 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077197358 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092375486 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072816256 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092663189 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072071794 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072164646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087856741 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071539477 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.088142811 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07230283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07801667 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09221833 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073597653 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0895388 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.073446549 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072007763 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09287851 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071544933 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089724131 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.074013935 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09018697 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.076415974 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070812966 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089818591 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071645986 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.089306691 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072157416 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070708559 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088474053 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074873668 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089848079 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08792784 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09551324 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071816987 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073399085 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092717817 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073912491 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089871604 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086145696 seconds)
  done (took 6.570534491 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077173746 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099982546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073975233 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073565437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08745585 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072284097 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095640914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073038716 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090972953 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090093165 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089889301 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073907117 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073275199 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09322139 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072495113 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091680233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08109096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087059667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071772624 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093060731 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072882728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095656863 seconds)
  done (took 2.603041647 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.203224372 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096291292 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134131472 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08739116 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107120831 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088820121 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096039712 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078921986 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096227629 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08192362 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099345301 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095775275 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09074639 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098916542 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080951173 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09877546 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078243374 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099248901 seconds)
  done (took 2.58393937 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087736494 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09186415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096718926 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09226147 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075646722 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094831391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080616258 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10807833 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077830738 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093141044 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084777948 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094915447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077491204 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092307443 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077497116 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074578934 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095323027 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075412375 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101795599 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097419311 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080182106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101950728 seconds)
  done (took 2.725876418 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090598369 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094573297 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094336641 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09596638 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073513494 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093512484 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.081712057 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091974839 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.081394832 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.076658517 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093132869 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076370055 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09748194 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074556546 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097466439 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075909352 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095039663 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075347947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094272893 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.073993972 seconds)
  done (took 2.505027511 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113649418 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107552613 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089532098 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117425491 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089237846 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107843658 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117132261 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090134533 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106421462 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102420806 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106587152 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089137627 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116979635 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113822185 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089798392 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117171029 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099440598 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116600125 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106827024 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089382499 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119484184 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089524007 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117230719 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092345793 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106801946 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089304273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1075801 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113152547 seconds)
  done (took 3.702977562 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07476284 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074399462 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090210956 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071932924 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071687421 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089794568 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072876153 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.089939874 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075363942 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072166268 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092273369 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074412306 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092065153 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074896234 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077280785 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091613791 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074974305 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090081469 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072827643 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071570034 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091629888 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075263333 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092185702 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073081679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072269165 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092517352 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07222597 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089647719 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074956937 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072126564 seconds)
  done (took 3.180416773 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083087371 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098368134 seconds)
  done (took 0.964893632 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072219049 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10855136 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072734593 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078338107 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09815905 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075006609 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102292626 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080170827 seconds)
  done (took 1.469364388 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.093348582 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110725108 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081088948 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105173949 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093723967 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.110053371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134650518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099820203 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081946069 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09239256 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.091672909 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093177674 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081531017 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075516703 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099145898 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081745932 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095850823 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08577492 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100285797 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077708355 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099223076 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086152039 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095446841 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.078309422 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076633152 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103230283 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084751742 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102281267 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078089987 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103297861 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.081103938 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087413064 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079868719 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098733304 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.075766692 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110276248 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088060952 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096659631 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084514876 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098620698 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084486182 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07370337 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098933505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081265226 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103529173 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.079956095 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099601039 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074122627 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091856842 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077907686 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.07400997 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092724336 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070388778 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101306072 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.079639404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106984882 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078101472 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095595279 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078095054 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.095981633 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081954526 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07820122 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096002468 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079111603 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10034228 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.080029665 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101485748 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074522739 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087834502 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077039114 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084258696 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115962107 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.101641811 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.080674077 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080813256 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094560676 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079189357 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099558736 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082526716 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102542746 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080498788 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100324632 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083362621 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094111581 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078003819 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100312558 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079092307 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.078630297 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09148269 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090649204 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096200597 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07582691 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.091403714 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084133882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.096518119 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079461343 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.073659192 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101571415 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070460214 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098322733 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080657085 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094912989 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.084001409 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099967578 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081772166 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.102165674 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.086752751 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075635297 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096830706 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073107914 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10036293 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075787928 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.1020476 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070844617 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096604069 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.078608335 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.080950732 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10121965 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077996591 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098638112 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083482989 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.100735277 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07817779 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090989149 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.079681061 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098659589 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08438486 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101361713 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078265657 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07415527 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093100072 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.080050222 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098374974 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081179135 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099592193 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079018731 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070851556 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095033067 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.080851959 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.102972459 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076075835 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094750144 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080285198 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094758592 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07948359 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.099023372 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07780755 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.074987551 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098933818 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078111657 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093304496 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084781775 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097967611 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078483593 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.097638503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084257549 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079044205 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098946048 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07855959 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099667773 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081508736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.093629321 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075641948 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09643382 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084893499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.078559772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093170811 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073482515 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10036795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.073950017 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09822718 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.075322475 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078216084 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100134357 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077357128 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097932572 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076719308 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110236254 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089078165 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100267999 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0814273 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.104967426 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080173808 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096230573 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081101346 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081289401 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099918401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083105639 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100518558 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081336908 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097746763 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07306854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100697316 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08348165 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093724813 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077170727 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.074767977 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099333395 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08272889 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099642965 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.080996053 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096931889 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076422986 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103142321 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.079134561 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08007891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.093945519 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080513274 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100261368 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082186976 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100527603 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.085629437 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098264913 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074342009 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102966924 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078201961 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082279713 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093348769 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0743258 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.093251381 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082010637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098118933 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.079073028 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070564526 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102545006 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084686704 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.096156337 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075887178 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099933953 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085696278 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096481033 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079763726 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079643152 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100004318 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089788111 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094547391 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079584677 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10455715 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.080644295 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088975218 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.081961076 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097123591 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077338957 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.078819158 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096642217 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080326816 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101178231 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081588022 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089290616 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.078719449 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097201506 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.075030756 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.074863501 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101649233 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.079980178 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.097017262 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085461506 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100993964 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08161914 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099531719 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.080664707 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100344479 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.081374028 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078976105 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100630861 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.078596601 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094557242 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.079196123 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.093887017 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077155677 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.096460468 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.080506765 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079262836 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101023628 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080151832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095268048 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.079031883 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10098069 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077552153 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095820212 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075914299 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079980445 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096032118 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.076858862 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097820271 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074719506 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102956481 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081539853 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084069976 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095967095 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07309953 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099979214 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.079216261 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102037745 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082007874 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100551504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078135537 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080211132 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098488631 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085381522 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092635625 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.086450228 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102446086 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07690765 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098774872 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.076574311 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.096833903 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.075682642 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.078157972 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109613871 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.077019971 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099671739 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.081475096 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09837407 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077332458 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077521492 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101093062 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077178367 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101333728 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.070837624 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095144045 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076682997 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081629545 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103261583 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081495343 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.095958312 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.079910066 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102070585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079784741 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093095668 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.084227331 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102650368 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081840146 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104530547 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.075861141 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.078483376 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106162678 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071613331 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098652035 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077794982 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.094277527 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085211956 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082035491 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105215555 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07664238 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095405392 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074315429 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101169907 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08035175 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072181794 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097895652 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080052553 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.095135257 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079657608 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101257186 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.079908668 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101267654 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084959474 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080565673 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097605887 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082084105 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093445387 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.076018495 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096005256 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08024089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.082489797 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093871058 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.074509089 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101166991 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07913745 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097464283 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081161298 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.078968815 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103764529 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080362958 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0992873 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086106363 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091515171 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080043599 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100907674 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081615967 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076632371 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.100522424 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080676563 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102657893 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084868253 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099846928 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077935219 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100484925 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078907095 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100646097 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081335823 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08226985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09567649 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083920345 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105995539 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078739129 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099373196 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077118732 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.096944191 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.082308632 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083109035 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.099199102 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085199898 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097225018 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07912232 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103292455 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082174306 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100178951 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082909448 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078321923 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102817614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.076023481 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.105317235 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.077107794 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101965033 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.079361628 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.094669473 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081194799 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081387454 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099911409 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0819538 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101929703 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.076412453 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.096017409 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078501722 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.099382376 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086756566 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105047683 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.080427247 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080330433 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095245202 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075060381 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102976691 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.075070271 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098540407 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.080888651 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083720157 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100080868 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.078548233 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099658339 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.085514723 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103700445 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.082157496 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095118248 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.082468828 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102819934 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.080280816 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078864259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096220903 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08314752 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.102890643 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.078725982 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.096341048 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085778691 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101658618 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083073136 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098047389 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078360877 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07801783 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095677183 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083402952 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.099483754 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08459811 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100108661 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082095197 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107562882 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.075579118 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077626674 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105794488 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081845056 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.104189748 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076206609 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.098652697 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084283619 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10302476 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076483316 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077084318 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.096337471 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.080046983 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096801801 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0768072 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107324716 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.085631146 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099505966 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080883259 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080586743 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096261509 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076351507 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096789968 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083415641 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099470077 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.086925852 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096325908 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077490431 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076280729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10189214 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081027163 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.100210503 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075174014 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09593734 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076494078 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.080060401 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104516271 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080490019 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101696095 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081024941 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100036907 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.078952464 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107270872 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075209042 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08247224 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107409888 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083336699 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098327428 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.083763006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106122206 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082798952 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095825716 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083599916 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099524698 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078323513 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083535034 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103542907 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11193917 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081487099 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076839975 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101219458 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.081048517 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.096875986 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085745489 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103498673 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083306474 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.102913812 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079520505 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084455142 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100275309 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083783568 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.101470471 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.080311639 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100838185 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0779797 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099361018 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.076225463 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083675239 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10321409 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082021033 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104906549 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077746937 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107766528 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.087095038 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.099712952 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075139459 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078174391 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098223628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077206705 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102690832 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076600263 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099373514 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.079891764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081068677 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09826534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083891157 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.099664783 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084490791 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101586183 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07252176 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07957656 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100914093 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078800838 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095143842 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082845104 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105963803 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08481014 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106179506 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.076010458 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07967096 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09982898 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07929824 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096461416 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084866236 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100390176 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080635036 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.077755738 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101922572 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08438868 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102000142 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084051639 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103811871 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.081380203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104430491 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085877606 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.096111714 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07580934 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.084149958 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099191456 seconds)
  done (took 53.715103791 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122335846 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103558022 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073579639 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093264703 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117670118 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077733219 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074180027 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097136105 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077679135 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106376752 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073518491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09380464 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094466778 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119861686 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117510238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106860096 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074221373 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098069052 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074020812 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077412504 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114006068 seconds)
  done (took 2.81823383 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100514608 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112069579 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089490658 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114981221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104979643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090993468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109961913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111304659 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093921718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105695546 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114905813 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091098017 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105199971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085815678 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105526748 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108357076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093754985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103874669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091820167 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109393918 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108600535 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089762901 seconds)
  done (took 3.074370296 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086377946 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081585006 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102475043 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.073272466 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101304578 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.073276679 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106401527 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.076601927 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085427176 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.09624822 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.077232978 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.096475529 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082713448 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.072625553 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097349684 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076013433 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149498134 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10675344 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082138631 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10335419 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.075584286 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10086546 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076727642 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07688044 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.096887031 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091298047 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103380086 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082314373 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102435618 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.076760618 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081829866 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.095848724 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.079855338 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098422416 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.076903891 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.076580386 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101912932 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082285921 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.096051169 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.07884078 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078472143 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097292303 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082382351 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099983231 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079265472 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.096855854 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.079910451 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082244724 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.093529675 seconds)
  done (took 5.204535645 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.110042229 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150572692 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100974006 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140697013 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.095139852 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111327089 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081229423 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118954371 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09747434 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080577128 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.118141709 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116344322 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082328542 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107839971 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.081974902 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100713891 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083225177 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097523869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086540154 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098468348 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.086400506 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105136899 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11557233 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092947377 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106303359 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080903407 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098566192 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087077421 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112230491 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108012249 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087347942 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109618522 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.096415791 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103977092 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098036479 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084500306 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117784038 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.082505861 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104713121 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076605062 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104899325 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086360501 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105653438 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.097131305 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102615472 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103866358 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081892875 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075277294 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113825652 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103889641 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091554505 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115943371 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106811317 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08211313 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107693642 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096063739 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102006843 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080295276 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105903521 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093016723 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096563726 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086173783 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114872311 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105284685 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090469471 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114015988 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083691783 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106284609 seconds)
  done (took 7.74499775 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110332336 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106689275 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097447659 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118208234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107301286 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.086531959 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107339622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087402443 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107185375 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093728584 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107069034 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153310401 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084019743 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111787441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087183725 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107393809 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08672858 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107449957 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087488349 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107196974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106645789 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097122306 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107397673 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096961262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120135677 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104513163 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086569791 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107557616 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096990174 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107601704 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119855891 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087724083 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107146456 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116639007 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.100395457 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107105879 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081720972 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107504707 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087722802 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107120378 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084374462 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117409671 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107460801 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084241249 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108005914 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087015579 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116781779 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119883409 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092391362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113597445 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087420538 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118041826 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107271629 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087086151 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11734482 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.124703059 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097365842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117605496 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106740883 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09808411 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117650256 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125465616 seconds)
  done (took 7.298687238 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109679613 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112901832 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119972428 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074401965 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075928778 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108491922 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076389887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.09753836 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112912991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092261441 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114942654 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087031425 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111257367 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115693725 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086853086 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110993694 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107601301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086686772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112928835 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087092605 seconds)
  done (took 2.848706077 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087655717 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118938204 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079666603 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107143582 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082510521 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107218636 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08143103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103456015 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080120461 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102873147 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091512819 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111286408 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080400135 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106450449 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090259556 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106959431 seconds)
  done (took 2.389227948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099383122 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120107521 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.102516657 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105928096 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077422964 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104435307 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082090878 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097073794 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075940157 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.116592592 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085358904 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106644397 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082668986 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098272572 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0800694 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10644221 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075455234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086423713 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103085091 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102936675 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105440232 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081166847 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103381257 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081100349 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103476229 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08498721 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107134246 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077540995 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098139604 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083001574 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102705276 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087286746 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097020024 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084248088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097918793 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077521138 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103129434 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082854609 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106294208 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082351067 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077165571 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102848919 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082849684 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101818308 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07490897 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103412827 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075897303 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106261612 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081486896 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103568332 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08281922 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107135275 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086582127 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111471907 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089475282 seconds)
  done (took 5.995000652 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09348214 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104282342 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074638062 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07720006 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103645744 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081620586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104855594 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08114442 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101650152 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077284888 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102835081 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082220154 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080500062 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104400211 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082011966 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104728276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074221931 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101440713 seconds)
  done (took 2.488454576 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085363427 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079714903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108113285 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0797793 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100134191 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082365429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096371495 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077848406 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077256481 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10068431 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079090953 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102663808 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078364008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102817477 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080360238 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100335962 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08147881 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077187555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099835788 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075223724 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102956704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078564441 seconds)
  done (took 2.801424728 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.111478351 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.115979302 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.08616178 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.199742474 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.118245457 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.103404717 seconds)
  done (took 1.594859558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10449696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136165583 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080839905 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102886519 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092209286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10586445 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083684505 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104797407 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094914374 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118345632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104768476 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096482843 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116580324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115899175 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091553684 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113026171 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104539515 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084072979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079922101 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125290586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104912732 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095445608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105280466 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105245957 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085215525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116209052 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095420704 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118039457 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104874562 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095070822 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11326568 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084091314 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118079555 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11922769 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082883383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11750204 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105418533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104277614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113167869 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115384527 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082372145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112261084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095914686 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112520323 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115886799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084353244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111442667 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084205598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105921508 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132320384 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09173792 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116488659 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11254509 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096276463 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117228648 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131766418 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118458355 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095357372 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113055359 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11825245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095119107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112675416 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1159507 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096551821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112697852 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115667003 seconds)
  done (took 7.815632839 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118655299 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102604595 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084681016 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119024484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116239912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085184262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105726381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084410357 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105649831 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081993928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148792325 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105970448 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094380319 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115258839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105441395 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085551375 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105655247 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094742866 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103088202 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132687303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08526993 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116762984 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116652176 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095124018 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119427632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111595448 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084265155 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105915191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084908366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105783637 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113072907 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084397563 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116476426 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081698597 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116903437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084228186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105819647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113279746 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085044898 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113081037 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096072083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126608667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105517043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08452069 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11865228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105355053 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084882544 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103035054 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085506542 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102331738 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097793869 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118493572 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117680763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11701277 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084872086 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104767103 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085442097 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106271883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084915352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112890501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094804154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106431588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1322964 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085122188 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106572866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116471502 seconds)
  done (took 7.683755486 seconds)
done (took 146.749769904 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218168552 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.206367575 seconds)
  done (took 1.283289094 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.095295035 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.133694982 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.093244196 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164022024 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080526729 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113233073 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133510382 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094913587 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101347479 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080143674 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101972926 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082361562 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.145976855 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101679292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.079959654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104455471 seconds)
  done (took 2.574901245 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112213034 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.243188103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.119153868 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078446915 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106515043 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08014417 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.077591229 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109934455 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081687215 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101169826 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080619679 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102749536 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079512133 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080436262 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102338857 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081015021 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100602509 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080277092 seconds)
  done (took 2.685858449 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108433154 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163587046 seconds)
  done (took 1.143632002 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243179155 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.15566301 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.224328617 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361279482 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.180882015 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.326790595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175237638 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.174193288 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166102849 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170425808 seconds)
  done (took 3.044459375 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113591031 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171381588 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290689084 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.148931385 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118751308 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094229457 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150586522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121424027 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101548547 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122974757 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122804567 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.087383417 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132568143 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110844988 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088650841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10864078 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112618302 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.1085059 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089135677 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109412686 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11195116 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102622888 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.089344714 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109165101 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.121768624 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100319028 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103369496 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07949306 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108152956 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088757683 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107007532 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.313883153 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121645495 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144761442 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.11394334 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.144658651 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.086798913 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106097552 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088559956 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.106243341 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.089686124 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.110501155 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093783273 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10829899 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079509158 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10769981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.079443602 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079430783 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108764975 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0881215 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109546324 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08557593 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165197819 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088222937 seconds)
  done (took 7.115891321 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79488915 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147000174 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084407836 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.864357119 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132739687 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119846745 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.760711358 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130881434 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230411137 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768190419 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124518708 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116230285 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199123773 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.224466929 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956158848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.305627165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670656173 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094129835 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136721688 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.142042384 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088872059 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130891646 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122862759 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442583991 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086016775 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105986369 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089108371 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114217199 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152562576 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084359943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107579682 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168450521 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.238522184 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172445351 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107183534 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.082093459 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105216084 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15766456 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264590594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186949227 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168732362 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080039066 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10516364 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092995878 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123843885 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080160509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17495996 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.163460952 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1610008 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085927115 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115468937 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11167582 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092710692 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.151705652 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103766983 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289825553 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309527205 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104783326 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092143577 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120793543 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237826604 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105042776 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.192774198 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131183315 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.203459939 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083983942 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82045244 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15756093 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083900393 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111466124 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089997253 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109787274 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092659831 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160012316 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382862733 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117445629 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086100343 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082444347 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217692248 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084776151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105735392 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154421249 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085099945 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112654663 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095897222 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115880432 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.159752534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.220424046 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116265959 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090774469 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.109781825 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094563028 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107612483 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207914024 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.209694631 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.150970685 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205342998 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115224744 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.155564786 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155815671 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091785384 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181041829 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090103718 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11965325 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094018695 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208929994 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133538257 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084127352 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109086 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.08868564 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135800803 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086478331 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11128107 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.158571921 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4715119 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.177407367 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081327308 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087318072 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112576589 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155230465 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111036384 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234619452 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113047272 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158085824 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089552549 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102735465 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090848853 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.153648407 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116620368 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113870701 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093588636 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112197742 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.222472891 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.18745961 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116796177 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211259488 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.172079762 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112674041 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163858406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091109903 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180638116 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091994204 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114035022 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084803045 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817116362 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.094882554 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112112806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087453361 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183930848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105481421 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084500326 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083940861 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102896418 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794035224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109179798 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.087218622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106079619 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090957365 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11204735 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088100743 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109156095 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.152875489 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219012944 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092623501 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111998017 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084301014 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.152743564 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107527251 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084113776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105712675 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084941054 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11389729 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086037402 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08417494 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183346727 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149617558 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.18910354 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586132621 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083662553 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105930681 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196066496 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105563717 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27623889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091072622 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.215577947 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158094759 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081332554 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306925419 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.15955049 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185620688 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086277025 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.183127991 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081330789 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088387157 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172953447 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083462366 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11030221 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.149792231 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096281068 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116994563 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935636368 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105460877 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221389435 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.080677561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.181001894 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085689484 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114360181 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265014556 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10646348 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099985556 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151881239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109485075 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084612069 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.728759718 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085305306 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115107863 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090188377 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211948818 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.155967285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112736735 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089745996 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115201289 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153578106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205212216 seconds)
  done (took 41.460460962 seconds)
done (took 60.174665176 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258526218 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213391283 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263720318 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164005114 seconds)
  done (took 1.893454483 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170903797 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.120456464 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139703887 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078858906 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.146862931 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101916145 seconds)
  done (took 1.654181031 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363367572 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268482951 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211543264 seconds)
  done (took 1.741635511 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.241021149 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237006562 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461124987 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.313557724 seconds)
  done (took 2.252068232 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198666149 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097156609 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118905939 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110194137 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16269784 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.200896842 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136753626 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145240384 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102418831 seconds)
  done (took 2.217122944 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.159304586 seconds)
done (took 10.819932442 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.126317017 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123197678 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.291943591 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092568026 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.251213539 seconds)
    (6/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.249991364 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111421525 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.270370963 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085154173 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.118071306 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090739255 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.215533688 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.203535998 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.157847427 seconds)
    (15/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.16627555 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111668458 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.189214786 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.174783836 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.163497166 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.194709553 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.15416203 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09380696 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.200247863 seconds)
    (24/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.258111949 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.20987284 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130413351 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.271685392 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.113533841 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 0.150029883 seconds)
    (30/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.101731194 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109267024 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.228175606 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167902521 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.165668242 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.090665722 seconds)
    (36/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.193345689 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.165820674 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.159531994 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185976808 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170420139 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177607003 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.190036046 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.225424452 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.183044348 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066992066 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080875342 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.134118085 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.165810969 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.095829213 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155278356 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0809664 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.112676564 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087541917 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106546437 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1375838 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134156675 seconds)
    (57/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137031135 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.12749451 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088596321 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.091670589 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203400526 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067618419 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.080001421 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110107312 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.105451304 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.195795673 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130445471 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151509645 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.201870251 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102549436 seconds)
    (71/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.148815214 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.094201208 seconds)
    (73/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087120985 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.079866178 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117777787 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083246467 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.1114464 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196540283 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084611511 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121067767 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.209257339 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.111395482 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175771984 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092253269 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09429492 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.104258959 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.105769722 seconds)
    (88/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.160236865 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087861425 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130073072 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176987572 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173429468 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.175265371 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106449549 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08892142 seconds)
    (96/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114611774 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172630855 seconds)
    (98/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092169896 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092694905 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.103475896 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068697332 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096790614 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129304669 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130710595 seconds)
    (105/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220118735 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068143166 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068224804 seconds)
    (108/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197846983 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132436673 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069038383 seconds)
    (111/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.132305992 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080412515 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112595482 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.167208035 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.233897798 seconds)
    (116/309) benchmarking ("sort", Float64, false)...
    done (took 0.174448263 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195859003 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.197474618 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171773943 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104457517 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.188788882 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079597538 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.192776425 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072625011 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.188417525 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091149644 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.191090969 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111890125 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068433258 seconds)
    (130/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.068709934 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111550452 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.181304622 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091082847 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111594168 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069230079 seconds)
    (136/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.079791045 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109475761 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.103672703 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105604706 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068819701 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.20541359 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089329392 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093408972 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193220383 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081902902 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088967729 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10402328 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088420436 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110878547 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067329177 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071984066 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104627839 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083176866 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.114673014 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120114923 seconds)
    (156/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.161203445 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.080534297 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173930378 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.158574308 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114625505 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131711153 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085911267 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09070794 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.20961573 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105602631 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.122150035 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117062517 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138743732 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.09204389 seconds)
    (170/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06830478 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.101577512 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.103191883 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082465267 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11123489 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108859992 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.125504393 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093659901 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.115855681 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069811095 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130366411 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091406821 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.080837651 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121405954 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.128760667 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.104153054 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.149626768 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.081160176 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.131376052 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080525338 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079227401 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09228793 seconds)
    (192/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088340607 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114885109 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.07736025 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.238440345 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071129192 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.108639727 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.080954254 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080662554 seconds)
    (200/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113099282 seconds)
    (201/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090989823 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.119799772 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.08799003 seconds)
    (204/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094220866 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111710212 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09462121 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.081607742 seconds)
    (208/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069931594 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.1764759 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.19849695 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079931705 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110272338 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096936659 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.092963615 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069730428 seconds)
    (216/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079888188 seconds)
    (217/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.105927723 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122461407 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.225704713 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093745648 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141237061 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.12837801 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090839422 seconds)
    (224/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093594748 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.227528006 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167095921 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.160755457 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069107928 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.132003809 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086558307 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093110144 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082987455 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105502978 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.095485839 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077474116 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.131231621 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06897706 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09233716 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080736618 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134359841 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081345584 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071766698 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.093163234 seconds)
    (244/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069139391 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068279935 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094595323 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081017333 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115782858 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.087054658 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.106637594 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.169188596 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112133352 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070355765 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.224071638 seconds)
    (255/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068784915 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113742051 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08266566 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.107912947 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114345844 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.120145514 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068324232 seconds)
    (262/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069623483 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.129430865 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.093499507 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.093373417 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069562742 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083233887 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.107076669 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068721428 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.106285732 seconds)
    (271/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079736079 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087469992 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10859167 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06970173 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.107293473 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089183769 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078120035 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.12855042 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082151806 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.104296968 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07873123 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.0808255 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.103361179 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08290916 seconds)
    (285/309) benchmarking ("sort", Int8, false)...
    done (took 0.190118938 seconds)
    (286/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092994762 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069785472 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.11444023 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080403843 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069354441 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093912881 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080310781 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08109162 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104819871 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068360863 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.160756424 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069473081 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124034613 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069381085 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.19204584 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069207509 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.104223147 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.083349981 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.150351371 seconds)
    (305/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069393529 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.156568377 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069621022 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081227007 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093766984 seconds)
  done (took 38.639058955 seconds)
done (took 39.544479759 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094122856 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133375106 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091408381 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.109884272 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.118535505 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095722118 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.114094432 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093386881 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11796165 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095754391 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117440013 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071753614 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117089785 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09233739 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.116579811 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108664636 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119057549 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088199116 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.084225067 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.104677163 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084526607 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.105341536 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082539277 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071290431 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.116891209 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090246813 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111356954 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092738529 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105972439 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081837618 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.081189242 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11262245 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081493757 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119566305 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088163655 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.109887373 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093203278 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091562103 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.107660929 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081470528 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114014931 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081387751 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.087952502 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.113519491 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082945628 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104400542 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.084666461 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119751363 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109460696 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107187101 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.089859051 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091668063 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.114706931 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087718481 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104383949 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.084635853 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.10512618 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109848634 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109861356 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083325032 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089631065 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113447057 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080517617 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.109988657 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.084579177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115955281 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092985594 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080418718 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115609989 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087066301 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105154344 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085095487 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080515456 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105657589 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091028473 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.116835225 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080119039 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.083121935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.112911265 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086987113 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.104863044 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083746433 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107695651 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.082925833 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083398206 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096379752 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080672465 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087205252 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104497159 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.084658374 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111742256 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088586711 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107619226 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092526247 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081337352 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.104711244 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.0823422 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106305963 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083219793 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080669063 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105268708 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08308043 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115205848 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083126392 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083607503 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117675972 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082224828 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112102344 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080719956 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080383726 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.121491643 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092032651 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.105693737 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084219473 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.104574643 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.083383888 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081151269 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106444955 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081606053 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.106433362 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084037489 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081506721 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107967747 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083137227 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120672239 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081483874 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080584392 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107446631 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081338328 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.111413086 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08238525 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082191884 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107250829 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079651052 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109092949 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081461949 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083513608 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107699327 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.084739371 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.108413413 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.084876305 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.08613105 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107017023 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080953328 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.105145754 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076800607 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084018404 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109678369 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083703873 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.10681673 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083536962 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08208765 seconds)
done (took 15.580633819 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082062037 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.196487044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.142676323 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.114957026 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126595025 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.081879356 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116740343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.112863762 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108462353 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137702231 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.104770037 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.126216552 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120274761 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105372934 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.081887986 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.08558956 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107566377 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097885273 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144294384 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128552591 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116604661 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104880265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111376489 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130831536 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091097861 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134199932 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082717542 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110634787 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085067764 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123187744 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102327689 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110646815 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082014924 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128751577 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099611106 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114337286 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.081715332 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088983122 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106004424 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081985033 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.129521637 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104386856 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11250998 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088266546 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110404626 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085007719 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083384636 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115799597 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092218834 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11125943 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096566812 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136446982 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109191361 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091383542 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105511739 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092310445 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.116066035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084441161 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082390188 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109005048 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081614338 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110522328 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097433886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131791759 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086247141 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115770911 seconds)
  done (took 8.047179656 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.098278618 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135594949 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099434128 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12576608 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082326852 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083241511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108068028 seconds)
  done (took 1.702168448 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083038981 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108665918 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133002815 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108323633 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130458696 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127478502 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093314275 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083530186 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127553867 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084204285 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132250883 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123074723 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109815131 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.090923453 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135730953 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083082762 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.134816525 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082327927 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110776102 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110149519 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111031583 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10440814 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109987185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083293438 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100420228 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.109274912 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158145861 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087778509 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084336558 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11158799 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08140637 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14877285 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100545523 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120656256 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083020737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125674669 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100923126 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105945575 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.098597422 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114047208 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100017593 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083564529 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109331117 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081279706 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112289252 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096206566 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112205691 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.083704512 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086253113 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132018055 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.083928794 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124683188 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083157468 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112325114 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.085226905 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088876991 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118268862 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084214954 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130971256 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08482037 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128693684 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102644174 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125506585 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.102956187 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110593172 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.100623325 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128992623 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.085658247 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085353217 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112144638 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103483151 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.106271518 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085113952 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.122649284 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.085170725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.109759331 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135073399 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084066669 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120238679 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08366798 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108441627 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.083846828 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135566492 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087146932 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08327556 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112218534 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086432065 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106841208 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083144795 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086533739 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106918488 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085171022 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111158797 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084544746 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111591208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104208038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084393197 seconds)
  done (took 11.083390996 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.084679625 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084691423 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112427512 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084920184 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109387227 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085380867 seconds)
  done (took 1.548695717 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112721373 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.110044803 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097822893 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113604807 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.123777105 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133171317 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108631329 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118306266 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10099125 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120329569 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108406936 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135383114 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113214348 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114826877 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10837739 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113365602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108513187 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115027747 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094255302 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115037471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100723157 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114475725 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089271991 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128253734 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093607924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113943995 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089422864 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121208281 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095294638 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118348773 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089206161 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118617061 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089265032 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118462677 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109150226 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115448534 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088463315 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120556464 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090176561 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119068669 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110153438 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114102931 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.094604051 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120104434 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093224472 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.115214259 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095049543 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114404935 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10882025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120041366 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095204354 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.088163118 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118430093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095130962 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115093872 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092869152 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119964706 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108987486 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11415234 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.08981096 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.110756931 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09432619 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119016646 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093454906 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11897835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095087654 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114806513 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089262843 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114857357 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089560531 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120538658 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.085614616 seconds)
  done (took 8.746671225 seconds)
done (took 32.096953717 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.680551807 seconds)
  done (took 1.660599553 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.696903094 seconds)
  done (took 1.679343677 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.225192025 seconds)
  done (took 18.213300179 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.456920468 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.548138159 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.821726249 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155662639 seconds)
  done (took 2.964252223 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.932115411 seconds)
  done (took 1.93535074 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23800536 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225448332 seconds)
  done (took 1.45060481 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770467508 seconds)
  done (took 1.764965968 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.431400451 seconds)
  done (took 2.426713032 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321590773 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152157042 seconds)
  done (took 1.475527882 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563294407 seconds)
  done (took 1.561693252 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.739021352 seconds)
  done (took 7.739576925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236917365 seconds)
  done (took 1.247875549 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285908494 seconds)
  done (took 1.286799127 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.562193672 seconds)
  done (took 4.563780478 seconds)
done (took 50.962843621 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093063574 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.097027016 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122432492 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.093390179 seconds)
  done (took 1.400376884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.098572922 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.089828152 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124179462 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089272079 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124229396 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089458565 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119153087 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.1005597 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115892231 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091262622 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115920722 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089361851 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.11870522 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092015037 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11299772 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093163485 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122860061 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090245361 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093199423 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116635879 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087638383 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118111258 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093794671 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.114607166 seconds)
  done (took 3.510618655 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094683612 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089156639 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116378199 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088528653 seconds)
  done (took 1.393232552 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094226658 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100158034 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.125538353 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093781617 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127798984 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099118048 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112638544 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086875744 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11410344 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.0938723 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084342158 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.133309638 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127546761 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093614128 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095644654 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109196884 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085345261 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.125905565 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094442902 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121014422 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087713809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119053463 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.08497718 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101059136 seconds)
  done (took 3.521052287 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165030968 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122659547 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107770014 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116946203 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128243957 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.136217001 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08199496 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135829849 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082907597 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.12449498 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086887769 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.154343291 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.095471922 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109446185 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08310857 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082053053 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121051965 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.09539106 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111373764 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097315484 seconds)
  done (took 3.252005809 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.092475201 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.086255327 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.108440651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085356584 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122530435 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.089700504 seconds)
  done (took 1.601757952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090606505 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08380302 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114095191 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085646393 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115505368 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083511574 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083103594 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110716495 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084544857 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109479642 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085817667 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083225085 seconds)
  done (took 2.146243062 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499283609 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.086515932 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.111886124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107422944 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094099303 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082428865 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12710636 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086177223 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138323186 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083233253 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.110470041 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086450397 seconds)
  done (took 2.630654883 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202887991 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09353624 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257283707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338954926 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153088936 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161061946 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272313732 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160374911 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179008137 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107750109 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188321683 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154884216 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150250424 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17381009 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109595505 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153442423 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1696382 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195246915 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144338298 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199886757 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157172647 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164277738 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174310114 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148459082 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107527462 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153802434 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115956963 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098871127 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168310893 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164425951 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167902732 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145108555 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13413912 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194294639 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202766668 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171264641 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273609754 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12886117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149836391 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16015199 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242640707 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109689646 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187781451 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149794011 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126040007 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177051379 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150519432 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173642766 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101651863 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137128204 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174870473 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170978989 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173477113 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132606011 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291497893 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118703991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139710985 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176148763 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180632618 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182815261 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162853245 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11469198 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1787454 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175632349 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172378837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112505413 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160309724 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121460204 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168702088 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189150347 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171637059 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158617457 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177488304 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130772617 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158012392 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163934713 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120764751 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172897797 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155425522 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.089361936 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144736396 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134325232 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096758492 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18982 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09198007 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224084384 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104368619 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168632537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196617052 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153348729 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157429394 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160495521 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160746002 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115246405 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11339634 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113855748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148841191 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151684338 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100901298 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151454506 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13838598 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.095440737 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146956733 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119087282 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126493775 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123498613 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158712911 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158849083 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094091163 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160399648 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145788145 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.118455895 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164481631 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17806214 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129767419 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099716951 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187199276 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15260349 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130305318 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17003242 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182919837 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1506852 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106458117 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16161571 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186661326 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138520044 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18168097 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136115188 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103331545 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136512257 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154436358 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123852258 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154238247 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125785887 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120087406 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212046016 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.093003582 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132909515 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168674897 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095690591 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124956844 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110178246 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132688621 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104759357 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.137985046 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132318595 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123570967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154802943 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149761479 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149983254 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137568683 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183948558 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101872369 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147560786 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143588133 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088919302 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170642467 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178702264 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125604648 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190289462 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159771114 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188769171 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157501033 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099369658 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171762846 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125447786 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.087553618 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159819421 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156193441 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157462465 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176195561 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184608551 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159017212 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147234272 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143862623 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130994632 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1582049 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14995508 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.132485412 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129327645 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153736742 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118530279 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092524631 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124447346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110045791 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128338874 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101411503 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202031927 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158341715 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180932667 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154270965 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109013757 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176231048 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121436058 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159046916 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.164055241 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106911927 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177063208 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17506574 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163302365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139151106 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166864522 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088244841 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119285636 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101469641 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160398148 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128276406 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10321245 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138991662 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176438209 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167637283 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115445838 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193548183 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160806114 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185642157 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.089388174 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164852391 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162453448 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153411299 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.145876868 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128778336 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.118695846 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171685232 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137666089 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183711136 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156555913 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162891762 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187750761 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146903511 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099195897 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145277144 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160575001 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135554572 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132288623 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141754336 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132502712 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1183727 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.12314642 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093795274 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16590937 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139860052 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16994548 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143975166 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163737875 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094735565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139766279 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15709712 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142550255 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083226696 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160312875 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177568545 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13906006 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124549987 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165663075 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126356307 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.300811396 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181016751 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177136474 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132138735 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110312593 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158404028 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158305658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157563886 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174593303 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114299183 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172872926 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155023664 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.131254927 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103837309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143997513 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145642398 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108169473 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128425124 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146847916 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104609036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170231328 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138497663 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154339882 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158457397 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11735127 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139295682 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109559821 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192410099 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152855005 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172553844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145860941 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158647103 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19081146 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092528937 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125258401 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095425671 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174166804 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128434573 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153633478 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.178415408 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189711549 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153912967 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160265472 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105256935 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11530258 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124679817 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144661915 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218008609 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110716249 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132181934 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180522565 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111743194 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127878355 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16045876 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276052635 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139138029 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139593613 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109860227 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269896046 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093454512 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126542723 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155587077 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164740343 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103285422 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169219671 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158333936 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111004187 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156244213 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132721344 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181726837 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197850159 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162582389 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166864219 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.099355389 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152932379 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156861947 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169395571 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139040458 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105080618 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159174428 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176607007 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180542591 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129027763 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127215837 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157805261 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154693594 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162903279 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130454005 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191457895 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098362039 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159344858 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138139879 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091542932 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152981981 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.179176935 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129746663 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165811598 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153410344 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100349492 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122913876 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118554633 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153070291 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136757983 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094069443 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16494092 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120041702 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157235738 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144765153 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127340219 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149788649 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1121351 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131638894 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140343183 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111350463 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13229994 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135189312 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169783334 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125906299 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170622015 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168701196 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159005184 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154342438 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112505657 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665032848 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.095180086 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17495635 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14317355 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178566348 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145843227 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160878182 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126359534 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14600823 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160781705 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14428397 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225581763 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12856749 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153176565 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127720656 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140478811 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109709911 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127189926 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11770223 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156784448 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136658127 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132322717 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122663154 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141280502 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129982151 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106694159 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177897969 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142866794 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170981473 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174357659 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105364946 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162484391 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165907494 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127021931 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155884086 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135980796 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138568006 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145275713 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.098066444 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131315483 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175678943 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091951107 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156780068 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156126256 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156393121 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157480563 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101435355 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15564179 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137665911 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126907674 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127027447 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147125986 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152935975 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098982821 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124516633 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121935371 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149344882 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.145593185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093017082 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160641213 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174151805 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.091885703 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128791239 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274526345 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1244084 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211043263 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110004915 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130875334 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110138179 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143663527 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147924822 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154777971 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.096721026 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127277958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.09785797 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162341752 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110862632 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152035721 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178523599 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151710428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193353367 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132734988 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.244146082 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135015245 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150096813 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090975396 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124459008 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109621821 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129663337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137845607 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182640753 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173923892 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.113467568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12855067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094143656 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.120426478 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100857038 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15718675 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149611586 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151368221 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109680575 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110436017 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110951759 seconds)
  done (took 72.257791522 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152124233 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.143099938 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.159148965 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.214727187 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176482422 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264798806 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.220777403 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250471062 seconds)
  done (took 2.685235609 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.089015823 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.138193619 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123289508 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130681533 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.111955972 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087394161 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.321248099 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.128198648 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085197103 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142401351 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130201211 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115571396 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.52318806 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085752647 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.111953155 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08098078 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.111385434 seconds)
  done (took 3.612322171 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.464725086 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719488173 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.472030137 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.11910064 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.137672043 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.129218399 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.823303463 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191046912 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.111688589 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.47924849 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.75098996 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175757202 seconds)
  done (took 18.674813199 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118633446 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112143886 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158471219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158682832 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115743567 seconds)
  done (took 1.77289471 seconds)
done (took 119.455071878 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.098329581 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40154269 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073626306 seconds)
  done (took 1.615824605 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10655882 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135250639 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106938939 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133465545 seconds)
  done (took 1.590682037 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092655304 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094535356 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135408359 seconds)
  done (took 1.424637163 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.309711876 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159120158 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.158167235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.100335882 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096308381 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.12553623 seconds)
  done (took 1.431036242 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092586497 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094581559 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120751175 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096589279 seconds)
  done (took 1.508457357 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098773176 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072992699 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103667092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076120242 seconds)
  done (took 1.460418419 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.108108328 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126850317 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099584572 seconds)
  done (took 1.448636045 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12328799 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.135204746 seconds)
  done (took 1.372955716 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099251043 seconds)
  done (took 1.209123256 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.111939559 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.163529112 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.171100044 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115714282 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.170498286 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14827296 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087401647 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087462824 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.117681226 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08747355 seconds)
  done (took 2.376148204 seconds)
done (took 17.274885238 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101233778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423113002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384543351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140416375 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709500971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405091643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035519975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142163989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163529051 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087083144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132732856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.66978365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017360516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343432044 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004257313 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.436621821 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668943911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11635283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087307535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115861561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021385072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115461896 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087818099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086956165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697446326 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391861439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117254585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.438414873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115618517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094481467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373677884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116403175 seconds)
  done (took 16.944480429 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092991362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175258122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098792644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13228061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094580805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117035782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.090883018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08946376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178263237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116437673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104435246 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115555679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.091496075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087926821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136649738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087568105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117213924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087703176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116272743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087597976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13467019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087148484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087700434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116810843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087145512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12927574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088100718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.115352484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088562109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095355953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118420092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088407668 seconds)
  done (took 4.572973211 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138747408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183251361 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098804705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151644092 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16881053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089771113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194527323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143126358 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151623448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117045915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104484104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116970972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121523243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117850817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107473691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117025376 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08820505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11704813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087591951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087437711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135169401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087496473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117034032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087648818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117249061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100963876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117283708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08788218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086969776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124216924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090279292 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117537747 seconds)
  done (took 4.895539288 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.091146722 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094482841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132093162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.102975832 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117802467 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.09185985 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120798929 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089156601 seconds)
  done (took 1.961472807 seconds)
done (took 29.491834005 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.098122948 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.089558217 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.122379362 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101078463 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.121148771 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100251189 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115696346 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.094202239 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.093963918 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.121541865 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.095043049 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11617737 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090701661 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.08619207 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.123168968 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.087622554 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130094773 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.090978151 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.130792158 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101742415 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118698543 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.095429457 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.093009256 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131512379 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101077134 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130770867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.09933644 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122653865 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088478775 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117997458 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100215639 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.136838188 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.087651543 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.101243001 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.116561919 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.087230373 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.116641014 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089689394 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130903434 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.094838893 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.089578321 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.124322415 seconds)
  done (took 5.597430288 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113432491 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14649229 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109380716 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.11300704 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089509307 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086191082 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142546451 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081443596 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113057998 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112234463 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.105622587 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079160767 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080142981 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104490706 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078468101 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077100497 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111143225 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077208196 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107616654 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07886366 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081332496 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.104705111 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080436789 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079756025 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106483643 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084077735 seconds)
  done (took 3.67333798 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094047885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103166293 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138534216 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.171350985 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121992357 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126629117 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097263326 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136007482 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104147587 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.08705349 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119674009 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115294 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136542514 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.094880756 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120067353 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102660201 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131827621 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089458258 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092491428 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139093955 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103402633 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127945692 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107872415 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128960121 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087219241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088714109 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122413627 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096585066 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125413987 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095782304 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123626144 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090484357 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.118188381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.099395488 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12299667 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.088864597 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106922608 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127594709 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097105143 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118899668 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.091179839 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090043707 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138796433 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164277368 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088135514 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094456449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124879666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096390445 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.1188103 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10572178 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12803485 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088090961 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09005429 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118349997 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088952216 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133727909 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089518574 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119114515 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10034668 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.0898128 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129857991 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.091880945 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132436939 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.088520331 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124028633 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089131057 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088132478 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117335452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110516182 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125027192 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.129781564 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118710882 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088293222 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126832992 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094080859 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124629896 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.087679763 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102052115 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127382696 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090476963 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129841973 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.089702448 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119246119 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105967819 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.089527499 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119159545 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.088557538 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123433387 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.090334039 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089122538 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131773556 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.087875122 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120788154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101499191 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117550909 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.089619896 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123455378 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09270752 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.08655151 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131827267 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093747655 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.118648524 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098750412 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118316612 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091042467 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097316654 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122662634 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087192176 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122404648 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.093608924 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118008465 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091549628 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.089985596 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120819669 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.096734311 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125401201 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091157257 seconds)
  done (took 13.88873851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226800936 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215996468 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.090028571 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.208149691 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131667597 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.103867759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209661665 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155430706 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090103772 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.087469343 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.127557042 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.160438806 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124450993 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.165461313 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.101189711 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115889944 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106990467 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163493499 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211239866 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.206409475 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139124505 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.097298431 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.08920316 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.119422566 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.090753202 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.129068007 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.104584291 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129547265 seconds)
  done (took 5.042583339 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104867052 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150818523 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093787196 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14116386 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113979966 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118724411 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09284205 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11948794 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10114256 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132918195 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088010217 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124639497 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095057434 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097315799 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118591465 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097183515 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128941315 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090457812 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12151915 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092364001 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.095465959 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135621255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12212834 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.087803059 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097258519 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118091378 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089469396 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139003669 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.118116622 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11054418 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085281392 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.124807753 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.097800523 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120092494 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087690794 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090073487 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120792672 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090220998 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120476192 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086385911 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086504977 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109792452 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087446849 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133409479 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09490904 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112595475 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.093997454 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123279194 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089230704 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08490492 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120867919 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091240147 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121559191 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.095898369 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092145939 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119276662 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.090929819 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119189444 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095087716 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089793587 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116963622 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086975178 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123004528 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091410077 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127189557 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093288647 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11633148 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.090861976 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09259597 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126128049 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090237955 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.121304742 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.085823927 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090615061 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121485857 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.092923913 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12260025 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.086836802 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087493734 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118740124 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077901849 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118783675 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076063338 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09115875 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116599423 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.085886215 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.12091957 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.094534324 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135448995 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.089606314 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.127094195 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.08912369 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087707069 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121924475 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085939213 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.121435877 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.103974607 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138305878 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087973573 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116845079 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10168343 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09056898 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118495189 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078371724 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126162625 seconds)
  done (took 12.241710956 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.111252587 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.144242113 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090666789 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.101585229 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.146051395 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.111133573 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126872306 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.095066087 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121597655 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.106245113 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.119358467 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097849372 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092082142 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127855811 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.110349748 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127762607 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090409383 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.129166502 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.096472116 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.154019207 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.102001843 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.134221607 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.099250639 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088328268 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123556937 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.10098194 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.147832978 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.099349677 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.128466697 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.10317634 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.129015675 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.114635582 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.10427762 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123146406 seconds)
  done (took 5.046245743 seconds)
done (took 46.615355188 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.236561814 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435490698 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.208032255 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.091342754 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.272252199 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.241680598 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220254586 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.211218567 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.345658519 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.211073768 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4588847 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.804466198 seconds)
done (took 58.876757126 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.274115589 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368723718 seconds)
    (2/2) benchmarking "String"...
    done (took 1.509703864 seconds)
  done (took 4.031072869 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.920546871 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.181350279 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473663864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.210006213 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.213283449 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.50581771 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.921438492 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.625961602 seconds)
  done (took 28.274030502 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.209829552 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.622030009 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.049256358 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.038083129 seconds)
  done (took 19.063193226 seconds)
done (took 61.708109597 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.237877321 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.277225357 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.257098627 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197574706 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324411652 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.247910341 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.307301431 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.321817994 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.237976165 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.205743637 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.23241873 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.214801847 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218890313 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.360735974 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.223163358 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.214565432 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.302900889 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.885366824 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62637536 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.212753791 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.233095593 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.287717316 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.226287431 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.221706509 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.249694534 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.216544059 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.222837118 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.221060892 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.945671251 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.216685449 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.233881369 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.656350208 seconds)
  done (took 191.18166198 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.212270755 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.179821032 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.282632241 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.250131997 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.630204385 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.41519263 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.35178873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.697828279 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.232733661 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.232166914 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.431338537 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216305581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.499646138 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.226659039 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.223383608 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.262795323 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.48618769 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507708311 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233504403 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.486037298 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220960011 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.480312815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.387138231 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397388575 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.251178523 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.263706075 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22991022 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.246695183 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.407174904 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.41752203 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217225226 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.248827393 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86612592 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.077258475 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.22479039 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.243157269 seconds)
  done (took 150.383635301 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.518833256 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.214197922 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.214587697 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.214282958 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215043883 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.248788159 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214117793 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81624881 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819235215 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.786516051 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.527579174 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218818711 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.66821697 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502263765 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.215149791 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309653967 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.229119582 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.219147902 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.231137982 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241255834 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217320797 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215503315 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819334628 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229619034 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.241198673 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.39824443 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.231712795 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248701298 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.612714029 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216557651 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249629858 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552534891 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265949671 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215909706 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631910217 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.756971033 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331641291 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217831881 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249289563 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.217530391 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.500534138 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217446626 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21578946 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.220287762 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942526783 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220348136 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.820202912 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220613869 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.183606969 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.217354691 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21694615 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.649816058 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.984980847 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.221065453 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217496608 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.217758079 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.22007644 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217424181 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217357923 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250862569 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.67129573 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.321109829 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.219243981 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.222293906 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251621424 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.218078548 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.63449132 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221189208 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.544705761 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.27488213 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.439577087 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825096951 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220785084 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318292889 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341442211 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219452728 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217925969 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219670576 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218926454 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.33165079 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.218926396 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.662766735 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.3981408 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236294147 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.684998716 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321306998 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.221238293 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.667959622 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222720692 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.219172286 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.99555135 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324591054 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.220551515 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.220752894 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219197627 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.658273598 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826370841 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.493473261 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.222944178 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.798545589 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.222059698 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.668308458 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.797293829 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.952898841 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.224190812 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334777431 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399743069 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.236371429 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222612214 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219376664 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.689232775 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224175079 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275932221 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.22352695 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.620056592 seconds)
  done (took 369.627762859 seconds)
done (took 713.857420588 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.828244183 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.815889888 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.92648844 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.81063027 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.765630437 seconds)
  done (took 10.299121417 seconds)
done (took 11.452293732 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.412477031 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41632602 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286307802 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.419515653 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25327017 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434522968 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396496754 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.245560772 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.325773622 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.305653397 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325559329 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2756459 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249773819 seconds)
  done (took 18.498882138 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564087604 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.552693783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286584421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546067576 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264317088 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549580811 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432875931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436358838 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44597864 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237611382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237188728 seconds)
  done (took 16.707833451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554177931 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.556532485 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292574731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573128208 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26756801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558057133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423070748 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441185852 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449195385 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239182972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236887345 seconds)
  done (took 16.74563286 seconds)
done (took 53.107207906 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.231972402 seconds)
  done (took 2.385192742 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273313148 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.440589411 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.255414704 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.238279362 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233761485 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242668594 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.239408931 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.235713021 seconds)
  done (took 11.314490255 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231276482 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.230311977 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.22951805 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.230185535 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232806483 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.2294466 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.232702099 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231604342 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.230463466 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233636863 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.229990873 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.230111061 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.233139843 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.23215303 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.232093777 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.230809305 seconds)
  done (took 20.856080433 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.232664747 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.230357271 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231219616 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231390874 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.230083066 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.231145002 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231956439 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230484876 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.230755209 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231160531 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232136069 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.230194613 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.231562401 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.23069877 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.232269993 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232958964 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.231967683 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.231870934 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.235665939 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230676526 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232820618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231737931 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.23221342 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.232347301 seconds)
  done (took 30.718261871 seconds)
done (took 66.429054128 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.526974556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.028635992 seconds)
  done (took 9.713566065 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758668271 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.294593137 seconds)
  done (took 4.211712301 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.236602847 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23458519 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.235708258 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.235000273 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.234243579 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.234482702 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.236237951 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.235581593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.234366932 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23497712 seconds)
  done (took 13.511295576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.236312625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.236758758 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.232617032 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.236079427 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235348612 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.232570753 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.236152726 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.235673276 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.235942517 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.232762636 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235215803 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233009259 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236562313 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23415376 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.236892246 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.23301306 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.234046772 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233091137 seconds)
  done (took 23.385017826 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249648714 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.257713403 seconds)
  done (took 3.666265586 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.363743087 seconds)
    (2/7) benchmarking "second"...
    done (took 1.274604114 seconds)
    (3/7) benchmarking "month"...
    done (took 1.343569858 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332047556 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.27609863 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.255496345 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.275390594 seconds)
  done (took 10.280714435 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238281852 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.419579611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.521571431 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.81709628 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238101143 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240875092 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.1085206 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240777871 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242864233 seconds)
  done (took 14.228146274 seconds)
done (took 80.156109542 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.265599429 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.22914297 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.515715041 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.253143111 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.248546193 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.528538595 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.24854656 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.356315844 seconds)
done (took 37.806447924 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.239422408 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.01431922 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.02288967 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.230843387 seconds)
  done (took 11.430266484 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.221658593 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.243463319 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.224740972 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.369536252 seconds)
  done (took 18.221332888 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.34503006 seconds)
    (2/2) benchmarking "read"...
    done (took 1.568630328 seconds)
  done (took 5.075989778 seconds)
done (took 42.12888395 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238269023 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.238435219 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239338395 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.235372356 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.23557102 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.238302996 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.235189273 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.236680951 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238829353 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239418195 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.238896008 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.238616083 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236981587 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236174322 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236888252 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.238267597 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238560281 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236200583 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235740368 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.237262892 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237463968 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239826722 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.237692403 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.236694 seconds)
  done (took 30.862988754 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.239729644 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.238508848 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.240771277 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239462197 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.23797564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240514768 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241243462 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.237286898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.240518853 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.241806864 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237893423 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.237765398 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240745985 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.2376617 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240048953 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.237563679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240238202 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238147825 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239494871 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239194619 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.239642547 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238243709 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.238587323 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240695567 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238542577 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238448057 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.241371772 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239906378 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24214203 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.23871363 seconds)
  done (took 38.347273562 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.246279759 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249673018 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241233015 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243135504 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.241615752 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241266739 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.241077864 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242348803 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.241953421 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241457771 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242144211 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241848557 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242103582 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.241751214 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.242455863 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241601194 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.242806808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.242499591 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241339545 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242627733 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242906597 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.242642492 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244243693 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242774581 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243250112 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243156427 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.242153932 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.242241352 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243476497 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244369888 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242620689 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242677985 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.243320861 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.243714281 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.24243352 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.243911669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248511044 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251546375 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.243782276 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.243776074 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.242877031 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.244122968 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244533327 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244273643 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244851665 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.242960162 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243763821 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.244824929 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.244434385 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.24459522 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244704271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245235838 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245220034 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244273546 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.246001608 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245056926 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.246229378 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245554182 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245009751 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244688466 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246040263 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245375453 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.246157612 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245641479 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.246291481 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.245374796 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246130391 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245343582 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.24547734 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245940543 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246375956 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246984799 seconds)
  done (took 90.740302171 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245856231 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243272305 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244328535 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243909868 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24364836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.245072423 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243989138 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246387114 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243718109 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246604627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246775408 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244243934 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243877752 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246804308 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246755925 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24398935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246657335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244651184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245882085 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246836314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246515414 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244386189 seconds)
  done (took 28.562966843 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247593691 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247410793 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.245427748 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246875703 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.244252944 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2489299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2477342 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247974731 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248629334 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244946856 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244501457 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24815081 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245184625 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246571035 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246631656 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245257335 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248524011 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24544669 seconds)
  done (took 23.610064791 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.245988776 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246052356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249073792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245184646 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.245069018 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248425682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247279643 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248450865 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.248751145 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247214414 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249094915 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24912107 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.249639399 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247631539 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248990459 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247057665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249317614 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24758081 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250333782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2467684 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247378211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250692517 seconds)
  done (took 28.62642285 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250820427 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249162172 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248061655 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.248514134 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248212246 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250756315 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.251187367 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248552768 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250075611 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250552254 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247113924 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250925873 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247744766 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248439459 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248774072 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247777743 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250705933 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250523333 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250296112 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248155739 seconds)
  done (took 26.159079167 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251829818 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251656463 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251678544 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251707721 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251452294 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251611059 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252073115 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252632046 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251954709 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252703834 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252045856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25195985 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252848055 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252406331 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253241814 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252240963 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253130374 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25371146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25252234 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252807694 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252560907 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253300382 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253078561 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253066805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252138538 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253211635 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252677687 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253806757 seconds)
  done (took 36.245098421 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252735307 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253144296 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249840478 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251070176 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.250034866 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.250253741 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250719213 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.250800958 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252586434 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251352113 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.253964722 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.253362203 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253914395 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253311755 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253243222 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.253868455 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254688358 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252040926 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250358326 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251214658 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.252988735 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252411298 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25413058 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250449355 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251846628 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254620959 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252765185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251811935 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256034715 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251827512 seconds)
  done (took 38.747642084 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.298995894 seconds)
    (2/2) benchmarking "in"...
    done (took 1.293447714 seconds)
  done (took 3.769234521 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251995013 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255172153 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255147382 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252433673 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252974157 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254501653 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254324076 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252241601 seconds)
  done (took 11.206251844 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.255722037 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256157422 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256167818 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255517051 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255724089 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.256568323 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263322322 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275539471 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.256623304 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257529698 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.264133052 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264360941 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258222134 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256083096 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256826136 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257704755 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256284265 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256635876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.25694694 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257685514 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257515178 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258727186 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258744233 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.2551705 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.259243381 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268426456 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260603629 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257636418 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258712081 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.260528149 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257951527 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254909656 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258313021 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.259121644 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258519551 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258422857 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266540507 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279791016 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.264302822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259093541 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258554816 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256114324 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.25915265 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.260870586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259760309 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258008213 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.258784782 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.255698309 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257727431 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.261893432 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.26525495 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257846819 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25666219 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262007389 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259499898 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265618424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279188658 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.26297562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269288085 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270038494 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273382105 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.269784274 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262114311 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.261343943 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270330919 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.286704536 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267415629 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27730149 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257857531 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.261031038 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267660876 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27309512 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.287478682 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.2597613 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261667587 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.26147541 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261708349 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262248903 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26871485 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282761643 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.26069884 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261995809 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271596276 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286577135 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260507622 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261921031 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.262310472 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261938788 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262117668 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271532961 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.281450913 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.261824877 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.262030108 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262176788 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262664074 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.261888454 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.261345388 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262651912 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.26043107 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262594994 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262538311 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265693673 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.27145037 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26270063 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262967362 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26940853 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263416018 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263074683 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267807687 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263383828 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263346297 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.263100273 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.269882143 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260620801 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265634574 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.272045796 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2635484 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.265776409 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263454173 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263563713 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273531935 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.291403293 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.264416759 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264956666 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268685454 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275972983 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264095635 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.266121111 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264168786 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261880032 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.260958932 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.264820026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264159818 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.265902786 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265422533 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264237669 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263073674 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265037988 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264914065 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265749036 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266064625 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.264656114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.2670035 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266307507 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.265980564 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267183484 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270975708 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265045725 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.267748252 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265830367 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.263378426 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265590181 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.266816973 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265592884 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.264895068 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266090526 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2657417 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266408776 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267341133 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.266639553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266640306 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.267702015 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270544495 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.267298126 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268878744 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.267171942 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264450594 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267904617 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265602198 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265847515 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267863609 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.264857594 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270360147 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.276304651 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267871823 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267218966 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.269565484 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267879831 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267979812 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266844419 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270244562 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.276089422 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.26759305 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273245311 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268024334 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267724762 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268579525 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267608718 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266818843 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268661482 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.27109264 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.277762214 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280543857 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293692986 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.270167117 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.273242808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.27037505 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.27467852 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272041132 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.267989061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26835118 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268602524 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268074802 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268102229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270743696 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269977653 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.269104619 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269315049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.27004425 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269392925 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269841345 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268836555 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270877713 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268040372 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269758895 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269232919 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.269044988 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.268012984 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.268938296 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26931149 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.270420027 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270663625 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27606925 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.266997031 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27166181 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271265096 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270934223 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.269385273 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272316239 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271416302 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269531178 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277485175 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.289735738 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27135782 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277668462 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.290305188 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.2708272 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273574828 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.271565781 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268742237 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.27492905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279981955 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272276887 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271522928 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271498108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271100821 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27169726 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.278668136 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270675889 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.271617151 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272657549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.273598141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270636072 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.273954707 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272629402 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272575331 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273942343 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271805732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273329583 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272895006 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272569619 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272362012 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272231926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275610734 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281522924 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277930485 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272506079 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.275102062 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.274540641 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277773484 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273449467 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274015348 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272713892 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285526664 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.300023986 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280760239 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274433278 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.274539676 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279034009 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.275251824 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27786269 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274343658 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274451655 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273566765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273822951 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271765746 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274912667 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.275106774 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274606525 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275990169 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.278651332 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274418778 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274085422 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275188399 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275455051 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275108384 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274709557 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275940177 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276529013 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276717076 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274984605 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275182618 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281083882 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295909105 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277474799 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275014688 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.276236459 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274830109 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277016825 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275443622 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279993666 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.285799588 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.28049812 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285031014 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.27778541 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285683799 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276735111 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279811639 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28543789 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.274832396 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.275450209 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275696923 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276803317 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281680407 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296716876 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277811263 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281007974 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276326747 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277050822 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.276743412 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276792975 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278223051 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277867732 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284934657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.301738781 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281948236 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27905032 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274805338 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278697977 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277105008 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.277771837 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280782998 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277748245 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.27901635 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277083634 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.277633582 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.279144984 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278581774 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.277741105 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.27579866 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278309522 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285050122 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.299450263 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282564084 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279440772 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285129241 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278899919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285493639 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.29936493 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279207041 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279473475 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279136561 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.280458878 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.278532714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280267575 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.280795148 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.280164372 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.285338384 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.280447847 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.280617871 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.280678307 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.281259937 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279041809 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290637267 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305415398 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282506538 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28522005 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278624347 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282113086 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285558915 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280607441 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279937314 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.28311198 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291726476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289130386 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280555047 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281826679 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282500571 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281389356 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281319302 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281344384 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280414017 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.282344174 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281989554 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.282578685 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283667896 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281875242 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282490676 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282316886 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.281716559 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.292016858 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282112613 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282773848 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282519277 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281143119 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281418253 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.283517488 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.283933854 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281671816 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284033236 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284708927 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289913539 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289935189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.284989076 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.281893397 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283205068 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282960354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28381244 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283534256 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.284341051 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282829601 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284223786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283406904 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284018774 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282408455 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283646452 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.28301086 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283740162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286663724 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.292529874 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28362204 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281014482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284070437 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284205006 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.283159361 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283718819 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290512598 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28785192 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295650214 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.293710179 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.289911754 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283245772 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28720701 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292906477 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284220833 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284836936 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.286265291 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284770313 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285109817 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288862388 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286579514 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290941714 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.285537644 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28560609 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292981161 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.308642049 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286181765 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28741121 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289686842 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285057508 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283584622 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286506932 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285694509 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292133258 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.305538001 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285978921 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287859337 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.284770966 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.28772586 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290847308 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286532676 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287420748 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284230017 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.286951879 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286991726 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288091483 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282533722 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.285695901 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285902942 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.289928446 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.294629822 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.284613312 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287428508 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.285997811 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.287909552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286760961 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287260367 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285262204 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.286174498 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.287016165 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287321401 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287449565 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.28926095 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287208555 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.288367921 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289936395 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287710799 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290283288 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299543328 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.297453757 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28565172 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286815528 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288145794 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.289780394 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288642677 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.288667638 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288335614 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289254181 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288638535 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288511369 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288557083 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293013918 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304798205 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.312434255 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288239465 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288821104 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291938245 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.2898443 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287917989 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290890251 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.29196366 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292700949 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297387512 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289512177 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295247491 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309439348 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290738105 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.293973888 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.294054096 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298916115 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292249646 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290002363 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291280833 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.294612065 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307676735 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291234176 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301778582 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321618116 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310982653 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.291306416 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.292978639 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291826082 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.292318829 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292702116 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291247708 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291215338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292635529 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291242718 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.293377168 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297572658 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293235659 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292244917 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.292340545 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290932539 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291699718 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289544299 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292032795 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.292573472 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.292948706 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292685899 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292705309 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.29172576 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304421355 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319958927 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292635015 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.293822957 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290377908 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.296409488 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296315437 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305299653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.302633574 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293403986 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292719402 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.294153379 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293394799 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291725064 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292336941 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293587678 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29307448 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291737701 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306951454 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304468854 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297849524 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.29315549 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293492745 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.293875373 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293335102 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295623051 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294884741 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.295132698 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295283091 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299026488 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295164419 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.294130048 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298041119 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302847359 seconds)
  done (took 762.762203721 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293405524 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294222213 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292535602 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292404883 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293517671 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291993578 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292594398 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295068441 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293678008 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293276851 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293561271 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293468085 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2931978 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29390797 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29250845 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292311212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293994551 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293487489 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294104181 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294948174 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292955283 seconds)
  done (took 28.376160335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.296315024 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.294304037 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294814234 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296894565 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292742026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29689146 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294648844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296262003 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296947371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294878598 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297136088 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297550303 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.293812856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.295400829 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293972105 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297387618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296349217 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29427491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.298509144 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294942366 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297294002 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294862135 seconds)
  done (took 29.721881084 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298041145 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29788992 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296864397 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.298183119 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.299754761 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.298170827 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299868416 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.299984943 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.300732761 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.300839375 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.299696638 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300934591 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.308352465 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.307190271 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.301985089 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.301572163 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.445881596 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.300360441 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.299981463 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.300808833 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.297644161 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.306513001 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.29896616 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.298662289 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.301604157 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.302097281 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.3026337 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.301481769 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.300831124 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.302880517 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.306958628 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.301612124 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.301667009 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.302986522 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.301074812 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.302039309 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.306289458 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.302647514 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.299704586 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.302082111 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.313512204 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.325836862 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.303191296 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.308537501 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303317419 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.303645689 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.306274636 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.311588284 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.30102783 seconds)
  done (took 65.192773421 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.303090912 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.303556677 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.300577229 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303360709 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.303968198 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.303484591 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.303989413 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304901413 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.300769976 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.301055519 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.30372887 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.301215965 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300976146 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.303192873 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.303466695 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302004028 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.302419711 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301634867 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.301420868 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.30186177 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.302311817 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.304434063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.303925856 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.3014068 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303931921 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302056589 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301886133 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.305281652 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.302170729 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.302263134 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.305176222 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304473433 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.304311829 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302967298 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302775012 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.304958963 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.306156958 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.302309591 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306299156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.302539648 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.305638037 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305587642 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.30592422 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.305457549 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302366574 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.3026462 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.30213786 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.303038665 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.303088006 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304921132 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.305414172 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302378558 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305077375 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.303752949 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305234037 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.305796507 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302508105 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.303121824 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305985268 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.303095783 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.302558929 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.30659717 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.304502777 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.305840636 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.30704189 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.304591758 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304307599 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306460194 seconds)
  done (took 89.871934558 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30709687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.30697571 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306695021 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307497036 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307455066 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.307030478 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308135599 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.307218887 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307315775 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.308316557 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307243863 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306871819 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.308208517 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307998022 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307850548 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308336324 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.308470133 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30918911 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308624688 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308229431 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.309331331 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308466441 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30927316 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308864426 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310221163 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.30894857 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308099965 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309021348 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308860825 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308291514 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.309559513 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.309380937 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.309714362 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.309350197 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.309837556 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.310513795 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308817957 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310598896 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.310363025 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.308454508 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309190597 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309702474 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310267477 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.310673416 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310536104 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.309871238 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309829676 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31118055 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.310085145 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310830098 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.310987217 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310646792 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311053563 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.3104814 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.311851974 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30967645 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310879702 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311192433 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310658688 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.311486469 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311235507 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.311097721 seconds)
  done (took 82.40109945 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310821271 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310427161 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.309756104 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.308698098 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.311138977 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.310455364 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311266985 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.311362843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311458179 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.311001355 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312166323 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309585989 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312990966 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313110272 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310150075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312501391 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310551836 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311350751 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311945307 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310128926 seconds)
  done (took 27.450295131 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.310340543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312675738 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.309964642 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309449995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.312329958 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309707889 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.313338859 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311853096 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30916098 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312646768 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313098026 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313545896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311423918 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311197343 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313255146 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311495359 seconds)
  done (took 22.216115847 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.310147733 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.312825507 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.313725717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.314051066 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.310869349 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.310968371 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.31385306 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311989156 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.310446853 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.31457054 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.314050208 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.313440219 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.313495222 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.314023325 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.311894897 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.315152199 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.312563496 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312019109 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.314615696 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.314800932 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313581125 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.311951686 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.314718527 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.314452273 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.31293614 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.31341377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.312228559 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.31192224 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.31329836 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.314787929 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.312782542 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.313062548 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.313982186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.312572796 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.316110987 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.312852289 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.316572307 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.315552039 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.316793925 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.316552518 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.3156637 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312359004 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.316438741 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.315849653 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.31382415 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.316523631 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.314002484 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.314484445 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.313930015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.313946037 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.317060855 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.316823491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.316468473 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.318116653 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.317663297 seconds)
  done (took 73.505455074 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317719678 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317717796 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314050534 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.317012871 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316382547 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.315005349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.317515675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314487187 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315389258 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.318235474 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.315622987 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.317401506 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315231204 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318623088 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316713133 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317611576 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.314722302 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315439226 seconds)
  done (took 24.92904054 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.315616349 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3162877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.318307641 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.31533386 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.315047897 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.318246538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3165643 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.319064874 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318423143 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.316482652 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316166829 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.318298058 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318230937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.31910779 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316928472 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31653658 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.319721578 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31867637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.316648463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317301867 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.32003398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320137701 seconds)
  done (took 30.223302266 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.317953016 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.318876594 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.317497541 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.335525213 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.339598454 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.342245263 seconds)
  done (took 9.209201694 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328065631 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320380485 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317870629 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321351998 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319551976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317249554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317195006 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318014028 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320404542 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317639671 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317715656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320420066 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320747682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318448326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321288416 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320212106 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31991343 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318642493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320062817 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321286126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318409252 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321278375 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317988507 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318866483 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320263847 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320062349 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321178232 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318948798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319722552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321703743 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322294252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319893844 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322533582 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320563995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323472551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322497661 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32096139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322470427 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323017544 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320115326 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.323279759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322614245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323294392 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319720526 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323789418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320563957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320438471 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320734093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320263143 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323314963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323323948 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32007199 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323258145 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323359089 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322581567 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323317882 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320797815 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321926269 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32357949 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321140833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322050047 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322944506 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321292122 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322448651 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324092705 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322422781 seconds)
  done (took 88.45297958 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321556946 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322168794 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322461202 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323255722 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321587305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321679026 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322231612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322360472 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322666384 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32239892 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32515981 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320878158 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323052516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321747137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322046921 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322699475 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322995926 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323622979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322572208 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325186838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323098573 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323531211 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323153792 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323556067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323552668 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326398278 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323457314 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323269403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324477057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323911827 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324009663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323996997 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324444275 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324161172 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324590198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323750514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323621647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324118019 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32323192 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32605716 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324118865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327349389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324529021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325671937 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324656633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324645769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324668718 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325408686 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326015728 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324432538 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325291466 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325327972 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325922325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325575177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324558917 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325539863 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32618994 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326691948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324337159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327961287 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325583644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324656147 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328288561 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325573292 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325567274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32613515 seconds)
  done (took 88.640434948 seconds)
done (took 1780.99335757 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.354375992 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.455471636 seconds)
  done (took 14.054084644 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.490323938 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.446522884 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325703701 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.334516616 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.326633008 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328965396 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.33767773 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.326795136 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.325665563 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.32655795 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.326964485 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.515335662 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.322611872 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.327750887 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326178941 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.420719899 seconds)
  done (took 43.063134073 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.358248198 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.333784608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.458473775 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353898273 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.357254319 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.533628477 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.390877989 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.332251544 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.521780831 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377632526 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.059846293 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.357387111 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.332763324 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.556321053 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.352267102 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.536704419 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600548989 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.064746572 seconds)
  done (took 31.125467922 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.847387118 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.331611775 seconds)
  done (took 9.426454779 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.354444341 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.363758095 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.324447902 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.362351132 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.37068632 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.434733339 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.341937783 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.362447707 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.353507668 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.391499553 seconds)
  done (took 64.914638048 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.355409683 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.332976661 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.334162471 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.331630742 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.341866901 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.326441297 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.331775559 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.330683793 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.506522901 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.477317942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.334866297 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.342270587 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.35426508 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.334415051 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.330175099 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.372124207 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.503150626 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.330826214 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.330354701 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.338455964 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.334212416 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.428977738 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.379868776 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.331703308 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.474340271 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.526889189 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.337552142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.340868841 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.483649956 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.33299562 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.333473857 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.334030962 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.335866144 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.975460049 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.852769272 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.351826883 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.36038328 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.343172325 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.333164944 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.508658861 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.335125799 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.341782011 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.328938243 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.860044786 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.49031167 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460112429 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.776812983 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.338738689 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.337666115 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.402828141 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.337190199 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.33675449 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.368419143 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.158247794 seconds)
  done (took 113.06425015 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.329290284 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.719825031 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.497300346 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.349068497 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.097491012 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.038711018 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.349677447 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.662797007 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.374475447 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32960218 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.634289114 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889007251 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.354720242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.341863388 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.78627756 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.373894696 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330837582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.114986139 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.35076554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.334553178 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872055936 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333395118 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.329939764 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.589860731 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.369714311 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838527396 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.971990279 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.803146354 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.356723087 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.329530205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847393172 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351287885 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.332441666 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333322362 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60904695 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.72430731 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700676156 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.333901261 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.387397965 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.33304522 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.35287002 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822573029 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.715392178 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.331839921 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.331759499 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831414224 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334082684 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.337931005 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.337454362 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535781148 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.209673657 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.332034397 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.929093952 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.333150589 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.705434113 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.393227342 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.418941529 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866104434 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33363189 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.472142138 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363223932 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.332815956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.337797953 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333426564 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.333355305 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.730539379 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.377898599 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.333970311 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.731298669 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843073266 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.352491008 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902816663 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.254499697 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.333217012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.396818465 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.335461131 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.994751333 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879939248 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.348360801 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.331090452 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.71650474 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338348442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.632325302 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.351571937 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335550444 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884751397 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.336296886 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.363833931 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.333121524 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.334250328 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.024071924 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336016898 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.618103449 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.362210548 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.33336576 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.333906388 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.367835124 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33413305 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338594545 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.340806736 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903038891 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.355552674 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.475124944 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.35560379 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.341238359 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.335788493 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.339543883 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.334384944 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556279076 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.940605051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.341920792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335461541 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.334954668 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.344411366 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337581255 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.341606648 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.696143311 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342006995 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335785156 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.34139031 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.070004295 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.397806115 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336157425 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.341275584 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.278713495 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.544002437 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.357164787 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.337055591 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33591597 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.354307266 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.724609683 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.359668225 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.39305979 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.341856191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082413905 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.385025787 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.356101695 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.875234031 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.338251848 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.353118516 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.340883508 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33625832 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641401102 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.619050351 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.931158522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.339668881 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.33760868 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.075411535 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371075667 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476086891 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358775241 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382171756 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535769337 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919926542 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.339240381 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.960694246 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.339221156 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556937366 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.350104466 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.653701195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877021926 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.35925625 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346314558 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.094506967 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.091871417 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.003180811 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.343654017 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.632543914 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.346213571 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.816465925 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.339409036 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.339440717 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.851646906 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.340751455 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.34962451 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.338527297 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.339881608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.491973379 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514074032 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.966256138 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.344850589 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826025575 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.381279149 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339432632 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346302131 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341331273 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.687418173 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.362176539 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.344641606 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.361842782 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.341924564 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.341387691 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845949741 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.271035246 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.341520898 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4934198 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018518351 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.361919139 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.342436173 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.101874761 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.641259946 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888619337 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.401864749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.684147428 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.348590635 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.381930291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.076774762 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.411838989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848631847 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.345532925 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.341608973 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994006174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.362381883 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.44631971 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.342759954 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.341764021 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927857941 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.361827859 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.34794176 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.720701919 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.363446188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596709023 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.343877609 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.343401406 seconds)
  done (took 1115.611722586 seconds)
done (took 1392.505737181 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.342354614 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.346719632 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.332065985 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.344455526 seconds)
  done (took 26.630153023 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.363513314 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.349002623 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.349805096 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.348535134 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.354058784 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.348933708 seconds)
  done (took 9.38114787 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.519578238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.344754321 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345689162 seconds)
  done (took 19.474863051 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.575614656 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.749563948 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.725776173 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.84338122 seconds)
  done (took 11.161811793 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.349999701 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.34987643 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.350360402 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.355863041 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.366112214 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.366994816 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.356633557 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.35626851 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.366224315 seconds)
  done (took 13.48357091 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.846838568 seconds)
done (took 87.244194731 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.36681375 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.574917283 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.348207065 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.449966455 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.353889811 seconds)
    (6/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.757079296 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.410141971 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.057640957 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.609288315 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.403440562 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.371577306 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.265776067 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.761752159 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.0799932 seconds)
    (15/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.192188927 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.37117153 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.331462274 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.352515242 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.340434328 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.132199251 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.333887103 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.499963726 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.45373959 seconds)
    (24/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.33213211 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.184409809 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.793716378 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.364937982 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.375764546 seconds)
    (29/309) benchmarking ("sort", Float32, false)...
    done (took 5.396902878 seconds)
    (30/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.236619569 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.354941688 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.335088225 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.332721333 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.05908333 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.480262482 seconds)
    (36/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.734014936 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.357433276 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.34256725 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.377896638 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.408308843 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.143099025 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.62706875 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.809394028 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.445709291 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.14039272 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.765417858 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.033240129 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.322071287 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.455828366 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.338007567 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.358114599 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.460179421 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.604528836 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.4125685 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.41603848 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.38561493 seconds)
    (57/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.808965473 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.203264496 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37793185 seconds)
    (60/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.773246338 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.338658172 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.337578893 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.427078677 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.196262524 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.644861647 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.922908328 seconds)
    (67/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.366841858 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.335334658 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.451966799 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.078899597 seconds)
    (71/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.548319104 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.335927053 seconds)
    (73/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.944858634 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.201418962 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.359214016 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.434580544 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.43229752 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.336289943 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.349572753 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.501482381 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.349029741 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.231789451 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.335855937 seconds)
    (84/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.457796921 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.374672873 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.652454004 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.349666002 seconds)
    (88/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.963098884 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.477042222 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.047046481 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.731513935 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.33852504 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.464791189 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.381017357 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.477861616 seconds)
    (96/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.477711276 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.374793563 seconds)
    (98/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.118034368 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.475542692 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.44866277 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.574167758 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.099211371 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.38190462 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.407676156 seconds)
    (105/309) benchmarking ("sort", BigInt, false)...
    done (took 6.353452972 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.340077736 seconds)
    (107/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.061018696 seconds)
    (108/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.168387571 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.219016802 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.337976448 seconds)
    (111/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.454849429 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.039417423 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.59019036 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.342927829 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.36465127 seconds)
    (116/309) benchmarking ("sort", Float64, false)...
    done (took 5.6923988 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.352197283 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.908002974 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.353933448 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.276526373 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.35216945 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.434728112 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.353000414 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.358004495 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.856953708 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.485204201 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.340183717 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.29897233 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.603556559 seconds)
    (130/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.551668388 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.379889733 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.876904638 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.376733884 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.631118724 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.340299534 seconds)
    (136/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.436658655 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.210913787 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.611714633 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37929009 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.339774146 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.685838646 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.482897012 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.340363704 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.343762616 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.459502883 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380208207 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.209631924 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.381293778 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.380855686 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.242158498 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.364909452 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.381381077 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.440402068 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.377127553 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.405032958 seconds)
    (156/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.35492792 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.319895502 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.64706407 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.463319264 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.353827267 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.383334733 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.41941025 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.77843543 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.513086427 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.805895708 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.450035985 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.364422706 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.340942035 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.365516239 seconds)
    (170/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.067382147 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.226202654 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.384288591 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.391285508 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.385433994 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.246154269 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.465674162 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.483677022 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.398489446 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.344563846 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.369062508 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.462783241 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.210906903 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.106340514 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.394020109 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.775761187 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.557961709 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.729024004 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.823116692 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.994131779 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.415379016 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.342608046 seconds)
    (192/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.392707083 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.376399846 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.758749383 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.35996087 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.348447657 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.544937757 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.139421376 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.333176907 seconds)
    (200/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.56079049 seconds)
    (201/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.427651586 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.104858177 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.386124629 seconds)
    (204/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.343586443 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.158389007 seconds)
    (206/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.50827612 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.368492968 seconds)
    (208/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.876579612 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.848957694 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.359865095 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.381426118 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.874297854 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.917313896 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.346717012 seconds)
    (215/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.358513555 seconds)
    (216/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.399214134 seconds)
    (217/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.443482208 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.432892373 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.357464238 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.12476116 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.384248396 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.862803085 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.45945996 seconds)
    (224/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.344461336 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.358789798 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.358528485 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.46053798 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.610472158 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.249401787 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.398079216 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.350975646 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.369187248 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.35808786 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.975026342 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.788886236 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.088759367 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.392343722 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.348096983 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.732274887 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.424383895 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.375386328 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.373873019 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.64191199 seconds)
    (244/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.913672305 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.678995301 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.348639443 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.594776044 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.379618219 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.430339904 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.44653541 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.361362144 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.405875043 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.070505089 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.44715592 seconds)
    (255/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.723589505 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.747632697 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.410393979 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.419612453 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.411348383 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.976547836 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.283110737 seconds)
    (262/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.339287114 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.114545462 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.375149811 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.598770805 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.988878021 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.446606739 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.371391106 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.34858508 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.424145757 seconds)
    (271/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.210537225 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.407069342 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.425578699 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.344484205 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.38631259 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.445627287 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.165813674 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.888361148 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.363184546 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.447892898 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.038883466 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.411363212 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.474878367 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.364367385 seconds)
    (285/309) benchmarking ("sort", Int8, false)...
    done (took 4.390621398 seconds)
    (286/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.34993408 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.348506106 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.200467968 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.897543501 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.349739669 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.369708059 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.405708611 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.326320968 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.642709174 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.205882012 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.878786757 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.349974061 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.140903479 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.353910447 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.364437687 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.970949095 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.389391299 seconds)
    (303/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.362580464 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.453729497 seconds)
    (305/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.09713403 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.445043617 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.34991431 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.964304786 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.656324381 seconds)
  done (took 1061.311698135 seconds)
done (took 1062.580744278 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.396924776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390672888 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.37368249 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.396718004 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.485869107 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.549820384 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.385215768 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37699161 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.422359864 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.423557993 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.373244424 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.550450159 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.37812022 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.375900362 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.37489831 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38809192 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.531301144 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.376029213 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.391975914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384588377 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.391800122 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.373323794 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.425005555 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.551474604 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.379328499 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.378299802 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.37927213 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.395511549 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486960138 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.380333804 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.37960849 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.387347491 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.532588079 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.375851613 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.370798398 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.396406293 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.386991912 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.386106693 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382301648 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.410322295 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.993526434 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.376863511 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.378473261 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.37817784 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.378055076 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.38077121 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.379052853 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.383535988 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390556598 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390409475 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.983290619 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.393568217 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.381257514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.378334442 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.390114579 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.377992563 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.382392716 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394501363 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.397239725 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394203711 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.566090444 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.38495746 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.381592646 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.395745085 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.385772478 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.020960599 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.374513428 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.382816741 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.998470972 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.384120815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.021512118 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386752775 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.381403381 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.393745686 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.410605824 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.535614326 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.375113341 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.379360951 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.387236507 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.378214173 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388853263 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391518413 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.384558127 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37987622 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393603344 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.555099136 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.391159225 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.381930052 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.389929399 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.399583427 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.38847223 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.391299807 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.38543844 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.376796514 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391063692 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.384314161 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.38461885 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.383973463 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.385765861 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.391377178 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.997744352 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396969031 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.376528823 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.377688255 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.381180289 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.395745389 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.999774087 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.381988918 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.403063385 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.429139575 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.383239552 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.527533834 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.384862911 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396673373 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.391014973 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.386053923 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.377652185 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.528921095 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.991351323 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396835036 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.384123882 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.380421203 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397734206 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.383782182 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.37856364 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.611165119 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.387232955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396479758 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.503853049 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.39356979 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414216003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.381620895 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.386174631 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.4171094 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397753226 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.415194388 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.385725774 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398995268 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.399733688 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.380575052 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394573985 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.394570852 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385818286 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.390302925 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.378137471 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.414694085 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394052307 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396721341 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.40548454 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.505282131 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.38208259 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.600459383 seconds)
done (took 235.656569638 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.442757688 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.380525429 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.47418509 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.382260124 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.482485448 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.485405984 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.379688769 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.380010752 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.37948815 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.758296305 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.380000311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.380161265 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.374903954 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.380230127 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.463592629 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.383218475 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.380041891 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.720079154 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.382910437 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.452172091 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.374989655 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.380381976 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.383112759 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.762869586 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.382784055 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.377402273 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.452950772 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.382427421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.729130887 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.382809176 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.383772707 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.727910958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.471314982 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.401045721 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.393274728 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.389700155 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.486059488 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.403572144 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.464483039 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.464610227 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.480675557 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.423203586 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.384279571 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.376371424 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.386392886 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.384958072 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.382481753 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.411214334 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.383660997 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.382194991 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.723278605 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.393787487 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.382134646 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.382120978 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.3819925 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.413647538 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.383873732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.385550241 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474131444 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.386198127 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.448188259 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.766289476 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.761065719 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.384792157 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.377677418 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.383402776 seconds)
  done (took 151.756392533 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.452618587 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.45837135 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505408591 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.38634833 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.435387315 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.509325516 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.386394505 seconds)
  done (took 11.430773744 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.391902044 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385712856 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.437961693 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.437458423 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.385902352 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.568752731 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386210861 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.397701174 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.385260286 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.448969378 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.390045247 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388378627 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.394818921 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.381830783 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438113495 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.397280747 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501871282 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.388158036 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.386872946 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.538106319 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385550526 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.395301819 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.439378884 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.399126043 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.392173682 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.394858758 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.219678631 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388728532 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386442351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.388591272 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386413345 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.473024022 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.389809241 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.38402728 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386272953 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504017313 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.388362977 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385659346 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.389426769 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.387868974 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.388340442 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.388303412 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.390223486 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.38561426 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.388595941 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.410830511 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.389169233 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.388244624 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.389269353 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389643207 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.44626931 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389477562 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.38684699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.386651407 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.453814797 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395992502 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.390172251 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.387111563 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389383747 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387346805 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.540879598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.439217216 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.390630017 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43927485 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390047949 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390938139 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.390369209 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.389743284 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449619105 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.390726381 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439697409 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.388664894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.600619086 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.41401673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392625743 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.392931871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.393371795 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390079063 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.388237775 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.396594538 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.388547844 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.392062124 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.39642582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388405279 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389627122 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.585723204 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500163843 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.389466286 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.404270442 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.398473189 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.38899893 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.451829959 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.391348075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.388833929 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449128676 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.506658843 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.444790469 seconds)
  done (took 159.181491573 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.395881496 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.399821989 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.395423511 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.41557784 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.392775498 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.392426549 seconds)
  done (took 9.695820409 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.395155122 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.394844455 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.392416528 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.392730035 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.393205789 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.396125263 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.393898189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393766764 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.397640054 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.392994046 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.396724099 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.395898829 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.397641996 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.393128578 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.394118136 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.393620852 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.394296431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391460755 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.39476886 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393824806 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.498613877 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.393141346 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394708892 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.395739662 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.40030508 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.394754343 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403524262 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.395243196 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.394606699 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.403460119 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397777933 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.398533014 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.396426544 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.400748723 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.399677703 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.39597685 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399435866 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.397213815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392916082 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.399334274 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.396556849 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394894803 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.39587849 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.396918106 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.397741308 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.40135235 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.401518922 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403194063 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.396142626 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.397784554 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.39760724 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.396005645 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.399152837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.398881782 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397904708 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.419644865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.401965623 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.397284939 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.396804175 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.398836154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.399388349 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.399876494 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400259349 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.402601032 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.394318996 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.398277213 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.398673138 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.401678423 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396267763 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.39690929 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.399742705 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.395937309 seconds)
  done (took 103.017543221 seconds)
done (took 436.377804841 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.688818742 seconds)
  done (took 7.997807859 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.622912964 seconds)
  done (took 7.93613531 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.747423118 seconds)
  done (took 26.062010732 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.458619329 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.435947213 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.427298656 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.398075323 seconds)
  done (took 27.029482825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.701899542 seconds)
  done (took 8.011839315 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.391630651 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.391847346 seconds)
  done (took 14.095142771 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.710015275 seconds)
  done (took 8.019854086 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.590209188 seconds)
  done (took 7.906079306 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.417108318 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.425487416 seconds)
  done (took 14.168013022 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.377796165 seconds)
  done (took 7.687752981 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.576810398 seconds)
  done (took 8.88943119 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.401042091 seconds)
  done (took 7.71193495 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.423225997 seconds)
  done (took 7.732107582 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.659608413 seconds)
  done (took 10.97006544 seconds)
done (took 165.52804368 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.392272796 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.394900972 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.394854061 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.395795987 seconds)
  done (took 26.888159178 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.433167174 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.433108318 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.433962028 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.443883477 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43636651 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.433732358 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.425136816 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.425588041 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.444295842 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.436251572 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.434695549 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.435419927 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432867317 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.426005887 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.435760228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.435441659 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.443931133 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.436057355 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.426230416 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43612172 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.400261479 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.44542601 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.438011999 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.401402902 seconds)
  done (took 35.685520513 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.925431586 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.471784049 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.553814618 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.454006056 seconds)
  done (took 7.717007022 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.45327295 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.45424828 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.470858161 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.507448462 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.532320825 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.463227283 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.428441855 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.423286987 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.408563374 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.455294075 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.530151461 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.471396766 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.544640684 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.400896234 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.588830776 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.402122695 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.401003101 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.454223322 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.505453374 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.523052805 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.402623786 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.454932126 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.461136975 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.471687518 seconds)
  done (took 36.522558554 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.402211234 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.421053049 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.401984329 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.40101159 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.409563293 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.402577718 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.402516221 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.403786171 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.401776215 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.40889298 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.40189133 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.415064575 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.401345142 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.4024161 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.408657068 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.403913666 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.408615625 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.401476339 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.403927099 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40913091 seconds)
  done (took 29.425733719 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.395519911 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.249475584 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.747469895 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.651649948 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.395986752 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.399969353 seconds)
  done (took 28.153956311 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.486402912 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.636773879 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403620204 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.823404149 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.897218058 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.404148089 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.404128051 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.676532327 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.053915377 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.056910777 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.470843029 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.481535017 seconds)
  done (took 21.11382891 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.405211608 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.400014399 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.404383252 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.416088039 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.468108591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.408494763 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.412652782 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.398436393 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.469528786 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.472912578 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.408461325 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.471389152 seconds)
  done (took 38.4522856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489376134 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.450176562 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.633974542 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403446472 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.127321087 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612547532 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.455992066 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195404983 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404527519 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674091192 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413710858 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494762565 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656957609 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418894115 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402221993 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.509529394 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626289151 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971956281 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403505253 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.068745027 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429273791 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412728357 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156377263 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676571265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616818435 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384229146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.662253189 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.178652425 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739095218 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419105653 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412946352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402753103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676195586 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124809446 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497192543 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653823518 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407053047 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034621511 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.40619205 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.99679078 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416364302 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406819247 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413390496 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402662462 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337282807 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418018851 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205010088 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.407814052 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.115711572 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403827205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713332496 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500731049 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.407557809 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.977181392 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480047987 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411313095 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40666086 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50215818 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975615167 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.55404717 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407362898 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.358383878 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401895962 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017368835 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087110849 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.409921063 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.408494733 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407547716 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33858863 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.0559388 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423801193 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542068585 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.428617956 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066457508 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238270942 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427986016 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338526886 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044094817 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412022534 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.342052921 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634065615 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.182212459 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345438321 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.35414006 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339193935 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236333486 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414801012 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.987090557 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430275022 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200712395 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658078092 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424463195 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429754089 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631107513 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.295065066 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405924129 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.423177261 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532383322 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42788564 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205549109 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34024243 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.409458029 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664709668 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.618466118 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406158073 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.52805946 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945031599 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422262425 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423080726 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421714631 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.660116069 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.076860909 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42619532 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.569733545 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426589431 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.185042286 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282456784 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410438456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.433698892 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419641747 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684377001 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.32069161 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293639725 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476061943 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414666033 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409353429 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.103243814 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262400269 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.306231957 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.651113896 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440108007 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421545607 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.410218881 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366944828 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.421999122 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423870684 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.191957279 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.634637816 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423041789 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686214456 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343371077 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547549174 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426640783 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.634092527 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.815878013 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.416059763 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67099303 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418237673 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428988374 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422490485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429512971 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508855284 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431083357 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.416134304 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669430233 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.413732573 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.41383358 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.117832015 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.190308966 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412029153 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.414252172 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4174251 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104737453 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385682917 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.41892011 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304039912 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.425384583 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478464629 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416568117 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663590555 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.575097681 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423312432 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.415796129 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.410432604 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638699808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421605121 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.030112649 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494330644 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.947746779 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088632765 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42839051 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.346341115 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.123474058 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.105278196 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413259571 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.602819148 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41238214 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665253314 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428716718 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412379057 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083216214 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416055521 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.034162302 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.420319312 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423792207 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.418007658 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413882436 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.560013918 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.603506461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418584785 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.426114019 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558218791 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.426508929 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347866779 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929542383 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4190062 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413714069 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.188820495 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449069234 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.039971441 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331302111 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674378764 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433814895 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726039423 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.215991795 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.451902123 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.421659073 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420260098 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424279537 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.434212776 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425020823 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.425264026 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.095672676 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.866357202 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982716484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217592198 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028204817 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844006485 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.416256274 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.315011483 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220851121 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349491682 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075196541 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635591314 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22080923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370754499 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958245728 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.82933722 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319320249 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730826818 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649536426 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.949599837 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.434773959 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733984539 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631297393 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450957315 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.42428145 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348254745 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.703179077 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034203451 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430429563 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497355389 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220915011 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428293114 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.199489147 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.465478851 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.425907234 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911348515 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.050343453 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.813002112 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424083239 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427783969 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318394126 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425309268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947341882 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104333214 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421602752 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.959532886 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358016356 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67406609 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.432024448 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.422970708 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.08492906 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.42402167 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677261509 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730526045 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356486758 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435925177 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033714436 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287410302 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.424699215 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418650723 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258977635 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419998634 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759332493 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.436375995 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.56795349 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430553887 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.354367738 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353344409 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.113185786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427710237 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389224962 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970047598 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.443678785 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445895829 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434541094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269232162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678365422 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.433792232 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083666696 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647887628 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424027924 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443563913 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.423753616 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419540452 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.412339096 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302918304 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657182534 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444622706 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645178576 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.678675718 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.33163319 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478715305 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656415641 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.318526061 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437876061 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707569408 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.132269723 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.425103875 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205306718 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446265463 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438255767 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441797866 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429494763 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443637766 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492279896 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67595317 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.43620093 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.433294207 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907642887 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43556371 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428367011 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.43726584 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516645258 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.648151858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.508684595 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.196611961 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092140734 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278595498 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105232619 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740932865 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426910709 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429394201 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358218721 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572273075 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.953487685 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697569158 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543393607 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.440133861 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446910102 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439117864 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434528751 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638354161 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699051515 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299429651 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43564177 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089470348 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.583908683 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43478949 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.635824305 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978440805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04153485 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540639253 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434443344 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235546508 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698354254 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516653771 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425434713 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01962332 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.444718094 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.421969593 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.433365053 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42623419 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574163175 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737314448 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171383474 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.435034999 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.581533058 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.19915153 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164565452 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686105172 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.986769079 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.684214812 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112545869 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253611131 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69319546 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496112806 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682135565 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.5453118 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573964582 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.439516332 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309089205 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427601352 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275941472 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.136746587 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.436297624 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116030283 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694445182 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.432552321 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.439728506 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450747335 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.437871372 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651430285 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239641584 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653105596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437409803 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436527293 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.001351847 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111699677 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747265934 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366140905 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.431782794 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710663579 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66748 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454142742 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.880990376 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.139977244 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046769692 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.404110983 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450230009 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432355954 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25765448 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118692279 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.523440343 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985458846 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091397503 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436342244 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704826051 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.433097955 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442757513 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707215537 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.432799303 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.439987234 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691951825 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.112752061 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317848193 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.452938765 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204384486 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.369499751 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.65979966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.512483994 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370091726 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429850019 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.936008928 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456049783 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549537317 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442827957 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.443751448 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429991558 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.188139574 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722533855 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.435220354 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.437172036 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.427453581 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448864665 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531154334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060308544 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435157157 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.128525992 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.784161067 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688884475 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431220948 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.419918053 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.434716465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431650698 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15592557 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409348 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432269161 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052702522 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.432935757 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.444701672 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43604165 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.648052172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644581398 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432137796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697354525 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435059395 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448539237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.340946278 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204936149 seconds)
  done (took 1699.385495175 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463139029 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.485208709 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.458736613 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.544027208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451167364 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.543718084 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.463218645 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.560448951 seconds)
  done (took 53.318372778 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.444513793 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.596114541 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.468742739 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.436245301 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.447042017 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.441121931 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.950181671 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.440480807 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.443947463 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.443411486 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.435280061 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.441239477 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.208908859 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.44551616 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.435898635 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.441108548 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.44546212 seconds)
  done (took 67.320615975 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.438277619 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.463882902 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.505476605 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.442326425 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.177652793 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.466913234 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.16143828 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.495906493 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435304908 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.649725601 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.095515293 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.490065452 seconds)
  done (took 82.172391017 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.446210912 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.44510263 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.446082086 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.446087913 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.44591949 seconds)
  done (took 8.57977233 seconds)
done (took 2136.048242372 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.680983608 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.272691688 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.168829269 seconds)
  done (took 5.792363696 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.576019151 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.626748253 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.779168431 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.768166984 seconds)
  done (took 8.09762024 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.715537914 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.828517809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.623748363 seconds)
  done (took 6.51261381 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.115152499 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.445727664 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.432846946 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.430090476 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.433592585 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.434280767 seconds)
  done (took 20.645333531 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.435012196 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.437501541 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.435796824 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.438310406 seconds)
  done (took 7.094663685 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.417660436 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.190290074 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.420137934 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.436563301 seconds)
  done (took 18.811720743 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.182652338 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194413041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.178574595 seconds)
  done (took 7.901113073 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.448035517 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.375432394 seconds)
  done (took 10.170699582 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.74494027 seconds)
  done (took 3.092344218 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.56734201 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.766901089 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.746113094 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.572637846 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.751269169 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.136106207 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.383318031 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.914843206 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.511785235 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.01591166 seconds)
  done (took 31.71579696 seconds)
done (took 138.860724898 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.811482299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.452519581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.638944096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.821520672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.663782106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.638123775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.928838041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.788260969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.285736938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.284277185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.790589792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.665222409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.654702569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.451503112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.650708933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.837465022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.656889168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.863037072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.433726297 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.455301252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.937571856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.425096892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.619154724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.727613537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.663913156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.588315637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.00769267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.826331969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.443234471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.031327864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.587226848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434857035 seconds)
  done (took 202.412993037 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4432872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434797437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.456570053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435445067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.439288596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.43443421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.435938972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434740371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434736803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437807034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.435710922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.454794163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.434574428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438632644 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436964194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.451287524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435865894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.435107491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.448418348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.436425818 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.455766823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447645469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.435956405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.435384682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436065961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456452467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.452828139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43610483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436592043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455445537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436864199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437518583 seconds)
  done (took 207.467619522 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.435947584 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.436234585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438296444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.436391829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.436408966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.437033332 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.437031151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.454549849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.443281316 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437347109 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.451317957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.45204367 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.439632984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.446441799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.437244804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.451612923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.438244756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436875045 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.457056812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437312498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.459605018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.44669657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.438217422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439762952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.438020083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438710446 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.458157185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.438162027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.457195358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.457104009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.463181422 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.438977755 seconds)
  done (took 207.567185294 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.635577185 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.445915377 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.44639413 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.405228879 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.445413739 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.446684105 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.441584894 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.645151827 seconds)
  done (took 15.264797011 seconds)
done (took 634.062317589 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.079821422 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.763686653 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.658043299 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.466807365 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.427245525 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.491961771 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.467959144 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.658714324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.446627048 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.669677764 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.809426559 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.466332998 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.963713494 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.465213637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.745842864 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.572748747 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.417662889 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.494205403 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.812313287 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.137774882 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754920485 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.130325934 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.665021401 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.450588971 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.001065033 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.106192254 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.373916829 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.375385647 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.46733898 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.823212011 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.461373756 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.703958986 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.522190288 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.517331103 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.576434745 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574638257 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.649116573 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.537584895 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662285751 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.882624139 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.176962003 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.259831472 seconds)
  done (took 100.043149913 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.437308688 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.437642656 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.43613435 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.437566974 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.439571857 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.437916951 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.436442996 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.438552606 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.439149399 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.437943588 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.438042769 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.438860945 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.436979452 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.439069566 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.438524917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.436258085 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.438336039 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.440599115 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.438089354 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.437226589 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.439696266 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.438700894 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.439028699 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.437843855 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.439462315 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.439727632 seconds)
  done (took 38.753375916 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.451327003 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.721227707 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.916251272 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.459907261 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.451222115 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.455511094 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.543819297 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.45390974 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.45301425 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.455149036 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.636866204 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.456420732 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.490885404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.936411318 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.455104938 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.453011701 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.452043671 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.451349969 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.736003373 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.464189346 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.571665695 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.455928432 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.546805444 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.464979395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.47819927 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.452875695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.457107232 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.988826522 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.456606063 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.638395453 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.409593005 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544256498 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.939157798 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.918414699 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.412844313 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.456942185 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.452291366 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.640681476 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.454897989 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.452626006 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.545745688 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.456872192 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.928399321 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.11486855 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.47752002 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.454686121 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.01462168 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.642070263 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.7492762 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463832415 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.96451777 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.460091054 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.455902824 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.454433047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.74409695 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.461403529 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.452608418 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.034906257 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.480544721 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.544392345 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.455801408 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.456021472 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.738611836 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.455001508 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.728067672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.456378021 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.464131281 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.478842804 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.932470129 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.461465407 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.132138298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.475979404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.45517263 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.637237322 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.72707515 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047726407 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.458823611 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.74454805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.951170471 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.548942795 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.461889036 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.975893478 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551019249 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.461743619 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.458786039 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4582043 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.456500765 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507863697 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.546965143 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.060108009 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129704633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.062403498 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.576105966 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.467731371 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.456002678 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.039968418 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.4813852 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.45758138 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.932354862 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.144553821 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.481969093 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.464525183 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.151142277 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.484375461 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.550641782 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.466158866 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.940571038 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.460252002 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.506894031 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.458376951 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.46598436 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485095916 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.550887626 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.46234092 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.458668403 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113357297 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.673956687 seconds)
  done (took 192.017220019 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.452770123 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.452012312 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.450767761 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.451813782 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.451601953 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.458265267 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.451888471 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.451866066 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.458441749 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.451174526 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.459601037 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.45344409 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.454604227 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.454423246 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460855752 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.459464051 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.06678427 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.45315196 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.45093666 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.453453506 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.291562948 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.458475015 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.454350987 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.453027546 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.452788295 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.455460343 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.465999584 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.454977494 seconds)
  done (took 155.550983204 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.461617943 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.155710661 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.464788946 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.618981928 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.488394086 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.457717691 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.616985163 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.529126147 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.461654958 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457050563 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.458783532 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.831583803 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.464764558 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.092239231 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.697626018 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.622973547 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.090244736 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485407715 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.458581529 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.459776657 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.619556652 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.475150209 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.840050273 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.175886629 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.466096565 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.173567169 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.454661479 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.462453301 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.461036768 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.174184643 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.463284241 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.844108834 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.55586993 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.531888412 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.175636096 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.099623823 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.118663307 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.64484116 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.464569043 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.46009446 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.46005598 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.452233985 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.1774983 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.466187851 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.46252752 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.171768321 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.487050465 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.464124836 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.468200104 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.46093404 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.530817095 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.532808085 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.848268255 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.184046872 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.556136359 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.47505138 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.621253281 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.915165456 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.4656 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.0692377 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.452386225 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.17968837 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.489813875 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.453250946 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.462787966 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.467941223 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.643842362 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.625460962 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.07410645 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.485848584 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.069265157 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.661030024 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.463455707 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.463179457 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.465352086 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.181914486 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076752029 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.661453738 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.622252556 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.70263363 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.458739332 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.464186163 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.455344495 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.557237201 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.463959609 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.182824697 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.097515579 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488302603 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.467186558 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466498788 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.466878819 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.68005264 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.186491432 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.559419739 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.072205172 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.868734313 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.840763965 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.46889325 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.535615808 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.485422486 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.840946349 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.471001535 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.532704214 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.996411206 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.844914692 seconds)
  done (took 177.330142824 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.748869466 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.819914224 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564930301 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613763549 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.104333907 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.073013143 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.810935823 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.622515309 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.590569915 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.752592325 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.769762686 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.554081309 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.662066974 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.55143659 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253748412 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.54744755 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.568078058 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.640271854 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.575859609 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.615344031 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.143404047 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.786271631 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.659797459 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.515901911 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.569799384 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.336526703 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.105710086 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.019315914 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.660809136 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.907248373 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.057788256 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.678903808 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.530786879 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.198703142 seconds)
  done (took 70.986759608 seconds)
done (took 736.035937469 seconds)
SAVING RESULT...
DONE!
