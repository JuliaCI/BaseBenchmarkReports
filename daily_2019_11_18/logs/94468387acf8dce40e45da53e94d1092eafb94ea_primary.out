cset: moving following pidspec: 16100
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.338205125 seconds)
loading group "string"... done (took 0.553839735 seconds)
loading group "linalg"... done (took 6.95394552 seconds)
loading group "parallel"... done (took 0.149992954 seconds)
loading group "find"... done (took 1.094186315 seconds)
loading group "tuple"... done (took 1.71336952 seconds)
loading group "dates"... done (took 1.20257708 seconds)
loading group "micro"... done (took 0.215558357 seconds)
loading group "io"... done (took 0.98874488 seconds)
loading group "scalar"... done (took 36.862318577 seconds)
loading group "sparse"... done (took 11.63250793 seconds)
loading group "broadcast"... done (took 0.892730494 seconds)
loading group "union"... done (took 11.771247771 seconds)
loading group "simd"... done (took 4.263127252 seconds)
loading group "random"... done (took 8.740702961 seconds)
loading group "problem"... done (took 1.83994739 seconds)
loading group "array"... done (took 20.168790231 seconds)
loading group "misc"... done (took 1.613400563 seconds)
loading group "sort"... done (took 3.169107083 seconds)
loading group "collection"... done (took 16.624124615 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.487620038 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119264882 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112214605 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117815162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144825683 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.107384973 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119045966 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080262082 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.773810612 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143494346 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113907245 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410009027 seconds)
done (took 5.015608907 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16952146 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.078745768 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076404203 seconds)
  done (took 1.275386695 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061799182 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.117244128 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062750574 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063523187 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063718565 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062207096 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062923198 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063695313 seconds)
  done (took 1.616123754 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070119457 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065373253 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064660679 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064325331 seconds)
  done (took 1.38439908 seconds)
done (took 5.633768586 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742958697 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196893716 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.177468151 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390975933 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128078952 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155458744 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638601967 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314668062 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181832096 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078183324 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100596691 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.312462969 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.103657773 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633625822 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073383339 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.087832443 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.134743867 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417210832 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.063564606 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.078640031 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085488374 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.124421375 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.081425417 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.070795074 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.137782355 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064150501 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131249013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076867033 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.062763752 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.202321495 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.168549478 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.647923868 seconds)
  done (took 10.021615025 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092348084 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093773183 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064962099 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119751523 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092385844 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065959724 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.067447284 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063892657 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.082927364 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124026969 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08515214 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097081375 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061817621 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064959772 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08197661 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202564941 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075859817 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077278081 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067010127 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.071342145 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103801941 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074463007 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074250712 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073935078 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124236699 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.176329205 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095352206 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094211027 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063064258 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07701282 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111194214 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122331531 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061715873 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062630902 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120429802 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090652984 seconds)
  done (took 4.432500885 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.944590504 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13602173 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.087257711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12933178 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.062948455 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106509992 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062949247 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079762276 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200577027 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.416832178 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.561270936 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107779739 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100415667 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065591404 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.065004654 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.063049921 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.312477462 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.093516029 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103297355 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078590454 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067687336 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067615382 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341198806 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064062866 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060399066 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065900495 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.055851651 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123061523 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066083002 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.921023394 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121706765 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063205356 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09752748 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.157852411 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083322491 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13548131 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063695132 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.188048926 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146029913 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.066963007 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.062905701 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079445228 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099928469 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107914956 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062104596 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063205151 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155898334 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06139992 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075228662 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.607925867 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15099429 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09147403 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06046026 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242641987 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.081824547 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065611323 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061699498 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.169760736 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133552861 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066679927 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064822461 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066560862 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067613675 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.345499461 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062413214 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712534961 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066559409 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073383891 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065337563 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065378956 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068740129 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068735862 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086786213 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083511737 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062636529 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071353832 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06202437 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062162008 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063219631 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.080449177 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353023843 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063014211 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064907706 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061118862 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082753898 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0933211 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063236828 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062065441 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096501612 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064710047 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062863451 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103565971 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064781396 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083784596 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062666336 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.066757137 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109287642 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.062699663 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089051048 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062307983 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061876987 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094749632 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.065822147 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099403855 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076106626 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059339795 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.063200978 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.376573796 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060543236 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.059938151 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.063301368 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.060771489 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.062490967 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.061517408 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.074053914 seconds)
  done (took 19.996040825 seconds)
done (took 36.513216606 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.23090631 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075179249 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075524612 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075275769 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077443183 seconds)
  done (took 1.745025997 seconds)
done (took 2.957560814 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.115654894 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094373095 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.060860565 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091492963 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061023582 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096966409 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095270005 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077286142 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095927846 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062039679 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095142801 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.061815035 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060606156 seconds)
  done (took 2.278161254 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079150822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.078995021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066052367 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079515168 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.059800814 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.077871721 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.076853507 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084543294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077331756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069002881 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060272607 seconds)
  done (took 1.993759669 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.078578338 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08014227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065676744 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.07798661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062767126 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.077823761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07739497 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.081493205 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077073432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069904829 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060269332 seconds)
  done (took 1.989960823 seconds)
done (took 7.441419256 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074675921 seconds)
  done (took 1.248589577 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.579743768 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.037420019 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07816601 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108342663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179514026 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115733838 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272281871 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083232936 seconds)
  done (took 8.803760578 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084302324 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078204176 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065843548 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064530221 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067192902 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068603607 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067205579 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.06866535 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066203632 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067699188 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065339795 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066505922 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067718324 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067597571 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070171978 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070185787 seconds)
  done (took 2.349977563 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088462168 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.087033319 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069788035 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070881484 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068770598 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0685777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070827915 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.06981506 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06735028 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070373299 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073383885 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07224238 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069973901 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06350942 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072474705 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073996088 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06962148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072403721 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073326572 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073511777 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072465015 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06238743 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068805223 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070112701 seconds)
  done (took 2.998541221 seconds)
done (took 16.582864429 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110457731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068052629 seconds)
  done (took 1.358392011 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078544621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079903293 seconds)
  done (took 1.345074081 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080543309 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062340562 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088448798 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074921205 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063062845 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062378084 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085687725 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062898346 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062569247 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062801587 seconds)
  done (took 1.893026042 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065750742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075892635 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067446636 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077945363 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070870878 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06108489 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069274427 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064226755 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074771143 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059697341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068482888 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.07884546 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067930185 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080848004 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069496544 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065146372 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067759434 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064384092 seconds)
  done (took 2.442692718 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062117392 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063769786 seconds)
  done (took 1.319690349 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063832275 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060206801 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063507027 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063131033 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060004322 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.05931745 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060097243 seconds)
  done (took 1.619635238 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370541728 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108497621 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.302330414 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069694943 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080156005 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249139268 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06357872 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068213894 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068326627 seconds)
  done (took 2.619207062 seconds)
done (took 13.790477896 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.074536997 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081807611 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.091216835 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.35411611 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087682097 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062261551 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110476372 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184188684 seconds)
done (took 2.253376704 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206552303 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.599981958 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381724599 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192217518 seconds)
  done (took 2.372538726 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321828472 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085280879 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.056702739 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06553241 seconds)
  done (took 1.736703459 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062198612 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065344283 seconds)
  done (took 1.333388468 seconds)
done (took 6.853136768 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07924856 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062862775 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062354237 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.059736814 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062068533 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060503726 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060759976 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063029462 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062839074 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.062385554 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.064647129 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063546016 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061787506 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062148049 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06153245 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064272976 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061625346 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061459143 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061911873 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064358736 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064426059 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061578557 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061765269 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064144792 seconds)
  done (took 2.753593064 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079536852 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06302954 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067528883 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06775801 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06630044 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067532063 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067484568 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063291465 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069232455 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066356695 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068117785 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068101798 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066222988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068050114 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066187026 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068379553 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069214618 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065302474 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066744435 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068044399 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068378678 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062782595 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066328336 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067555288 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065954183 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067650121 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064946029 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063023881 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067488339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066228541 seconds)
  done (took 3.227792469 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06591511 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059698105 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060720595 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066455434 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060057609 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0613808 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060130615 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060877799 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061023037 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06016163 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061856288 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.059620039 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059861028 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060963712 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06155171 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065223707 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076166412 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060566764 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061325175 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062435778 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06456473 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061056847 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06146494 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061586715 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061712806 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061463511 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061081948 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.060127233 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.060561251 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.059995536 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063248026 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063369978 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.059930489 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06653795 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063282637 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060230366 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064224834 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059661236 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.060627833 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059665717 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062813584 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.059737731 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060475405 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066604116 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.060191666 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061314062 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060113454 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06218916 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06159283 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063263254 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061121202 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062013566 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063663395 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062818097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065659693 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061387506 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06272347 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061323568 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062895722 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061702641 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061092927 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061119657 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064037001 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062184162 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076015531 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068106867 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061755207 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063851443 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062402301 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064336135 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063817568 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074577066 seconds)
  done (took 5.724245302 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086795773 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082987207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062091732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061833318 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058450202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060753257 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063859016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060353308 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062299374 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067966088 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062434859 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063974509 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.173312884 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075089717 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062649626 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063362012 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067889349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060317686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062381164 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065623791 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062619395 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065654628 seconds)
  done (took 2.779345686 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150011647 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066916026 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101032145 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069457865 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064075009 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069356272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065849931 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066426456 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068098784 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066174655 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066134465 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067804713 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06587948 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06610552 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06633718 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06661708 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067268842 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064590494 seconds)
  done (took 2.5393672 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073793123 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062549353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082008884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063257364 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062457425 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064901285 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066884253 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070608963 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064599588 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062476396 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070678953 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065369515 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064838162 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062515045 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064872013 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064068585 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066708292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063865317 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072151712 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068601936 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068513844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071587186 seconds)
  done (took 2.698458022 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075802227 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063901685 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078706472 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065229486 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058419478 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060982531 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06671753 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062226312 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066518813 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064243607 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062227154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060622312 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067104143 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063387613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066767402 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063688199 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065202669 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063701424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065553267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059924178 seconds)
  done (took 2.523966379 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083283762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064590589 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064505661 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072560215 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064330076 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063813751 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071445569 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063710377 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064159574 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08569874 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065503068 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065388448 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073507219 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070664784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065990483 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073312084 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073487155 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072874333 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0648926 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063771279 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083266308 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063524194 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071178223 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06391887 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064110971 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064054768 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063710909 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068692804 seconds)
  done (took 3.154850652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063196228 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062552607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060033442 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06020201 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.05969643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059472684 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060303117 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059799463 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062460861 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060269114 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062755619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063145908 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063447789 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064266323 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063957788 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063970323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064349369 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062437178 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06150447 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061641161 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063636946 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06429742 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064105834 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061522055 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06189171 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063765378 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061517535 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060602986 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062142661 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059860004 seconds)
  done (took 3.090599831 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071615341 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069023844 seconds)
  done (took 1.370219648 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059498054 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076953621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059655854 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066547071 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066515073 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06277822 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069518432 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066170683 seconds)
  done (took 1.752657136 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.07747313 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074350011 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064616291 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076343334 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073075608 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.078720046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127383079 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063424789 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.068944533 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060906777 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07561495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.062163941 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068417659 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063110357 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.067930925 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068781192 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06056601 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068774972 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064601721 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06192006 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06366221 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070682656 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064959399 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057982236 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063622504 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.083934879 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072960149 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062252375 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065367947 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.069406867 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.067809049 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057093302 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062379943 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.062891521 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060411336 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072186553 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076982624 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065837319 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.072470393 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064913353 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074644429 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059370598 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068647276 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070130714 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072196517 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063357154 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063623789 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057982831 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061910922 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066770659 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060375564 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064543453 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059613644 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073971945 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067822695 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074925725 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063293876 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065896071 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066925203 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067454137 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070907692 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065983995 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066587648 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06400954 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073528216 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.066558801 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071215419 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057901104 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05684435 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060446327 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.071655225 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084419922 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.068426131 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063068653 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063499817 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060389403 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065640268 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063549389 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067881155 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.068426366 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062751243 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068354717 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069521314 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062651394 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065170704 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070582782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06106978 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065496342 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061542265 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079022287 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064219381 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063149915 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06241518 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075290995 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067909824 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064956909 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062540685 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071930866 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058969058 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065337545 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065763017 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066019881 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075460811 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067894457 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066592684 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.070089083 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.069027155 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.061943956 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064434514 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058392169 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.062381768 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060909499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.068316479 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056290788 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063979322 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062483475 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06217053 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.069722234 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.05995335 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061546826 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.193763652 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068790556 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062157635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06033736 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065700063 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063431663 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066489574 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.070834955 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061683193 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058467749 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058408299 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066114485 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063323487 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.066675038 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067805053 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066193207 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057483568 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061757794 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068090501 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072065823 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06376658 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064493718 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069352274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064539075 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062617863 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.069522091 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065427917 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062775453 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068382451 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063612221 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058550255 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066931195 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06604924 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061344031 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066711698 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065969123 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065118115 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063732442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061943704 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071046017 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064312198 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062631943 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063236101 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062676506 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.072912668 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06536602 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058573323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060135793 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073019464 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060641225 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.062937945 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062234421 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065622441 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063753856 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061208923 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062815712 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065009688 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074242125 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067292611 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06377822 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068027955 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074602001 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062851443 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065226179 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.062667564 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06348982 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063739522 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072888549 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068561978 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067333635 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065054523 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060407585 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068082603 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069692713 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06141775 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060534289 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061314465 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.066381671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.068071961 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068678323 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06509987 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062628335 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064963855 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067786271 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066872427 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063941942 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063916935 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071658426 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06248673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071555065 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065678176 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074387554 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067949897 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.05988358 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068062134 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06313744 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070358315 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060034704 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062561096 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063683438 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065701548 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06367068 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06692351 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059068159 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071389102 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071843141 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064744922 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063780049 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064262755 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070705578 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065030407 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067094191 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066698851 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069715598 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073519834 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063054967 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066664622 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073991089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063539433 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057989034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068496323 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062012326 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062578087 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062514728 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061781007 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.195469968 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07335274 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070122048 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057878871 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065547688 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062377003 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063033961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060669785 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069666093 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06826855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065226497 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071609069 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066388203 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065396526 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068631135 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065161363 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066404507 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067130699 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06756372 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066332748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067175301 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064605549 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067733935 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064538744 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062905033 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067341659 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06568941 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065027544 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070394518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064978373 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065005665 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065645756 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064003203 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063694492 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063811371 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062841029 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066295427 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063823745 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063374346 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065355306 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058525339 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071773002 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064710297 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071989492 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065548091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062189718 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072808105 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06694374 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070931374 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065493979 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065694468 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066315949 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064398236 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067845657 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072045859 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062790537 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075652658 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072237596 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063858537 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.065278567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063521656 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064468025 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062761683 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063692977 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063682551 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063389868 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062797037 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067515742 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.064812768 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.062867322 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065585945 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066042719 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065143644 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065701224 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058854514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063870379 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064186223 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.0645553 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072235896 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063574989 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062680468 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063607824 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06567622 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06357263 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061210239 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073029537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074031132 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064574559 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07104312 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06326951 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065216884 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073353548 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057410145 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.060868451 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061034236 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061872713 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071456923 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064552494 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073390787 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064808591 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063906468 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061629918 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065339962 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063444633 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059279594 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062242306 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068056874 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063714478 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063561218 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064805933 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067143984 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065535724 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073251911 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061375848 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062676141 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06250405 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058936553 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060979799 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060789248 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.064312112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062442842 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059662178 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059618509 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.061731478 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063657542 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064375646 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061800454 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06348724 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.20163456 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064560074 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066572375 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06709562 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058843335 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066140704 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063396615 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062214335 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061808343 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066390207 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065651837 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063962036 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071565289 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063037148 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063128656 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063305456 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061062295 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063099283 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063277772 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063622295 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06217577 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064843937 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071685435 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061003723 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065667198 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063140621 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063044566 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069643116 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064269308 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066552817 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070249339 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063802309 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065353538 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070845858 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067635438 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066088855 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064269201 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064685995 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068706952 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062379601 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.069227077 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064052614 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064035003 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064498115 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060510664 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063243615 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062975821 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062889776 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068729162 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064323353 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062729173 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063142315 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06172411 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064352359 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066892013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070165766 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065663467 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066591758 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057955702 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060513379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065122933 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060854096 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.063969088 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065545594 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069330995 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.064992828 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063840979 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062294823 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.071564915 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068580562 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.066154023 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061709987 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.065991584 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06364157 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06584873 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064304161 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063380228 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064093534 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06681491 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064591717 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062323283 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069701179 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066182896 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06399189 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064260799 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063853247 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06350835 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058662806 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063868796 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064608206 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067697866 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06538752 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063318677 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073289006 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061065707 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063540514 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06643797 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062517027 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067805209 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058872234 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06457842 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064102233 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064139444 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058359648 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062363308 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061273021 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065406641 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062238953 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05866254 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073916487 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071633664 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066302349 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062125335 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061504645 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058173884 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057805515 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061132597 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.062923404 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063597684 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.071538856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061396482 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061390395 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057503653 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062456811 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064834704 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.064812799 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059558445 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057506907 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06138102 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.196889087 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069892726 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062820493 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063510632 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067442741 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065293389 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061237214 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066909256 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060342214 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066977232 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075863212 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064266371 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064462168 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069645422 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071348101 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064510101 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058795201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065021221 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06637884 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064341258 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064071846 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064787705 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078048554 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066165093 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063167822 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062620225 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066406515 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063197909 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071198808 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064375773 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064832664 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068436858 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065689177 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072790341 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066442255 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070704596 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066127421 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066169807 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062058409 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063641447 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061442235 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063469756 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064483457 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064787782 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068478767 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071163901 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062788236 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074104035 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072786985 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064960514 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060258808 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062992073 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063532649 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059130072 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064640525 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062096329 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061315734 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061628564 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062212119 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064393016 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069005118 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06388097 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063832018 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063914056 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058197454 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065933443 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066143693 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064242329 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059991642 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063331264 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064578661 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067188967 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066208216 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060940711 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065201727 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064289604 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063867874 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058593784 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069610282 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062217919 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064828588 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062613741 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063014257 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063924603 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.066275909 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067903392 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064412915 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065204554 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066847831 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065068308 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060587178 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060430764 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06809447 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06137707 seconds)
  done (took 40.75057096 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096475148 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06000163 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058721019 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059091972 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071015765 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059834986 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05872385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060138201 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060064325 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062299409 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058859807 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059017849 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067500806 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074282155 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070544494 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063389924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059049867 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059812538 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058915589 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059658303 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06787089 seconds)
  done (took 2.676325134 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071442969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.067150425 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069940198 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073356967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064050668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067358771 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069268325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067282282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072720012 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063893777 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072264142 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06725346 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.063954312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.063781793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0638633 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067430085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072886197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064238912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067499489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069249048 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067728956 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068940487 seconds)
  done (took 2.798200611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063917526 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06326283 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064513312 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05852837 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063308842 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.058071476 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066148249 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06086497 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0669389 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070299376 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.062057609 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.061477423 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064273206 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.058288751 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.062539623 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06093834 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10465578 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066030195 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062359538 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06315722 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.058103564 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064023157 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057799394 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058334953 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06129637 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065993268 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.062768511 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060624537 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.061936169 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061262349 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062256103 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060213936 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.063585473 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.062385896 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060762139 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061462766 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.061775162 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062067237 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057719005 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060531987 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.062644196 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.058025476 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062166682 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06337079 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.060255651 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.059857183 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063865708 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.061861335 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057491929 seconds)
  done (took 4.382611703 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075234415 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104982979 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065276459 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084482493 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076525385 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071359314 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065802014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085550188 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059883674 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061425849 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077825166 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075814613 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062442875 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066686196 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069174789 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062097281 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064126042 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061181371 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066307598 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061770213 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066368342 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068409158 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076059427 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075380662 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066564442 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061324258 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061722862 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066449442 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074602277 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066833826 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066877101 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067688835 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077335203 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06808448 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062106077 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064228528 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078366154 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062388748 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064605141 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060243072 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064380958 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066547632 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068722726 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078281407 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062561507 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067271948 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062184465 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059469873 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074845902 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064055048 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070018333 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076137442 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06627968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062649071 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066327825 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077319812 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062140291 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06065675 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065182948 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074276488 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060070366 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065776793 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075412963 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063669139 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069251182 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075880663 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067156016 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065684868 seconds)
  done (took 6.1041493 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072911976 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.068848531 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077254331 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07628584 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0687687 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068730248 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068556506 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068878372 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068409003 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073095795 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069333518 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089109975 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064287744 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071061793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06896748 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068587404 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068981509 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069369243 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068648969 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068935872 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068642105 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076669578 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068693113 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076070102 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094320998 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064669663 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068509766 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068990594 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076764116 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068703014 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075891935 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068585137 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068648817 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076700223 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07610796 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06847421 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061798356 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068012345 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069060471 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068314173 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064046875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07619118 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068103478 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063857505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068930907 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068428883 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07605707 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075482614 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.070944779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073031779 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068661394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076542743 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068679772 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068694894 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076348518 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.100271201 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075944655 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075981519 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068590786 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076176315 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076520808 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082275608 seconds)
  done (took 5.796803606 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080099748 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07096597 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.072458929 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058388077 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060980014 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066150167 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060601581 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06064743 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070975776 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071050377 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073808448 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066548201 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069065122 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07331918 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066149108 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069180225 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066316741 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065921259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070953445 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066127174 seconds)
  done (took 2.682781192 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070776995 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079848022 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063957119 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068718872 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065067508 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067795355 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06448072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065411751 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063200402 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065407192 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072796359 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072027093 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063788258 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068325852 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072045533 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0684904 seconds)
  done (took 2.407097757 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.072093611 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068539903 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.075825096 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062841575 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06069905 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059251542 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06249125 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058195045 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058885595 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073910632 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062151936 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.065026399 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062382602 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0608327 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059381612 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065065579 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058931926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059777825 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06256979 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074415254 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07272249 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061385722 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062809326 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06220543 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062608194 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067378599 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061742969 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06013778 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059975692 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062730286 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.062804788 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065809646 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.05991427 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06021361 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061048399 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059832312 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062069679 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062763465 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064905031 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06229054 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06041767 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061821646 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06186865 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063443109 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058666897 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062917862 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058594272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064404977 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060353194 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062392629 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062415718 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064807875 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062874022 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068756984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064924394 seconds)
  done (took 4.793888956 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075013374 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066070054 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058724682 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060130917 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065374477 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063673427 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065744003 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063700554 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063930466 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060447799 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064172077 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065191142 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063858319 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065693338 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064387518 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06569374 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058258193 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064025885 seconds)
  done (took 2.479335753 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06783989 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062558746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069768066 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062221763 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062704543 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06429194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058421774 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061062719 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061001829 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062302672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062283908 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064497538 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061098696 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064216872 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062426932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06263344 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064853939 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061125401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062039422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058526292 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064448075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061569233 seconds)
  done (took 2.704050447 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08919585 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078119137 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.133659254 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075706546 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.079808593 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068107059 seconds)
  done (took 1.848626969 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086673763 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075378497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063545313 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084342836 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069804793 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06392017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063556634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063793246 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071999371 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072365417 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063802881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072180016 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072229655 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071525966 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069536049 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069678671 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06378182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063588264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062795974 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080387168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064105163 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072213241 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064126336 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063548867 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063898163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071410713 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072218172 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072259149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063660893 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071914655 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069105409 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063876929 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07245345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072531886 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065660194 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072483952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064147961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080709741 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069822202 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0718542 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065794947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069881189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07308724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069074105 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072448341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064351355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068880188 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064169197 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064462026 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082418526 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070121437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071678517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0703408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073074891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072889705 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082737019 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073201205 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071923266 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070371411 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075013348 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07218186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069748978 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072028383 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072740366 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070134093 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071952463 seconds)
  done (took 5.967236206 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078454313 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082814665 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064798415 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073680836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071981056 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064121146 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064494546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064716992 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064441397 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064014664 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103833797 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064835735 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072195896 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07292327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065541116 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065091299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065857635 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07421211 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066041156 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087254565 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06642038 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073217639 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071922248 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071662839 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072991191 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069659494 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064144744 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06595767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065398354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064943337 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069670845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064213073 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071748705 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063853559 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072266657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064590898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064105921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068876176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064252312 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069833809 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072004286 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080436438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064359276 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064291316 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07290019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064298293 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064453657 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063973917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06435545 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064339662 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073513811 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07310534 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072900176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07236662 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064242573 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064522521 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064102599 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06437463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064155319 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069453599 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071862731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064628662 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082748956 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064063813 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063978387 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072030993 seconds)
  done (took 5.909167368 seconds)
done (took 124.119633346 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181457831 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.161575704 seconds)
  done (took 1.662625484 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.065613745 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094129585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073635047 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125871217 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.063101789 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096721346 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.095832033 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07455619 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.062928027 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.062782981 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.063014451 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06520052 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128202292 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.063095082 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.062628602 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06543606 seconds)
  done (took 2.594208743 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.093741065 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.152750153 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09632537 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.061852192 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093289621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070021225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061248204 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.071653561 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067270357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.061872685 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069513917 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067501245 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.061651096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067292873 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067473942 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069091573 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061528081 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069211658 seconds)
  done (took 2.699757683 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09797483 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.087259332 seconds)
  done (took 1.520435485 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157613892 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10307835 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141393555 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.337388183 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163072205 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226002066 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.124609197 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126076681 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122040177 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121234764 seconds)
  done (took 2.953348516 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095252131 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.14853411 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.249998956 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.110788903 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.068560101 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091182803 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.111811621 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07392203 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077305655 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07709176 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07662179 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072373428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094989601 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.069757609 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.069910936 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072239121 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.09827913 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069113226 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07082048 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07294966 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09536858 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062250014 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070015966 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069272446 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073945439 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073791434 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062225095 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.062289895 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073408985 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070753743 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074884281 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089991599 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07441804 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103393902 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.067232863 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104515137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073082438 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070690871 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070979855 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070489651 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075083566 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075021443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.068618474 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072631745 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.061938033 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072521561 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.062011657 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.062096924 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074387138 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.063288567 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07479668 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073526059 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103258337 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063585633 seconds)
  done (took 5.742948679 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097294993 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100158309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067935442 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107291261 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096533133 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068767965 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097619477 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090030941 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.099509272 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066665368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064730029 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067267226 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079088116 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079884041 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10844784 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100368848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07049347 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067946891 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100205384 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.098988322 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065234783 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091105692 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.086675122 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098350771 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064171313 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066623106 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064859833 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066561438 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073398617 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075154267 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066303202 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076984911 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081584828 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074796769 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063590694 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064409478 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064774725 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076435681 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07565799 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075226826 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074003778 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064101903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064442675 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065774948 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066326229 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06394659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075463425 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07704904 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075578028 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06590156 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066634473 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064535213 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066052702 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077380408 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07485246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077839146 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076512672 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065099201 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065116545 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068827797 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077327074 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07594121 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075994045 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066148326 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075627748 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064909609 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076435754 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080493736 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064722935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066463928 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06489518 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06618413 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06569688 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074364683 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074613948 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066066936 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066137253 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064951288 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076971666 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075438053 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065300859 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073641837 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063812583 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064823694 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066206525 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065952096 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074434098 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076663874 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066781481 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064580039 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066060195 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064992797 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063861812 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075789721 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0771477 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075193656 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.0744629 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065290588 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074556111 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074443032 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065811634 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075155109 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064460881 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065496394 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064977068 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073399049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.200622555 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077506803 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066530456 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065621422 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075652396 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077966912 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065727028 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076679661 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077897942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077069606 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064868855 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077633196 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065645049 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076825947 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066256376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077166933 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065981881 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07766497 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065577325 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064335388 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067936896 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076325519 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0677218 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064897114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066946898 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066672163 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076616848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079618066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067981586 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07820793 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076262035 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06782657 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076071892 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065603456 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075398753 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066621095 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066481284 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06381722 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078771908 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064778138 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065379705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066251434 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078458352 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065417363 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076405376 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074642741 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065033377 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078018548 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078461743 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074458742 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07748071 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067925555 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065515891 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064777653 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066247225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075361585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07688114 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067295893 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064997954 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075361482 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076545358 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064336047 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075698842 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075203102 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075677124 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065073263 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066460083 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076260815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077246932 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075441991 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074620748 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074798303 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06487777 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07394505 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074933884 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064481725 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080967445 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064577928 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079119397 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075564347 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073424166 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075473852 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077294566 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076995171 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076932034 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079926455 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065434173 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065236156 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076852148 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064878229 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065894496 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075090834 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066244703 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066150279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080320338 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065109573 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076312678 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064718324 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0744535 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062960034 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065738637 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078722591 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064272015 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06524066 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075170126 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065184078 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072507151 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075507763 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.204308238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066033034 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067591056 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076991401 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075683171 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065645573 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064938953 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067123813 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076032192 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074705734 seconds)
  done (took 17.865760451 seconds)
done (took 36.381625406 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203744685 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14600725 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175089513 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114576714 seconds)
  done (took 2.071465183 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118080832 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097296077 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091768835 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061644657 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098067031 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061598746 seconds)
  done (took 1.900854959 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30802234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210264696 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178380078 seconds)
  done (took 2.062465753 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193478935 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.182835147 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.386150045 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248164955 seconds)
  done (took 2.484244633 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139190537 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085440015 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063775724 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.079285865 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130660325 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159353673 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101776749 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125045644 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074382413 seconds)
  done (took 2.381741375 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143033166 seconds)
done (took 12.41323914 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.215922336 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185301467 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.236356556 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.115108843 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087442248 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069556439 seconds)
    (7/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137198002 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.099027805 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15965109 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068699159 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067720568 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123596719 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.18552574 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101558144 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.073729639 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090148606 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069329845 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187856597 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.194096326 seconds)
    (20/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071608889 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151156889 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121694141 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087778566 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106132439 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.0742141 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.169404317 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099705162 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083939476 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096751773 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062374416 seconds)
    (31/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.105946216 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069401319 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.096975815 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090506419 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.061868388 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087640128 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.072378788 seconds)
    (38/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.104831764 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.148502876 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072074917 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071064847 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.182444843 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190580198 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067897921 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06863974 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067695122 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071312579 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058893824 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06147782 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.201991528 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077942175 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.200644704 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075699683 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.061810506 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154549429 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060679655 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076089299 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069064668 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082325597 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073110392 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049122873 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065914294 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.096219743 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183358548 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17533956 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068891897 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.063858432 seconds)
    (68/309) benchmarking ("sort", Float32, false)...
    done (took 0.123327295 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083704741 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075996793 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06563382 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.114755551 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170111253 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.047578607 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068666437 seconds)
    (76/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069649901 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086273966 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07204402 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067788476 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.189783084 seconds)
    (81/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138921504 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08328322 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08736949 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.145078647 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.179115491 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.215921516 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10893522 seconds)
    (88/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.154893001 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.063163166 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.149138759 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203027225 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061820769 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072763375 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09412941 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068313493 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068374492 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073309011 seconds)
    (98/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.047895082 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064231009 seconds)
    (100/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.076447454 seconds)
    (101/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.098901354 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069791919 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15598254 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068169307 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069919567 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087121444 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.155992823 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.085239146 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.048157356 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115718217 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.146419408 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063611245 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.049503514 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.082568027 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063430395 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087311822 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144171896 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.133040683 seconds)
    (119/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083226143 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.04807214 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.076704862 seconds)
    (122/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10674082 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062799304 seconds)
    (124/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072539476 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088627965 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.061838459 seconds)
    (127/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067034712 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.048160951 seconds)
    (129/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.146354595 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06249635 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.048743745 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.089365391 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073120755 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170036403 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.129960454 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070037087 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.063353482 seconds)
    (138/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181662924 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.144946061 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.068874383 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.05933973 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067523249 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.06817333 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121369321 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061210799 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067926196 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.047878094 seconds)
    (148/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.058436232 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.073235384 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062405125 seconds)
    (151/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.048597794 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06272807 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109422601 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061758754 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.061145507 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.084297903 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069152332 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.069193398 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.047786448 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066201561 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.146353891 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.167967351 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063024354 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061856507 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070089012 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14415866 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.168465472 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.18050846 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 0.135360024 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.04894244 seconds)
    (171/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.096002142 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064668014 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064725144 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066034397 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068661895 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.145608787 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.057993903 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071838848 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071836856 seconds)
    (180/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.101902147 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.048167468 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105550928 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.047668742 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.048027922 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068954245 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.048558168 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.133456694 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 0.179789051 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068205237 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061477562 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067316161 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069646143 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078561496 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088474309 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085225302 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130121101 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.215308783 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.050656974 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.173795802 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.286721344 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088644697 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.048752738 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071885747 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.048141834 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076586212 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.049197795 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.048237366 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.050778223 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.070579065 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.069409169 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065637947 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.082784505 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101053839 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.105396163 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.057607908 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162916995 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.048363093 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.049242066 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.059902893 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.048265967 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170396686 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160710492 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085144598 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.047874365 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134145642 seconds)
    (226/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072507182 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067856435 seconds)
    (228/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114808264 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061201586 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.048154638 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07040099 seconds)
    (232/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.048249686 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.048271199 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.048219051 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062156988 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128332333 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.067990716 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.048892309 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.059512822 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069037795 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121058188 seconds)
    (242/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.058139007 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.04973443 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064302674 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061706454 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.049628334 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061514219 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062704405 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063168441 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.048265346 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084676943 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085896243 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.128754872 seconds)
    (254/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.085266749 seconds)
    (255/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.048742802 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.061550447 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.152474301 seconds)
    (258/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.050061669 seconds)
    (259/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.048578089 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.082714937 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062006561 seconds)
    (262/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065946831 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.04810818 seconds)
    (264/309) benchmarking ("sort", Float64, false)...
    done (took 0.121095987 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068196394 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063083523 seconds)
    (267/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.049004963 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.069391414 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.06867889 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.048497954 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.08721025 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061396463 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.048849441 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.112882011 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.047573313 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.048018279 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.048104932 seconds)
    (278/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.048392844 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.048994046 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067159099 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.061928995 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061603314 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.050125742 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069130376 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.087397099 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060450685 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.060546819 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061572448 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062123691 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069233223 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061152456 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.049440655 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069656683 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061821688 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.068356437 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.048682225 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.049052951 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.06732057 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064898422 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126003236 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.048898874 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.058903074 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.10687914 seconds)
    (304/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063717637 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.067317353 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.064253839 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.04923195 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063615571 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131218124 seconds)
  done (took 29.263330672 seconds)
done (took 30.645673945 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079405518 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088151666 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070757867 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08825021 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076897454 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07195412 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.067864501 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073859831 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075319175 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.076974805 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074250834 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.051095259 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.06993084 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070309118 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070453796 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086897839 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.073660623 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.068672233 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.06919344 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060804397 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.068890479 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061890271 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063111357 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.050741122 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073640079 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067847007 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.06853651 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.06993866 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061725691 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061861815 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065401096 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069173129 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061624708 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073512802 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068060069 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.068890479 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070479788 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072518236 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063510144 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061831929 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.069934978 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062250655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.068475936 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06963713 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067921644 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067324381 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069556299 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074131595 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087158624 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064303265 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070540001 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071585717 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072217445 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068489713 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065528929 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.068701131 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067064889 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086917685 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069290227 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064242063 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.06985926 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069625008 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067015014 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068853956 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069095909 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.070759918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071230225 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067181721 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070579091 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067448973 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061443514 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.068889998 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.064981188 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062136443 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071428532 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.072572211 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060471089 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067515736 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068307958 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.067152878 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.060796366 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.063585735 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063511476 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067476645 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063743196 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.050623324 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0652352 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.067774638 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060661622 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.068823117 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067409947 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068017434 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063062888 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.071021896 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061403138 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066880202 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062004927 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06174923 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063261063 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.065409248 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061157617 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063706759 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070523204 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063115158 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067545205 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074964189 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061627144 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068090632 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060991382 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061213198 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075836843 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070862419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061965809 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064293555 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060935384 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068712779 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061336277 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061437115 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061176945 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06169874 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067114457 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061695816 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063825132 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068362761 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073223508 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060415052 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.064214937 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.062626083 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060683129 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066025167 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060730699 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060460757 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062288741 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.056705543 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.062741533 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060893441 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067552025 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196591236 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069470536 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063703109 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069375317 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066727237 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068021915 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067493651 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060962058 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.055071838 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064095803 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063923341 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064312785 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061743762 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063751822 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061471136 seconds)
done (took 11.806118353 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06206107 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138686688 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09555341 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091235072 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081795864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062853343 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072273812 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09794867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064163532 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09853442 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083787658 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081091011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108013362 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061109913 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062672838 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065838407 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063293563 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077493075 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097253407 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082412685 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11187817 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061681188 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090075752 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085792532 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08290354 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097200119 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06277239 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066178582 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065748763 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08686143 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.082252823 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065885993 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065260166 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096204929 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088270796 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079698654 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062590671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078831942 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062711903 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062133858 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064369991 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094203665 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.076014909 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076329323 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065964471 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065145609 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063374729 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079373736 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08533993 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075133777 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082509191 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098479939 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064870719 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062160656 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060686819 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081767946 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061526534 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064940478 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062954091 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064956255 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062340496 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065546269 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077497922 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078503105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065772513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.076772665 seconds)
  done (took 6.523342315 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079444752 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.085742167 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079068876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079505079 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06182572 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062567561 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062846086 seconds)
  done (took 1.986320784 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063271392 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084524268 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085198654 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084787123 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080328228 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083391715 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072116208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062652354 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.077016198 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063985004 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083223861 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097999586 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.063159524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.069035883 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086857179 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062858807 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.085924515 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062709655 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.065887935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085772356 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.064611597 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.078120928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.065668562 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062703995 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.076825191 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062812006 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108496997 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066906603 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064265543 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065923092 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.060645512 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102684862 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076244998 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.071591929 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062695116 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076821913 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.076862369 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06103356 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078643853 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067760302 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.076371203 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.062913852 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063863275 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06090445 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067222073 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.072564779 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063581224 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063654626 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065397855 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082469274 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064215732 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076597425 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066421223 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.065639955 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064533364 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066877193 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07340795 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063900087 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082940972 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064660146 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079360099 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078635637 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.076835153 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.078773441 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065004254 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076603059 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.076184209 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065394453 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064408313 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066412967 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078986852 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061576377 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064178821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.073173805 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.064608954 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.085769306 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084993958 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064163794 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.071985693 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063549661 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.062925315 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.062878635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.085197561 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065537164 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0627315 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067188451 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065586994 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.061275251 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06175941 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066319566 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061247378 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06456615 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065948281 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066551324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065366483 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07918962 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065572605 seconds)
  done (took 8.375964646 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065491441 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065044849 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065578445 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063925716 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063878299 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064561105 seconds)
  done (took 1.885451082 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089135555 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065817566 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076978216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068707711 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100655399 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083064145 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083089023 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075191148 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079816668 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075158707 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083066084 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084411194 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088964533 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069536395 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082482176 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068327674 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083564286 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072334385 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07491791 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069278024 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083013895 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069256341 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069341228 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078127544 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072288842 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068761301 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063576318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075140058 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074795674 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075520092 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069407791 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072313273 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.067328916 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075024462 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083108867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.066927433 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068103391 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073446832 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068939504 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071600166 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08447882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069263059 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070668609 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073525348 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07466383 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.066798381 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073182751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072170684 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08220419 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073325271 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074750055 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067783916 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071424286 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073456632 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.067171334 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074470264 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073327886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082410286 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068471444 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.066878123 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065833699 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072273499 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074558822 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072016723 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07499602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073684776 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.066998649 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068823418 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06898378 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068454616 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07329064 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065831062 seconds)
  done (took 6.801626721 seconds)
done (took 27.034926136 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538495429 seconds)
  done (took 2.002388888 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.593698268 seconds)
  done (took 2.08168162 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.494954737 seconds)
  done (took 7.977566353 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390512872 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486682437 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.682071437 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130797288 seconds)
  done (took 3.214942703 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.682535455 seconds)
  done (took 2.172878638 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.203293145 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.190280075 seconds)
  done (took 1.895978807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.369082079 seconds)
  done (took 1.85461878 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.092483129 seconds)
  done (took 2.576854942 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261408749 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15884515 seconds)
  done (took 1.909531327 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.449864806 seconds)
  done (took 1.938669373 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.82798657 seconds)
  done (took 6.316738428 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.199957616 seconds)
  done (took 1.737373543 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236805116 seconds)
  done (took 1.729694732 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.688263208 seconds)
  done (took 3.179579902 seconds)
done (took 42.079752492 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076842375 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.078000398 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078099708 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074961602 seconds)
  done (took 1.78876669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073248319 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069777855 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073198953 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069268454 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.072932623 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069995265 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0708703 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073631655 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.068975256 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069858986 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069476396 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069957359 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.071556888 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071104622 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068293194 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.072349894 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.073977313 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070626471 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073603745 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069933362 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067960983 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.071332727 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073644985 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068421816 seconds)
  done (took 3.198982043 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073511564 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068769184 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07088525 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069038096 seconds)
  done (took 1.78240313 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073933432 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088902237 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086345428 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07517725 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089074014 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082504541 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.065809237 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065667024 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069418013 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073783843 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064736152 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09269328 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.084525606 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.073802035 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.075633364 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062742867 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065435098 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.083760209 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.074227216 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.074511482 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066931844 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07416085 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06526037 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.084626033 seconds)
  done (took 3.311062051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.073657107 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100299097 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074586215 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084346154 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087260993 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062387532 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071387932 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.085999648 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.119558399 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062671011 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067319337 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061981737 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069618929 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062159861 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.072808801 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.101421739 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10539071 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065033429 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092347103 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062061623 seconds)
  done (took 3.088843004 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.069783622 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066319488 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.062712139 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06631957 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073931286 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069733699 seconds)
  done (took 1.915741513 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064522475 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064125679 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063627044 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06364541 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068494394 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063887688 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062395398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064299337 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064056838 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063562948 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063318398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062113454 seconds)
  done (took 2.27069296 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.190423817 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064720795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065778733 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062898023 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067311992 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063142378 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076412793 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06435171 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087226071 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062981683 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063399517 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06496126 seconds)
  done (took 2.438022832 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202441891 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072515293 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232359341 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133137025 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108082528 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112807192 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100618065 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110189422 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139558995 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098303039 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164001438 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161356484 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103442067 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132997413 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086077532 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.094084301 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151866124 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158392828 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100231312 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162637655 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140427106 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121564664 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143114034 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097891568 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102470276 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118730193 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067731933 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076774419 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170240259 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12834282 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142956112 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107676611 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090250462 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173077092 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168210707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138857013 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130793312 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080634648 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.098365404 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130317515 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195650203 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085139806 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159631101 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103183083 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213874637 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130369279 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116964604 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116119045 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103594541 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086845059 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143424269 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180136425 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135121316 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0843885 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109003896 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112384552 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113012583 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099898895 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1780699 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15792512 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126404268 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068048127 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095278705 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150282728 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128601706 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106014676 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123184172 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090789157 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13118329 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150917488 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115867691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140381042 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126267979 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085889308 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11579725 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136174061 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124738843 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166160174 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121188493 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070115954 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121634947 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100857154 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078068417 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137409707 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072449549 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171984114 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096037845 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.102896032 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109596043 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105753503 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10578742 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157382096 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139586172 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098493995 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.061047212 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238904827 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117998326 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144210497 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084072532 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104631597 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113747356 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074747571 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135510383 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.0720398 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11946182 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07190007 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122337774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128825552 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.072405327 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11854097 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097672263 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099604193 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129696522 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15721599 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086291663 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079499324 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163988542 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118644114 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100883038 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140893947 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151823023 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096058207 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100391818 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146394287 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176105849 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086756095 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15926696 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104078494 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080740665 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084353111 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120892429 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10915311 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.11885371 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078928777 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115624972 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164488365 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071925208 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092213029 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129971041 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076043273 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077755758 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100097167 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09701556 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091873646 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097151956 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10110235 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137010943 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119507516 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101253446 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121159165 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094120934 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310221462 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086924095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096541417 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100866597 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067035724 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133078277 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154263673 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076064558 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163068065 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120963038 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101956396 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115308375 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079959622 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135969298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07533007 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067078538 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141366508 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107092889 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106902347 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147455619 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101660139 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124460454 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115888827 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132229718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129388082 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126341264 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102613377 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085134611 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108416453 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123243606 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.069906838 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088512272 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077060192 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100386942 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092633281 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080093523 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138554027 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121598784 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096661065 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108477725 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093042291 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143352095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073366275 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12601331 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116088976 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090813829 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148928144 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148514674 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130677925 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099467899 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14388399 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06682351 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070148749 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086536846 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119599161 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079415302 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079452465 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255723595 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143890138 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127193568 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135304456 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108410533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117330451 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150955809 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066168936 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.111704365 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144965633 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117530241 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100852714 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086843591 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095272465 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138949366 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104635904 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178304255 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111223225 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122874681 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150092283 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095867225 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077213678 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100026233 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132120148 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101851092 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141494016 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09656524 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085094145 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106879781 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070810011 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096931448 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123192707 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116510575 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131966625 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111601316 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12955105 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073883877 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114018842 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117542501 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119827896 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060933038 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116772687 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158727011 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092407816 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117053652 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149597943 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075989012 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121166279 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171695779 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142676039 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084280604 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107586021 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113052148 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121229653 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112565373 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132428031 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101545485 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128006731 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103001418 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.080449562 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08194862 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091662138 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098462379 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.088837159 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101224186 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107694501 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.089373045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122898634 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093488552 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101516159 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109103186 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.089792064 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.083709727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089185216 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161351548 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10909578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154704146 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.092450767 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1321742 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149609505 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068509543 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073234917 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072017341 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12870343 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077275893 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120040394 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.089497673 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098639353 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114173253 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129680322 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08683628 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.063209648 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099961458 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121788567 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104374208 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090014514 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096624839 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148996979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.092538205 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073005635 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105110895 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096626833 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094738513 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155625753 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.056258031 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089970637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069500113 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073935485 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11677161 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.402279694 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079231236 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100913627 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121647994 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109980417 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128290835 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100716555 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098936448 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113728268 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148501139 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128138869 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087795848 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110358337 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128822465 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155584097 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10444533 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09412374 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170523643 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152018499 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158851725 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086892792 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112602923 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112329736 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105584387 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138007654 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081168813 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162945145 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079175995 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133707769 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101818129 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088314895 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128265991 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096102783 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086362991 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161288005 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114990375 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079776208 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075340398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116214976 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117135579 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104419004 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072876448 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137289913 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070468403 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131878355 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169626529 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079018472 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101126494 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093066421 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076645647 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104712803 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098890049 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086162127 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.235470977 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173638336 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085572625 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148456152 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139406442 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110906839 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134388364 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096915656 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633732528 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074882108 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148957315 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114271365 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17098347 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094868144 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114661112 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1058283 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121361471 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141367188 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102543696 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.170783839 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129054378 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113223094 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078353851 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099786239 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099668191 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085358146 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102505361 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110063876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112537961 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090413796 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112281147 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119861479 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079098801 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09272511 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152431429 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113698025 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14071612 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136839273 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082287403 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115288384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136796862 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077455956 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119829057 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149774071 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10317354 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094771885 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.0768228 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098459545 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165372892 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069930029 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158086902 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260553314 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106839035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110149302 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111227982 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128504949 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105904419 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117679137 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091301821 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108499421 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109636841 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079587924 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074339042 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101508379 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109656394 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09355735 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094937685 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.093887331 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14819981 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068448172 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092781179 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100543489 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143508475 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173011222 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084733187 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079457691 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115756535 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108894366 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110383012 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117038061 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076127162 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079428131 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078486432 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.073631074 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104623338 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108779766 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101154527 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108468081 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160641302 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079546971 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.21671485 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091467526 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102268516 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06859601 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075758504 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092167453 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094520381 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105143999 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097304274 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166864139 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091663446 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087277509 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090050517 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070154129 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079704767 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124874167 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107985021 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116111996 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095041798 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.058976543 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105438873 seconds)
  done (took 56.907498622 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106772453 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078968479 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093718335 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14697424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119482593 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208925193 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15409441 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195697811 seconds)
  done (took 2.760532882 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064177676 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.091142484 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097060404 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.07917348 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063030064 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065374292 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220556765 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077549961 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063061674 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.084963693 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07572306 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.0655585 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415887077 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064895038 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065851499 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.05998902 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064111376 seconds)
  done (took 3.348877612 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.360983032 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601458847 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370971245 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070122767 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.424209678 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085735144 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.040065803 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.123671374 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069482212 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532833144 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.697986086 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.120465281 seconds)
  done (took 18.137029412 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071461841 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06626101 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.080591484 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.0799282 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.068573272 seconds)
  done (took 2.008306598 seconds)
done (took 104.505602048 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076048787 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.370496295 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050172403 seconds)
  done (took 2.090301817 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.07949135 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081227399 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081437552 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.079368576 seconds)
  done (took 1.9685983 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070659484 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073453279 seconds)
  done (took 1.784129336 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221368842 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15412503 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.0831263 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.07910727 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075130717 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075559796 seconds)
  done (took 1.876736175 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068941874 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071685014 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069909865 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07294572 seconds)
  done (took 1.925698206 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073497551 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.049153749 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.051370778 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.052114198 seconds)
  done (took 1.870171207 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082773121 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.075528027 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074588463 seconds)
  done (took 1.876205186 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097797142 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.081573284 seconds)
  done (took 1.823965519 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078528368 seconds)
  done (took 1.723950085 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094932184 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110452437 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128096669 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106170674 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137040545 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.105069969 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082518575 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083241972 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073600429 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083715313 seconds)
  done (took 2.649859288 seconds)
done (took 21.763211994 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074721572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.353428182 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357680684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086258687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676201591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352842838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.960336347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088217145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10968057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064387815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081146582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646579072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954116138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.311293373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.938353804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.316498032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647405827 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064753396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064072137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064533293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.949991122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064277317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064320559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065497556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645712839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367050704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064653328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316690517 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06487202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066042696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351713154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064975922 seconds)
  done (took 15.929935306 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067315796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114082685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070480475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080784765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066601754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066400252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068092162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065632996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115993333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064511642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08132301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065280239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069160096 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.064997904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08383542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06439516 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065164367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065036579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06455187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065124702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082623154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064263603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064624115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064917919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064870938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076061079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064852368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064500691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064607336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066333984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067191874 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065193951 seconds)
  done (took 3.936335786 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110883908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121086531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070855084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099497526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109476396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06643777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138759486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089112972 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122927077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066116137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080681667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064248469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.096662465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065176298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084064407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065152447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065506352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06558572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065231717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065147489 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083725305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06473256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064860134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065396332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065113969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078218682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06503026 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065173857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065083214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066862354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068209341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065581821 seconds)
  done (took 4.192276539 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068771015 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071361033 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079155079 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080363228 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066355566 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068573204 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069241713 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066255172 seconds)
  done (took 2.234095748 seconds)
done (took 27.943730361 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074436447 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065626586 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068774418 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.076997689 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070447487 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.074698153 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063893901 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070948129 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068379003 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069016966 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071234153 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063638641 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067140893 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063557583 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070462307 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064585046 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07529323 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068276365 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.075325267 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076128168 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06657644 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069488269 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070593801 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.075542953 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07544816 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.075463433 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073902214 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069417968 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066003918 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067116891 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073014143 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081623541 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067672294 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077180315 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064289993 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064403078 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067751807 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064705994 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07560458 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073527299 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066290302 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073248838 seconds)
  done (took 4.602923261 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08337022 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086515494 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082047976 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.059768842 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.062725356 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061521466 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084828271 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.056008385 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056149377 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084038346 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.052498446 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.056193375 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059154222 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.050733249 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056283253 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053506676 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058186378 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052326744 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.056136746 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.055953771 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084097941 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.050538874 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.073396317 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059296241 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055244694 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058208637 seconds)
  done (took 3.317242561 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070747402 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080867726 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.084284402 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123034454 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.099250094 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073645113 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076116105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089198962 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.081724814 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063924998 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067592992 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091864898 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084593795 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07069638 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.064425632 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081237707 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078636294 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065633512 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070060202 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089117428 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082595148 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081576888 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089235079 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.077243079 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063702603 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065994367 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.067561098 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077799249 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.068862975 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073328496 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068049266 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067571021 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065973428 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075503863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067847552 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06561721 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086933571 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073619612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.074549338 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.064861713 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.067649744 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065114104 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087452931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122656531 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065539925 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071381244 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071752464 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.073977563 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064223109 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082628941 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075165761 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063830639 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067334787 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063440765 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064444396 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076754281 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066487508 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066241419 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.072797573 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.06678306 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085442108 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067878498 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079226092 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06366403 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.071325263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063262545 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064610029 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063439977 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.088511874 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.065421742 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.104422383 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064963795 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06495207 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.072634343 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.071075314 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069598345 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064211034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078835563 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073899435 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067044955 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.072240559 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06705282 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06647304 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.083550597 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065919864 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065159776 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064627169 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069923587 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066336839 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06483303 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076592238 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063670382 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066815021 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080206506 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063276437 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064623305 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069523202 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068537278 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063149259 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074793488 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068491751 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064088046 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.072610159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063489333 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06654087 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075440311 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069811333 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062789135 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068345584 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069891927 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06458442 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065187569 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06679633 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065483016 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072458306 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070551016 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068544447 seconds)
  done (took 10.168741644 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155695368 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150175108 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.0666326 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141024659 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072664366 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.075702768 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146073648 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.090528327 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064440026 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065121214 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065310245 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10618523 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.101293777 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111502748 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075258563 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064000477 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.07966204 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.109600221 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14487761 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138496779 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.079667837 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073277953 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066539266 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065534476 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06764082 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074700802 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081572778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073274617 seconds)
  done (took 4.308536048 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077047691 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.092955434 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071092546 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085707218 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087408695 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064033754 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066389563 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06618257 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.076914046 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074913158 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063933512 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069572952 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071672013 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067533443 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065137961 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070797644 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071379895 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066119458 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.06731776 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069134356 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073662841 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087664282 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.06829889 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063350053 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069262273 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063785078 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.060822192 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080865149 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064525777 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.087643031 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062456597 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071980167 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077301301 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064926296 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064394327 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064135226 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06380013 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063710406 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066019177 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062977271 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06254488 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.053840645 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063231883 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075625009 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.070320298 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05294469 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068804651 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068946538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069072109 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06199195 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066861224 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066872928 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067368271 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070912409 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06900496 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068959892 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.064995343 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070133378 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071706374 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063885442 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.060839657 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062625386 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068275036 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.062178865 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.071685908 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068734623 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062547047 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063889139 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.065731035 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070164786 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063988784 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.066891665 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061804469 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065889548 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068563222 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065577084 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064956763 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062906655 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064064973 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064366402 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052309967 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064025493 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050428346 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.06770481 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062156544 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062480071 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063622008 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068823382 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075942906 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065209515 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069743791 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064936842 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063365951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066973707 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.056697515 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068025591 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079292516 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078973746 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06415393 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062392831 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077895264 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069308438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062957384 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.053050289 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071649013 seconds)
  done (took 8.798910577 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085241323 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066854243 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080432062 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.08782885 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083118098 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07098042 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.072688642 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065956242 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078402137 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069935282 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072825822 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065251842 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07336446 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073168958 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066608172 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073206001 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068901063 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079236962 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078154014 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064743895 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072102564 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.0761599 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085433047 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076564486 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.074704268 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078029189 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.086368042 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068849422 seconds)
  done (took 3.804969601 seconds)
done (took 36.658738263 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.734887589 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.921945698 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.741982912 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.078731693 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.961379933 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.760160393 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.920554577 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.737442568 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.799003647 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.775449727 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.998332372 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.787063428 seconds)
done (took 64.895545996 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.821130535 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.889014143 seconds)
    (2/2) benchmarking "String"...
    done (took 2.010457362 seconds)
  done (took 5.579122013 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.193857035 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.327283215 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.973714722 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.737434068 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.747311822 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.970677403 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.539480467 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.273979032 seconds)
  done (took 30.250766165 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.895795136 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.973727376 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.447393769 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.456605492 seconds)
  done (took 15.508540371 seconds)
done (took 63.119814676 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.76725984 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75297655 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.762897006 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.720884197 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.794844944 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.747771712 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.143886649 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.784413513 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.734249939 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.727734566 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.736126817 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.163675944 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.742150276 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.177524065 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.741740774 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.743272423 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.749120691 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.342752689 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.89472377 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.749299885 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.754487293 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.76889701 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.736445727 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.746062305 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.781534465 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.735796173 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.168248352 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.741207038 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.572605406 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.742630033 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.796335041 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.336401619 seconds)
  done (took 203.535526178 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.738156743 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.724412387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.801991263 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.762286191 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.131007765 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.915050695 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.851527941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.172649595 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.743007362 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.765945188 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.913883266 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.741838301 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.933301021 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.684261419 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.769244909 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.846704842 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.926279343 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.949717393 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.775397543 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.885810093 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.760167961 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.782841761 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.741894865 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.903158967 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.773137692 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.74239881 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.75798161 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.76063089 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.934439107 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.8969168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.761569079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.770744565 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.937462532 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.612909362 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757874899 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.743984876 seconds)
  done (took 168.351058376 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.121934324 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740255042 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740266013 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739971306 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.74470919 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741144964 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.861332183 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869481413 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.193384327 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.27373255 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.79721556 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582580378 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.74262868 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811819764 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.755625611 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.742002762 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.755859757 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.767731413 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744561082 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742208947 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867553307 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.753466316 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.252368569 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751056554 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.741582347 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747734502 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.111469498 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742248279 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.74644413 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.984417608 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.743196332 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742947693 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.636805628 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.419706522 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832536142 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744808426 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746129977 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742352979 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.961050906 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7415946 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.742199248 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.746175154 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92225162 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.745044465 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.865533237 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742775441 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23725559 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.742405217 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741596559 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.40913925 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.409028785 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.743754059 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.742749317 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.744876957 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.742210653 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743663128 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.747632108 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.426931782 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.817669668 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.745394487 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.746411325 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748595946 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.742509332 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.900679922 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745249123 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.886982252 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.800760399 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.964928116 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863916697 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745987235 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81030646 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836839688 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.743320326 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.743164286 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.745944527 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746090572 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.747799537 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.828577532 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.748872884 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.867550181 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750452105 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.745269396 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.794116403 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812452981 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.744092049 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632407707 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.749848287 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.745238084 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053872558 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810210621 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.744725663 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.744294967 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744790865 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.864316998 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.744287298 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866813377 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.532097494 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.746322978 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.567519804 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.7475041 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743299099 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.876012915 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.744927625 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929400712 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.743392326 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.74340847 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826373212 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748687804 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.745449116 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.744180663 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775542381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.744352226 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.802772092 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.744438038 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.115067307 seconds)
  done (took 398.943337279 seconds)
done (took 774.690816937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.43938882 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.382255057 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.491689855 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.40424213 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.382821258 seconds)
  done (took 13.785584312 seconds)
done (took 15.470726226 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.82993729 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.836706566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769184854 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.832514928 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765210262 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.832950501 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.817441148 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.770604049 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.800186837 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.770999841 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.801709935 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768966379 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760174765 seconds)
  done (took 25.042735396 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.979075293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993608261 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815810342 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.976872581 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.790923616 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.974084105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906619233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.894108929 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.894581988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761655262 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758845304 seconds)
  done (took 22.432975756 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981815556 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982975075 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82300973 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.987701162 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796545454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985915882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907177804 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.897339853 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.896075486 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762053258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758631615 seconds)
  done (took 22.465172557 seconds)
done (took 71.626580188 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754124742 seconds)
  done (took 3.441078915 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.776335071 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.912227945 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.759613696 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758342393 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754675654 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.75517319 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758572469 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754427276 seconds)
  done (took 15.917842539 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.751535563 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.755095646 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.752933101 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.752575037 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.754664993 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.755598434 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.759995898 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.755441785 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752791818 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.755785723 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.752954832 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.754791265 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.758721803 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.754429281 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.758499888 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.75792791 seconds)
  done (took 29.772540775 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.761177798 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753872309 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.753142487 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754087557 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753234707 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.754324626 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.758571343 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754214291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.754827375 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.754007257 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.755032503 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754527167 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.757145121 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.753750122 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.753835103 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.758301786 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757643369 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.755467861 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.759327021 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.753857395 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.754466547 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.754483404 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.754168963 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.756454298 seconds)
  done (took 43.822940152 seconds)
done (took 94.641633256 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.650729797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.400066178 seconds)
  done (took 8.743901263 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.762404658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.759954326 seconds)
  done (took 5.258813813 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.760340479 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.761023472 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.759659953 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760577748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.759947998 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.759829355 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.760473724 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.75982368 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.758737513 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.761446267 seconds)
  done (took 19.295316802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.759451824 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.760087462 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.756111417 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.760745692 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.760649758 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.756660387 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.760112807 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.76086101 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.75971442 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.757857867 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.760991857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.758603552 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.760853957 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759530746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.760645737 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.759131733 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.758177473 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.757170128 seconds)
  done (took 33.361143571 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.76184677 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.760918094 seconds)
  done (took 5.216686771 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759804575 seconds)
    (2/7) benchmarking "second"...
    done (took 1.758470864 seconds)
    (3/7) benchmarking "month"...
    done (took 1.759350072 seconds)
    (4/7) benchmarking "year"...
    done (took 1.758723381 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.758438911 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.758027681 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.759491616 seconds)
  done (took 14.006929747 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.762746085 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.916003356 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.98708838 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.397885129 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.763687378 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.765746326 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.719086686 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.765055354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.76653071 seconds)
  done (took 19.539437756 seconds)
done (took 107.11447789 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.617387614 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.756855612 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.135823712 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.821523846 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.810569956 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.052669922 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.779605121 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.982943023 seconds)
done (took 42.651790192 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.828628346 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.306956964 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.339833145 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.174781244 seconds)
  done (took 12.518680093 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.741650104 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273096349 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800537296 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352802175 seconds)
  done (took 19.885555266 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.127307962 seconds)
    (2/2) benchmarking "read"...
    done (took 2.122804517 seconds)
  done (took 5.951960227 seconds)
done (took 46.881400838 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.759619097 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762768915 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.764565392 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.760706388 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.763481266 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.76160107 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.762013744 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.763953305 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.764157476 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.764404976 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.763469515 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76403458 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.76188211 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761539305 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761271037 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76454387 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.762511328 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760901431 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761240954 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.765165465 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763399476 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.762295911 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.76274525 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.763891343 seconds)
  done (took 44.004258035 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.764276456 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.763132222 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.764251995 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.76724547 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762659332 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.764386323 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.764590234 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.76223844 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.765312472 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.76558585 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76421539 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.763064876 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.764745774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.763628831 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766918774 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.76418357 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.764681614 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763017919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765943495 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.763227099 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.766509358 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762914445 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.763226967 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766529402 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.763800405 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764769099 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.765559688 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.76479415 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765604816 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.763000073 seconds)
  done (took 54.632858719 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.77249647 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.773502335 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.766804485 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.766298154 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.767230515 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.76555717 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.767856289 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.768535736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.766976367 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.767634264 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.76754556 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.768441263 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.767275866 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.766875494 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.767321205 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.766884759 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.766689255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.767319054 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766990754 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.767242173 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.767980751 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.76854651 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.76794468 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.769104188 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.768170635 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.768865578 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.768467515 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.767614215 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.767489412 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.768210102 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.768391444 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.769638526 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.769111152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.768606107 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.76936454 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.768341426 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.77282755 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.775668481 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.76811474 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.767633852 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.768587621 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.768328924 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.769533989 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.769352997 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.768813658 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.768997973 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.769720534 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.769564415 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.769143862 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.76933398 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768729297 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.769687574 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768820506 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.769575427 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.769112896 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.769300001 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.769533786 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.770338089 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.769556892 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.770337718 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.771105291 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.769597235 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.770248176 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.770606845 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.770176992 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.76973497 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.770745831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.769775628 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.77240746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.771303426 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.769982734 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.770959892 seconds)
  done (took 129.069530791 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.769328004 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768982567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.768714862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.76699931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769967484 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.770088362 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770370182 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770275383 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767546844 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.770786113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771736103 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768957436 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769184186 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77168332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770520988 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.769205735 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770326907 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768087832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.771391693 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772600059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770174561 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.76872292 seconds)
  done (took 40.640098545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77181311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772248904 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769714111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771692838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.769853141 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771258818 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.773166351 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770939286 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771997094 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769717048 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769480317 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77243469 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769864687 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76959576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769648918 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769741776 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772239282 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772122335 seconds)
  done (took 33.581822975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.769810131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.768756899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.773523999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769413575 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.771078631 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772525929 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76979602 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.772362776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.773049688 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.770403931 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.773647974 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773259271 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773023736 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770652333 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773338122 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771615814 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.772470308 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770597612 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774136182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770411139 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.77133297 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773855094 seconds)
  done (took 40.684366776 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77322462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773299635 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.771307111 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.771955016 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771231241 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773822976 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.773020818 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.772469789 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77275503 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773887038 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771387047 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.77326463 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.771746733 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772313038 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.771078468 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771970193 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.77363327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772628993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774323857 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772265908 seconds)
  done (took 37.15898859 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775323833 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775402698 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.775412605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775326221 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776320211 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.775273209 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774708027 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774351212 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774671865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.775690882 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775067784 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.775579872 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775547417 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.775830697 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775538806 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77561795 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775317356 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774992465 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.77576241 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77563876 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.777314452 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776326992 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776674768 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776051588 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.775952611 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776383102 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77627814 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778049632 seconds)
  done (took 51.429923322 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775419 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776190384 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.773604316 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.773746704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.773212933 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.772822133 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.773145331 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.774710257 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7768196 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.773676582 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.779004848 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.776095497 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777106351 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.776345358 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777372658 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.778559857 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775418012 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.775044551 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773650521 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774620451 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.776169759 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778002625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.777181749 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774852494 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773604562 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.776520016 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775736578 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775848997 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776185756 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773402019 seconds)
  done (took 54.974245511 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.796214783 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796327324 seconds)
  done (took 5.301976448 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.774662469 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776125218 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.776867738 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775271209 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774248958 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777949709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777898246 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77635532 seconds)
  done (took 15.920191198 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.778047682 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.778805222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.777644011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.778921025 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.7780868 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.777949165 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784226721 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.778120219 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.778906931 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.77913399 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.785088234 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.785265918 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.780930458 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779224949 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.778936376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779608437 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.778633241 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.778819918 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778068789 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.779134299 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779580195 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779734542 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778914469 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776715607 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.781961048 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.786679512 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.782148953 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.7789211 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778415365 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.783585978 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779294721 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776598705 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.778548342 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.780139822 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.780519254 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.779120582 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785678665 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779739132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.783495401 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779482828 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780356653 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.777232405 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.779596142 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.779952287 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780247022 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.780035718 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.780235083 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.777522779 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.780002837 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783319884 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.784939596 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780164642 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.778516411 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78256445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.780515444 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786137149 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.779217242 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.784308483 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.788755508 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.788947575 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.794558365 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.788416477 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786016077 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.781245987 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791726967 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.803327517 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786914959 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778420805 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.780337689 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.781665968 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.785141823 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793126425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.789797655 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.782409511 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783915505 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.781530733 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782165573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782122103 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786584427 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.784958261 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.781473514 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782538579 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790768536 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804327893 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.780586321 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.783053959 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.781477883 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.781981371 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.783980041 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79073312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.783015351 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.781779268 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781238004 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.781462099 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.783660653 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.781224444 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.781896117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784071955 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.780965656 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.783141621 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783653746 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784882313 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.791615777 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782264653 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78338086 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.788300927 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.782951336 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781599738 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.788547061 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.784055857 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782793208 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.78447728 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.789273588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.780574692 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786474698 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.791944876 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.785192103 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.785662054 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.784597639 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.782793909 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79276042 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.807878465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.785232526 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.784524104 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.789048182 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.795231751 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784695861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787555237 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.785417072 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.781909861 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.783598117 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.786328665 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.784181291 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.786471931 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784797733 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785907757 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.782209815 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785301605 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.785721536 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.785885402 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.785463356 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.78503412 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.78569731 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.787736862 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.785449931 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786999756 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.791171186 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783919624 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.786621845 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.78586832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.782380143 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785963198 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.78706281 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.785858976 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.785606923 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786593601 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.784574946 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.785810169 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786559186 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.786071192 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785555543 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.78658816 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790093144 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.786467927 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.788692517 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.78553239 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.783200115 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.786735587 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.786419385 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.785977465 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.787246106 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.78500279 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790952731 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.794254905 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.788844739 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.78669845 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.789689485 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787169967 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788257222 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787506861 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.789911233 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.794879679 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.788537435 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.792179601 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.787895156 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787226276 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78752125 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.787759673 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.786601655 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787905425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.791185791 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.795132522 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79943474 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794889186 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.788828996 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.79126831 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.789171777 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.790576354 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.790934085 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.787872632 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.790084326 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787676671 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788055618 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787633156 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.789472047 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.788815373 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.78799364 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.788504379 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.789760425 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.789141616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789731436 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789150866 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790408582 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.786475151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789126191 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789105679 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.787904414 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.785487613 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.787251204 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.790307476 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788835016 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.790580943 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.794940986 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.785937232 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790793125 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790378796 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.790167401 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.788529918 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.790483217 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792219383 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.790535767 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794877097 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.790106151 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.7903126 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796066361 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.789190127 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.790068242 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.792052036 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.7907028 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.788402386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.793663675 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.799480553 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.790771793 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.791698352 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.791105262 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.791379752 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791659001 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.796418771 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.787648041 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.790044839 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.791177522 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.792880969 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.787870593 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.793703293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.792396875 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791773027 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792825544 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792065353 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.791376617 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791973019 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.79240952 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.792800097 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.791462227 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793759342 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.799205348 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.79466597 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.792622065 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.79318445 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.793443005 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.796660166 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.792849726 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.792040564 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.791562021 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804107409 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.799533007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798828914 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.793858114 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.79269046 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79650047 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.793571317 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.795955297 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792499955 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793330384 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.793189339 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.79251615 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.7900882 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.794326126 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.793301841 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794494702 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.794935556 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.797070027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.793147041 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.793921757 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.793777263 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.793990362 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.794885857 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.793834094 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.794325171 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.794796169 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795825334 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.793439422 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.792891273 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79969446 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795119755 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.794403842 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.793496043 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.792625582 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.794382952 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.79586691 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.794473181 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.796573991 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.801390283 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.797600155 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804190536 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.796377462 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802209703 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.794034171 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.797307619 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.801687263 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.793083581 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793114307 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.795281113 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.795243641 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801884535 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.797088202 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.796383642 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.799316499 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796498184 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.795323882 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.795523676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.795142214 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795710197 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.795194146 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802484036 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.797786974 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.799605273 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797842855 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.793343747 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.79603834 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.79734271 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.795912688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7979878 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.797634018 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.796269553 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.795741993 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.796678644 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.796609124 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.797747801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.79671411 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793018629 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.794568149 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801834642 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.797091292 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801456136 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.79760472 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803911576 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79860231 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803057375 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.798444078 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.797488644 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.796901755 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.797630338 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.797662618 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.796313561 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.798172851 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.797138102 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.799211502 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.801166818 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.798213154 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.799120928 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.797933466 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.797382112 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.797337682 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806681331 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820596561 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.799106395 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802789275 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.795316763 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.799422333 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.802546292 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.798025093 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.797033025 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.800929402 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80782217 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807317202 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.798992968 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.797651796 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797816816 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797351683 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.798459819 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.798677311 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.79902673 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.798494465 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.800057823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.799449795 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802244568 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.799125394 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.799616725 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798568834 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.80096501 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.809219218 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.800155703 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799974553 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801266649 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.799568914 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.799462516 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.800333325 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.799012932 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800353696 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800830096 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801317992 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806490983 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.806004259 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.803527604 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.799766335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.799457244 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.800074665 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.801511308 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800706256 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.799986268 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800740859 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.802131778 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.801045113 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.799992239 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.799503933 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.799522698 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.801188118 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799805204 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803552004 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.807691735 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801202921 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.799184856 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.801578725 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800891126 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.800326602 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.802244257 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.80836294 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804351031 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.811346627 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.809404631 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805410753 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.801496155 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803995698 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.808539244 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.800014909 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.802099025 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.800886572 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.803261778 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.801773446 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.805665296 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80107891 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.807665011 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.802443984 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.802657735 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808233802 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.803330898 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.802490862 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.803643199 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.807599382 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.800354941 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.800836216 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.80303137 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801678104 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807512868 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.805121604 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803316627 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805689086 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.802327275 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.80420413 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807915805 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802823999 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.803236813 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.80087128 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.803586971 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803517343 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803450984 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.80022642 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.801718763 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80245107 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.806975353 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809995933 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.802003952 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805330287 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.802557432 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.804773092 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80401215 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804087888 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.801738489 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.801051099 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.803235226 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804385688 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.80334052 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.805252233 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803802155 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.80656171 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.805332609 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804557694 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807931709 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.814326638 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.812116698 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.802759736 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.804052742 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.804905488 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.806364188 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805177202 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.804663278 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805472895 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.806280855 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.806513552 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804200641 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.805840348 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.80827976 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818512639 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.805117401 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805708574 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.806412301 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80890942 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.804657298 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.803452346 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.806435498 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.805821749 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80885629 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.813017172 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.805865143 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810494448 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805926127 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.805671632 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.809679142 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.808806391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.812772519 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.808875447 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.805534103 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.805844395 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.811174968 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.821023227 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807617974 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816017292 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834167582 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.806153304 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.807550309 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.807549738 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80672365 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.806860217 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.809130861 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.807233006 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.806527066 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806500233 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.807724157 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.808531392 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812056931 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.808519994 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.807814331 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.808338161 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.806939923 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.807614767 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.80536527 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.80779126 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.806815964 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.808074188 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.807728627 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.80813862 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.807100247 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820151672 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.818050088 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.808661618 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.808045847 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.805646773 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.811648353 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.811526406 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819026178 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.815751715 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.808073177 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.809442869 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.808728678 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807682981 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.806545357 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.80922162 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.808988211 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808751352 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.806303649 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.821174057 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816657924 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.813791855 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.808800456 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80909123 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.809797234 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809926912 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808083938 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809249088 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811369912 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.810566702 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812279239 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.809029875 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.809410573 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.813044435 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817021028 seconds)
  done (took 1071.752249817 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.807166855 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806841138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808277352 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808419137 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808877789 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807385241 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807535403 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.807440674 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807142409 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807918165 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807274009 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806186944 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807106447 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808489829 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808584477 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.809168086 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808759473 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808055521 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80859439 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80762542 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808298402 seconds)
  done (took 39.706670938 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.811645581 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.807617758 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808025328 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.810436258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807430958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.811820802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807743734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810547344 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.812194001 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808182484 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.811130758 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812453984 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.809191358 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.808847698 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808684029 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811809484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.81233097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808735412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.810615702 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809549673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811845053 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.809386069 seconds)
  done (took 41.565759206 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.811860833 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.812389207 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810229215 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.809927907 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.812722484 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.809214483 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.811571438 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.813564796 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.812036963 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.812338784 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.811827447 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813080055 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.819467372 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.817448837 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.81446935 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.812294187 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.956024525 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.812761991 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.812511784 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.813207808 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.810232157 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.817151508 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.811383249 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.810189135 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.812344967 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.813601507 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.81474404 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.812459291 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.8134159 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.814167192 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.817960523 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.813881726 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.813839516 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.816915409 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.81316212 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.816033751 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.817198379 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.815731356 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.811604996 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.815780632 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.824787929 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.834988002 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.815789044 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.819706912 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.814728027 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.8149614 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.817209274 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.822498352 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.813315358 seconds)
  done (took 90.804095677 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.815061355 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.815125755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.812936667 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81428433 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.814446437 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.81444098 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.81292546 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.814323252 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.811596669 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.812654751 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.814891063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.811770214 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810389611 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.813877621 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.814521415 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810939836 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813166755 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812260364 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.812520245 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812949868 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.813155778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.814697387 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.815582986 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.813769184 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815125762 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.813577397 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813059188 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816411182 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.813116169 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.812647488 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.814764764 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815708387 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.815818004 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.812051326 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813146222 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.816295828 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.81658603 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.813826491 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817634544 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.814808716 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.815382387 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816632157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.816646191 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.81706783 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.815080468 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.815265199 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814329773 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.814151522 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.814640551 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.8159075 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.817182714 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.814602542 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.817489756 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.815036621 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.816704301 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.817863062 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.813861702 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.814448125 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.817065081 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.815151533 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.815143647 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81726777 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.816082511 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817323156 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.817492783 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.814635427 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.815447224 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81744776 seconds)
  done (took 125.151051051 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818492031 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.818125616 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817591753 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817900889 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818258829 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.818020992 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818396731 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.819392711 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.818281911 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818140346 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817899427 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818316213 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.81920775 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.818613315 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818070853 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818795572 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.817723988 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818339354 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817816704 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819732373 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.818408195 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817964765 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.82002635 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.820761254 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819480109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.819395976 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819670549 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.820387687 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818787941 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819347164 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.819812399 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.819932061 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819703947 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819666697 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.82065032 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.81968942 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820012699 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819795431 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.820756416 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.820051422 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.820291186 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820602867 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819496274 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.820271272 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820853829 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820358147 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819218871 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.820505158 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.820801808 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.821204456 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820723154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819864736 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820796724 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820458863 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821205566 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.820872186 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821749734 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820520179 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819762253 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821341104 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820002477 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.821362215 seconds)
  done (took 114.564048779 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819235925 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.820991398 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.817345877 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.819048665 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820666549 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818739795 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.821223527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.821954935 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821969785 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.821617705 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821872687 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818771592 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818971434 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820390238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818248626 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820428478 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818869805 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.819418453 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822422331 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818669825 seconds)
  done (took 38.153411239 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.820835918 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823172425 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.8201228 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820237846 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.823078502 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.819393073 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.82298049 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822200206 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82054226 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821921898 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822683935 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.82301134 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82069578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820366241 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824092105 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82026494 seconds)
  done (took 30.899462453 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.820926566 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.822806147 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.823321229 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.823141287 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.820039312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.822463817 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.822991339 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.821318157 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.819547562 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.823316497 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.824713798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.822310891 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.823374428 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.822674081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.821055693 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.822697247 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.820816007 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.820165545 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.823954062 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.824457522 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.823297334 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.821305647 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.824536676 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.823362725 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.821158836 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821197853 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.821028876 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.822997891 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.823045725 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824264012 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.821288058 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.821814045 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.821779444 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.822440819 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.824974714 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.821333037 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.824753317 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.825063943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.826573724 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.825299512 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.826227742 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.823019789 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.825267865 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.826589859 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822955921 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.825002101 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.823609483 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.824566885 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.822826233 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.823149827 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.826837967 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.825954663 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.824237105 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825399311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.826822634 seconds)
  done (took 102.037089355 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825697326 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.826414351 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.822537912 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.826013593 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825335028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.824075359 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.82614978 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.823795111 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824416862 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.826234652 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.823957454 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.825722172 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824338445 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.826484651 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825780626 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826834981 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823376224 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823501209 seconds)
  done (took 34.608599112 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.823967522 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.824592232 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.826687372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.82449533 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.82563671 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82624884 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824535364 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.827063599 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826933871 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.825459191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823923987 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.826748881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828429986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.828728802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825419 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825728907 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.828415211 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828291113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.825210716 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826005237 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828454666 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82881215 seconds)
  done (took 41.938593371 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.82644685 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.827072544 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.842930816 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.846620249 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.848749594 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.861123334 seconds)
  done (took 12.812603635 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825963821 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829220665 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826174792 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830275529 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83025633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824834212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825730533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825772197 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828575274 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826590141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826460274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82829275 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829803329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827510112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828382704 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828141348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827141649 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824995453 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827403864 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828823142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826927791 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829530916 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826768726 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826545605 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826794418 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827075235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829954936 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826611392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827129747 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830445699 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830714369 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82801698 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829327884 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827760707 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831829623 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830390454 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828772281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830398136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830165144 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829089878 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831303927 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831245978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830296165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829398991 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831406875 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827971809 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828932766 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828397945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829951556 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831729382 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831813133 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827810572 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831154404 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830557389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830710136 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832441671 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830494544 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829847187 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831807812 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830168328 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828899975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830320863 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828240977 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829900095 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833216446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828781399 seconds)
  done (took 122.474109414 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829029531 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830440325 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829263902 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831306824 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829084658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829928511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829703809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82930749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829270676 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829923948 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831651764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828696821 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829308723 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828471023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830055786 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830618094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830529792 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830371052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830683074 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833521201 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830541979 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82991107 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830257279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829666993 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831156407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833059473 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830428558 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830975339 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831948327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83191919 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830181048 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829988305 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831808309 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831957765 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832212408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83201395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831000153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831886012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831618446 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833604489 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832181535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83399357 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831596293 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831830411 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832452353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831180903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83171052 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831618152 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831864505 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831747378 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833171884 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831903174 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831510401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832044565 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831951563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832915549 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831566144 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832101391 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8320122 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834551158 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832104061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831833474 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834571507 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832250899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831734349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832319697 seconds)
  done (took 122.632627014 seconds)
done (took 2498.196117487 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.835247782 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.831787669 seconds)
  done (took 15.433660057 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994980384 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.947434108 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.831957844 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.838844854 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.832599008 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.852224459 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.839022416 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.832731275 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.832298919 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.832838921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.831938142 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.022094711 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.836795589 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.832648563 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.832175028 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.924837716 seconds)
  done (took 51.685979839 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.835225634 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.837058964 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846897755 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.838521898 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834938851 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849265648 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.869703483 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.839474724 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.869937861 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.847843322 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.906496881 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.84970154 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.836412244 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.884115044 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.84966084 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.851431724 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.922290715 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.91167811 seconds)
  done (took 35.24712793 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915379386 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.838418229 seconds)
  done (took 10.527196452 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.864258896 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.852316719 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.867315341 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.850468585 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.855983751 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.829305433 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.872630835 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.869674063 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.861546502 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.88494815 seconds)
  done (took 70.378981599 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.841845548 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.83719564 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.836567711 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.835380454 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.828819892 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.833436344 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.837260172 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.830725037 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.516741733 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.874706101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.842785426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.841614155 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.836268214 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8385459 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.835632296 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.859146994 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.95662306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.835411263 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.834700123 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.842347163 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.837744061 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.918533911 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.850700707 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.838456908 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.86708761 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.520631075 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.847939793 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.843876392 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.947834198 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.83611942 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.838012969 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.840346654 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.840534414 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.228885616 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.169902247 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.837020156 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.846633995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.844966614 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.835759004 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.977047609 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.839693098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.8438055 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.808423183 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.159668987 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.928970919 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.882625828 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.171782996 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.841665946 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.841955463 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.869139316 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.842161688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.839187543 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.852246757 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.351037846 seconds)
  done (took 131.006991873 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833621385 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.144681473 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986970173 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.835260635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108660593 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040594091 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.835974002 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884142421 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.836109144 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.037115557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.057625666 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944614806 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834498518 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.834692239 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.833650263 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832684236 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99546956 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.902839434 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837421116 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.833726879 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86275359 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042865426 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.964331373 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838311192 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857082643 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046293758 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.956856912 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943154594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.364803294 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.833314819 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900320635 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837569841 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.833818217 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.835042588 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99300457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.93298107 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926072101 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.837277874 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835956892 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833814133 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.500626781 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03279868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93504043 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979139783 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086769573 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039987006 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.482471374 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.83400867 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.475975772 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998486064 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.050199405 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.042783972 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.960199804 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.837549575 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.986425282 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83660799 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834920976 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.073270508 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079607479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940113167 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839291657 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836572107 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835891097 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080714957 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.837898972 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935052758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838309235 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836043265 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.937909765 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941830614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.085719072 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051272828 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87134475 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.136987939 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.307456474 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.051593695 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907134017 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072819505 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.839497113 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836520137 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922670142 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.595376198 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039738223 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086678458 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.060695037 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87360581 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.461293934 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.836305653 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.031346858 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.023675534 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03374961 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07801638 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.996290529 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.14804562 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.838383512 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.837852225 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.096144453 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975732237 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840450519 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198939948 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072813509 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.399991284 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8705174 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133764721 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974140312 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.210169637 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.465722329 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.838838851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008038794 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878345216 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.838705438 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840208686 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030110687 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.646136932 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839094086 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.568354016 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.90378674 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.842464424 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04190176 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842336793 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053197463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842121025 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074157042 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.177854737 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874092895 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.011775931 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082095304 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.635009348 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087813979 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084031376 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.958900239 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138317322 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.566702902 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.839287541 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116807189 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842628224 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.839866639 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.007643165 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84079469 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075104365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.845591214 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068239139 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866134271 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000633381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847451063 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074262745 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.878666353 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893651301 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842072054 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972601366 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842143596 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.722320815 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995715381 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843680476 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840905492 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.248404951 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.84185419 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988906844 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.072753129 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867098747 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911048352 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.36712113 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842652684 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930325108 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869319166 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.289367469 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.845065555 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.060819715 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.81687087 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.280575389 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.841124807 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082181568 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.098310989 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841860454 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.840786965 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.583979446 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.546290854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840968263 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.000837263 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.354374847 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.491261792 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047220524 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845181407 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9724572 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846519064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.927362066 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.19110585 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841736846 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.841711295 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845218354 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.843036367 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843866942 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051332804 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873717249 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.36787316 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981284497 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061736251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.153427537 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.064523806 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.889684253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846655688 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.112904972 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846604362 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.90988427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.846124588 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866996956 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077002417 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845397668 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074275338 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.09906865 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.821778865 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89600285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.845442255 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840424994 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.84454766 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.995185184 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935418811 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844973673 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.842155283 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.953857705 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970024497 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.036949153 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.437295756 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.014044222 seconds)
  done (took 893.743367802 seconds)
done (took 1209.789789161 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.844149553 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844096356 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.832187082 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841648094 seconds)
  done (took 29.142900857 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.847782489 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.845419742 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.846871981 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.846150318 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.847642242 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.845015166 seconds)
  done (took 12.855919021 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.864239287 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.843019591 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.842018132 seconds)
  done (took 21.327928305 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.913924315 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.252996607 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.95980363 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.292491091 seconds)
  done (took 10.196563862 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.847855221 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.846642684 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.846999635 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.848321579 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.848512702 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.849937993 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.847819078 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.848423514 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.849685918 seconds)
  done (took 18.41293514 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.265589501 seconds)
done (took 97.981642892 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.040109066 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.950876075 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.433089167 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.724857129 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.967265888 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.869119047 seconds)
    (7/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.016985173 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.488456004 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.764076807 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.090454081 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.990619643 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.02236765 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.912782036 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.275880081 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.891939787 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.140827744 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.875787173 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.828626191 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 4.070851239 seconds)
    (20/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.379295759 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.189683944 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.831677694 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.673917368 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.469185376 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.942819576 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.292834136 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.513339347 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.955159861 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.404615093 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.818138529 seconds)
    (31/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.070598821 seconds)
    (32/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.810530787 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.896639736 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.948524798 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.445447631 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.235426216 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.847502402 seconds)
    (38/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.964173517 seconds)
    (39/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.978546798 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.975381094 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.846169352 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.800817365 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.447248724 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.948980583 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.964722439 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.06643503 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.949052281 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.29024002 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.137014453 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.053783837 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.356892208 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148101483 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.524897241 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.518207694 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.03203864 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.936740765 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.546806734 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.97305078 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.10671094 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.953622362 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.493111153 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.914511323 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174993186 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.848922438 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.051848516 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.972285244 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.904532434 seconds)
    (68/309) benchmarking ("sort", Float32, false)...
    done (took 5.613212923 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.748469135 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.373811513 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.877402083 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.121465087 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.853326869 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.053022533 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.436876127 seconds)
    (76/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.971988446 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.23437217 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.091065467 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.042834567 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.838378709 seconds)
    (81/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.042145864 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.767375254 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.856144637 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.711813961 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.141418084 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.934231032 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.921466568 seconds)
    (88/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.320333804 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.563537764 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.227325132 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.815010627 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.312134221 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.864755984 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.97722541 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.250969964 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.875818929 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.873866584 seconds)
    (98/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.951482531 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.852221436 seconds)
    (100/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.210664221 seconds)
    (101/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.836774137 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.579229433 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.133457593 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.935409776 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.875664464 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.011698101 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.356780494 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.858424205 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.986425857 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.927575832 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.944886474 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.851888445 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.919476186 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.076482117 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.933583161 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.235755057 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.854718581 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.852903532 seconds)
    (119/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.873201477 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.032826383 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.999374391 seconds)
    (122/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.136076313 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.255893234 seconds)
    (124/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.298144951 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.658111468 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.165915586 seconds)
    (127/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.873486472 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043050834 seconds)
    (129/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080421706 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.860077787 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.240341708 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.839240937 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.228340722 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.857936936 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 2.306642975 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.877350834 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.850619033 seconds)
    (138/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.170639858 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16059532 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.110599385 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.087598572 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.167181554 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.119027394 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.9573899 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.202462632 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.957059622 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.744114083 seconds)
    (148/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.13141107 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.938429697 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.479618591 seconds)
    (151/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.098487423 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.94139499 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.391364104 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.144491493 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.098243747 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.121842885 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.97149477 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.878228009 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.153722099 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.444193662 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.889429767 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.858194543 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.954476479 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.231884624 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.880017057 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.875821011 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.156100153 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.456025629 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 4.852177511 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.435312528 seconds)
    (171/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.990528658 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.841585711 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.583711153 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.959717319 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.121901816 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.058661379 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.022469905 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.845752958 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.062602888 seconds)
    (180/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.035565345 seconds)
    (181/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.162944569 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.934269359 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.089989331 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.222253014 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.884662895 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.19845585 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.857798041 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 6.856435851 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.886450342 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.189043395 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.995525868 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.90448962 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.666547478 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.918531991 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.660236138 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.862625218 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.915830651 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.221961444 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.047514389 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.010530306 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.491827971 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.965272864 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.858739221 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.00805103 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.674572243 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.216075052 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.225712146 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.84163219 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.01612799 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.066335423 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.918811849 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.769448819 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.849359979 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.183964781 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.360049867 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.945500186 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.032653531 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.299071457 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.944718344 seconds)
    (220/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.044547518 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.859948633 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.857152737 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.107244605 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.949949982 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.862218184 seconds)
    (226/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871095252 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.87919294 seconds)
    (228/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.856516235 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.897475271 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.157472392 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.891737945 seconds)
    (232/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.474684178 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.94305638 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147041493 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.863307171 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.87497515 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.949694215 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.073626589 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.989546202 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.887369811 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.978386949 seconds)
    (242/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.060865437 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.848014974 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 10.362103268 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.259056101 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.368245542 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.111965314 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.974918241 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.997725081 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.23569502 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.821190956 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.121306778 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.860075207 seconds)
    (254/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.894142251 seconds)
    (255/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.988764358 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.959367561 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.369507409 seconds)
    (258/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.90392877 seconds)
    (259/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.916974107 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877633734 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.185325976 seconds)
    (262/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.945601123 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.021030804 seconds)
    (264/309) benchmarking ("sort", Float64, false)...
    done (took 5.672646961 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.888061618 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.859453482 seconds)
    (267/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.415707137 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.255408765 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.884306587 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.843784193 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.923852264 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.999688547 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.257016245 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.888383686 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.005585035 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.237205588 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.159096627 seconds)
    (278/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.035843555 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.079967113 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.88531519 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.198677173 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.185750377 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.912156795 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.972183294 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.921259653 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.942722005 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.007450816 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.956388954 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.867066882 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.632505823 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.941682005 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.207624353 seconds)
    (293/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.873804698 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.074934113 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.889404244 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015666577 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.502210348 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.90476674 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.924522568 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.96159487 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.343719842 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.122104274 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.966457759 seconds)
    (304/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.94250015 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.882612075 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.984259856 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.845969867 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.042950602 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859969932 seconds)
  done (took 1014.553719507 seconds)
done (took 1016.409036855 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.895060735 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887114979 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.870109812 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.891847174 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984147068 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.90822195 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.881666 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.873390621 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.919981321 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.920786497 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.870292759 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.905218723 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.874248801 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.872041508 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.871095744 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88651045 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.179795248 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.897976143 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.889463798 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.881690837 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.888214051 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.871365632 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.921786713 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.906264488 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.87621832 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.874685372 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.876018285 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.89256773 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.984548028 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.876435522 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.875539455 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.884351736 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.179767647 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.898109311 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.867677017 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.893328414 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.884601049 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881656048 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.876384513 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.906034383 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.319619489 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.879256679 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.875264454 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.874066623 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.874487832 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.87704005 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.874736361 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879793274 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88647389 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888032474 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.317072887 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895270344 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.877512357 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.873491623 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.884985544 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.873434386 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877138344 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890204324 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893897985 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89037718 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.170259855 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.902805236 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876918993 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.891888123 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.882684961 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353331442 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876485453 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.878905991 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.320448123 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.886083652 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.353756874 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.889760664 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.876393708 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.890956817 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907652598 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.182798278 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.895049217 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873959053 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882744597 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.873915894 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.884904269 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887542264 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.879750571 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.876152939 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889095476 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.909182652 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.885327715 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.876700173 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.884377065 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894924501 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.883618175 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.88736047 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.879245857 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.87158012 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.88529144 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.879914732 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.879218713 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.879564316 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.880170853 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.887139757 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.319055712 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899408263 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.873731192 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.872326963 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.876816931 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.889943271 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.318551439 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.882886306 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898670009 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924166197 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.879108461 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.172710427 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.904637873 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892944425 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.887479374 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.880241675 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.872426086 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.174208973 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.344385382 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.898192677 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.879396892 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.875979297 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892991126 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.878752517 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.873486664 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.184252731 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.902722336 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892124571 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.998759646 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.888238868 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.910030862 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.876404207 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.881070656 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.911319889 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894349607 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.910587892 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.880927433 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894207838 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894290162 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875268374 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.890226893 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.889246131 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.879848261 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.885049932 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.872365708 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.912918109 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892109307 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892192851 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.899811114 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.001077762 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.876140445 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.174649972 seconds)
done (took 294.854030295 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.946838977 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.869720745 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.978287492 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.879111887 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.965651148 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.967168271 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.877666146 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.880235858 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874568025 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.255297153 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.873621021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.874339543 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.87002986 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.875492366 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.959998736 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.877348408 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874774689 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.219546809 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87809457 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.949273718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.870626362 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.875912416 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.877433725 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.25975373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.875451372 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871942277 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.952095898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.87799923 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.227070889 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.875403694 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.876419475 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.22560653 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.969240409 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.896064195 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.888059759 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.885420445 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.964818845 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.882148502 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.961271452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.960322884 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978878873 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.917540885 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.873903529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.872686017 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.882275941 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.879031335 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.876210422 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.906929494 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.876603086 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.876636818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.220983175 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.888479698 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.877685193 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.876530035 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.876655375 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.909792248 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.876943237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.880272893 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.971197245 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.8797409 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.941482629 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.262895077 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.258953264 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.878251203 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.881552481 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.877588784 seconds)
  done (took 184.927536563 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.946571471 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.953182083 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.948750948 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.882690815 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.92936776 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.952117753 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.883028087 seconds)
  done (took 15.304645121 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.886344147 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881705749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930094769 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.929110477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.880332902 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.031872377 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879878689 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.891813037 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.878947674 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.933812618 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.88016762 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880369064 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.88769087 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.875516339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929982525 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.892528743 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.996362162 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.88224751 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88206541 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.032402674 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878723394 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.888740164 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.935879825 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.894396376 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.882994566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.888513125 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.474820726 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882406135 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879656686 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.881260054 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879018542 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.924293236 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881773673 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881583166 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879322785 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.997411355 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882075444 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879468803 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.882381721 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.882202353 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.883199003 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.881690249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.882149658 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.879237277 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.881795452 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.906136877 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.882151516 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.882882217 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.883033916 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.882808853 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.933324995 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882699487 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.87970023 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.880337567 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.939021141 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889802299 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.883651996 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.880560558 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884547465 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881178387 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.034562536 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.931121427 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.883581361 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932311589 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883878324 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.883661756 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.884828841 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.8843954 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.980106301 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.883711741 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.934194577 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.881012893 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.044884894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.908095641 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885178505 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.887491653 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.887045608 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.883842262 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.880723632 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.891084385 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.881688788 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.885426343 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.89080757 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883051557 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881207337 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.99627612 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.993071965 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.882479645 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.897266796 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.892192033 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.882203055 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.937919904 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.8844353 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.882432375 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.939180654 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.000999387 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.940072472 seconds)
  done (took 207.129458065 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.889691703 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.893357678 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.885466113 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.900406687 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.884848374 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.884998115 seconds)
  done (took 13.152780324 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.887665106 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.886431996 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.886141314 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.884832924 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.885943123 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886883621 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.884426015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888296882 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.890271754 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.885171255 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.886844464 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.886185377 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.886595357 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.886680695 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.886586528 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.886714819 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.88625183 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884167649 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.886637324 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887006636 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.031416133 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.887583821 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887257334 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.888292376 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.891136455 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.887073051 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895753723 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.886927828 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.886838569 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.89547113 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.891030773 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.887228552 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.888826189 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.893278881 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892637469 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.888492998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891684085 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.88789073 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.885456158 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.888729319 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888560644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888924973 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.888450317 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.888034424 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.8905743 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.892896127 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.892849813 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895185998 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.888739125 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.889736555 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888303989 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.888695925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.888152852 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.888980388 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.88977986 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893063415 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.893671066 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.89049031 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.888579459 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.889970739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.890575319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.890088274 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891426837 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.893490971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.89662815 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.890686866 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.891418586 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.893395744 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889871828 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.888687037 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.891180019 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.886820451 seconds)
  done (took 138.977435832 seconds)
done (took 561.311955596 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.162395333 seconds)
  done (took 8.980955409 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.945560934 seconds)
  done (took 8.860212498 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.384271461 seconds)
  done (took 10.202741632 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.897844597 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.919302059 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.89310371 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.885289512 seconds)
  done (took 29.423807607 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.997118657 seconds)
  done (took 8.815430434 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.898429002 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.883763849 seconds)
  done (took 15.635286436 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.9152169 seconds)
  done (took 8.734799837 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.003333293 seconds)
  done (took 8.825629734 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.906996283 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.896148028 seconds)
  done (took 15.635656258 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.872842916 seconds)
  done (took 8.693996604 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.604167041 seconds)
  done (took 11.435167977 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.888858217 seconds)
  done (took 8.721420929 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.926788646 seconds)
  done (took 8.745831099 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.062591376 seconds)
  done (took 9.881902074 seconds)
done (took 164.410996373 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.887142806 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.884901892 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.885479669 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.883191153 seconds)
  done (took 29.359936727 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.924670005 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.92502467 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.92632386 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.935562856 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.927318692 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.924208869 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.917207308 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.917023326 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.93554188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.927657471 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926999334 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.926762162 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.924637784 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.917556903 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.926793921 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.927363689 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.936847405 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.926468547 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.917551112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.927381631 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.892194274 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.936042689 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.929425111 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.893592477 seconds)
  done (took 47.990987488 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.091068668 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.96446958 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.045426665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.944269333 seconds)
  done (took 9.86574641 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.943756507 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.945323967 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.956235481 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.997047891 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.02324804 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.954718582 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.91975849 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.914394481 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.901104548 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.945940417 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.021562978 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.962138107 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.028822802 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.893002497 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.078948901 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.894378903 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.892650002 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.945107306 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.997097 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.010096495 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.892243865 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.945567712 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.948679835 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.961710269 seconds)
  done (took 48.794942694 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.891895619 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.901241982 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.898645279 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.892613239 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.892573253 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89363083 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899289447 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.894355749 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.914322432 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.892865109 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.892191298 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.893187949 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.892602516 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.893281417 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.892954416 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.905296001 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.90592594 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.89376139 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.896244947 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.899542283 seconds)
  done (took 39.759586005 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.887230651 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.742186361 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.238789117 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.143416719 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.88827595 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.89013065 seconds)
  done (took 31.613137798 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.906848384 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.899672653 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.892988395 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.949333966 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030375966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.900512483 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.894140625 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.904932478 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.940452081 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.957150933 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.911312543 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92299219 seconds)
  done (took 24.934537564 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.889672701 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.891872268 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.890748521 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.906297719 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.90535158 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.903954231 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.901499297 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.888592778 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.90938908 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.916231567 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.904550067 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.906667521 seconds)
  done (took 44.642213159 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980803293 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.934934448 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.930123461 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575360791 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.270880613 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10150603 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418555189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.228452332 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.893424531 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163352086 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941427642 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998484832 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146953885 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362244539 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926237047 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.359133821 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190414804 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10697062 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920325437 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619017456 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956688041 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.04870712 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.684979631 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950813678 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102080219 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.019916073 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.151893867 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.8913694 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028363756 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929817634 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902220512 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892216497 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165213695 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275078543 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995943663 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900679252 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509549839 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.60583302 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.881067682 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.768706143 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.665092518 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.021852286 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902374272 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892445183 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826888917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.0186818 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272020532 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.898057163 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.604071829 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893155093 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903590319 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98191771 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.896785108 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.70872886 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811839617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896528378 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.889983372 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898871344 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462675767 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.042144252 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057868497 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.868516229 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.984473974 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644009009 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29431262 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.047919839 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.897375252 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89722447 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829178063 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.692762776 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952476639 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223886792 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.91555819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544004061 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22132397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.025010503 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837743072 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17797256 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.403387639 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.867049351 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123364801 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895205615 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829208785 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.929298984 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828437204 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167458329 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933036067 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.674604419 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938658079 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.228496686 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906859392 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916072093 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918936986 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119758533 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.779643713 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896325682 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.734325925 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040466092 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91805563 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233481049 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829511707 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.900289563 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151586885 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.107439583 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.951747328 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.398681233 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056648903 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426702385 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.948110333 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.025764405 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944493748 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.171303988 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956486286 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055192104 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953150265 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897827221 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204262247 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456155837 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.033367517 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.983973168 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025520848 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.223508227 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926611784 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963018639 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900615685 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897173817 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.726799768 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45430104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.897546963 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.899549111 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947283522 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.94373474 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.898100425 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841079179 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.529101752 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.964264511 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.914263259 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120869777 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.44142997 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207801531 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832161977 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226840849 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990247546 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.120586255 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.546563769 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.97635041 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159272219 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948194256 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984212304 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944227946 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918489585 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996788463 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920174813 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.029330682 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189701434 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.903016597 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.902546329 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.718040904 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937025671 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905477433 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.90410989 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650738282 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17714168 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943205121 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907996686 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.788089411 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.912520945 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963897396 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904567529 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.909490698 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.444584295 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629324874 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.909488451 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.491854228 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123415219 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910026906 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.684216239 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015579982 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.981502156 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180894047 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962200344 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.834668014 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.611954402 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.593437037 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900656192 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835723795 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900227462 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909175618 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910171057 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.096030833 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18115146 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946531713 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.618468745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944305693 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911906291 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.906453949 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900478515 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.411679126 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055674997 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070365721 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945053322 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044464653 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.915497135 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835288422 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905482086 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906377756 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.900555138 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.901934266 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934054322 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.635109105 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284760375 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162348067 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.510427258 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915633531 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.706800857 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.961427192 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.963426288 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766297361 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045270069 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.957105606 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915879131 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.913416698 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.697789954 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.599848473 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469727308 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229532207 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216575386 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351979881 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.099532483 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930337891 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242134269 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837138625 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466916118 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960885633 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.690512262 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848150598 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98627323 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.550024405 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24800559 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919856418 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131153633 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294779294 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.679145568 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087803396 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11526491 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939797598 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.032638561 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867275593 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.189721456 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044643755 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.649777312 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112753579 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237401291 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622807566 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.034400261 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.90378253 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.595838595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994515942 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.614358404 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075120653 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.074157709 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.860003211 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382306628 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.914491987 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.13056129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272132947 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.03540695 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.027417448 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841412011 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917696428 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91707258 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.907577042 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.906286913 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.793361373 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.159823703 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916981425 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840670123 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.987335248 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203447114 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.813972097 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.911429545 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906354331 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212079809 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420761686 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079829128 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.981065193 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.427169259 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913943484 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840501666 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840661924 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.599701821 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914010632 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881381304 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119728248 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.008494018 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825130548 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.958926762 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990165321 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163354059 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.92199477 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182370022 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187717724 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604975437 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933899689 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.007750915 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.603096545 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.02187234 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908843465 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144455585 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.660509875 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134284033 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.958715342 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.860931936 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906749576 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123328053 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90894796 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.829403769 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145597701 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.630875595 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.985629698 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23584174 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985626046 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.846065777 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.9621327 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.000672954 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918785173 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987219971 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919336286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.919672992 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919658506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95614426 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.850942768 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.03755154 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.922616868 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000653781 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.080205688 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.432742988 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.914966862 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192271324 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277333243 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246697708 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972469012 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90964558 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91378055 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844216748 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058415266 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.135763141 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183948711 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038232061 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.026190111 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934582067 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.614224381 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.100787101 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153840932 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184962061 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.805685492 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38953418 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.95218138 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.911090259 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921722921 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.122033332 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125146823 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216096027 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064664107 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.971304493 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280527732 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185151472 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.911738853 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911910493 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503704169 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.996170117 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598420004 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.953587569 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86469768 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19223472 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922442178 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302960975 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934734775 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.07212583 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.428303181 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665129835 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203274086 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.900515598 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975808225 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19098247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311115057 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22847089 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980830443 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923221893 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.012930862 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05924461 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.784262931 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915129235 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912702092 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961041824 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.622677985 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922309128 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197834443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226044205 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.910135762 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.798708857 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937674249 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.923841771 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.137017854 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195780217 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165192786 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923562995 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920506192 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.728433757 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191764584 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974345994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847406751 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.918040524 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013052767 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164103545 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938517614 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.367372106 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.625331909 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191126822 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.914568202 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936144884 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049839754 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284381476 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244521471 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.451252167 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128924708 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.500738269 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.46637731 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21707307 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.919808498 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.053625651 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220158841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.919482999 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.970532757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954303284 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.189094457 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228431049 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.996947999 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644308525 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.886358587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25766126 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474856086 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855380704 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925445828 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.976608244 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916847118 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.047975005 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92782165 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.800608739 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060500252 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.701433682 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188873839 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.922380554 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.902609665 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.682536243 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17653211 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950647709 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05898077 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928185696 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.633228162 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.279443726 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173817069 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.975298605 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.926807664 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.920683945 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918127403 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905294334 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113805684 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.112943397 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198066371 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.005224748 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.954942309 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921743169 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.134116552 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128756539 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.837732616 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061437239 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97741997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960079527 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.823695996 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419447827 seconds)
  done (took 1692.265819975 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940508021 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.933987973 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.996149094 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.983201207 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963887571 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951119816 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.956527205 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.014123621 seconds)
  done (took 57.591734826 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.918179836 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.116547969 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.927219263 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.927319573 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.926844307 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.91857555 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.084329815 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.930075838 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.926998344 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.928129607 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.919589217 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.91853876 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.224487309 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.94170229 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.918653865 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.905505743 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.927418769 seconds)
  done (took 75.234247696 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.958218147 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.993287613 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.951439248 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.931778175 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.919149362 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.922846897 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.763641422 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.940521657 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.919876472 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.153017743 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.557329316 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.938259651 seconds)
  done (took 90.804319157 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.929080113 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.925189042 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.927105394 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.92717771 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.926367694 seconds)
  done (took 11.493153954 seconds)
done (took 2206.196524116 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.163391017 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131891525 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.150652295 seconds)
  done (took 6.136944968 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.071115025 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.11910304 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.23826683 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.243836903 seconds)
  done (took 10.531717065 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.2119163 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.309796727 seconds)
  done (took 6.378536877 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.308339837 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.930195604 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.302412381 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.92120053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924135102 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.92678814 seconds)
  done (took 22.63437737 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.926647931 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.929147969 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.926847018 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.928976999 seconds)
  done (took 9.568357549 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.907112641 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.615657487 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.912648818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.923951654 seconds)
  done (took 21.216447834 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.676117272 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.686142488 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.669958335 seconds)
  done (took 9.888674546 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.405550634 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.820998037 seconds)
  done (took 9.083877174 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.180460535 seconds)
  done (took 4.037433582 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.059760425 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.233684927 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.441537887 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.441612194 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.536858034 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.648773895 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.246244584 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.170003959 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.32837219 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.362027392 seconds)
  done (took 25.327386857 seconds)
done (took 140.362662568 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.300941576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.163606835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.129175181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.259384322 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.158796102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.128675426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.144362671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.246456606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.770285592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.768417757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.261735836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.154546419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.089958179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.161894373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.089691961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.163425356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.146933197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.314732973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.96017964 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.156063331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.1483597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.900870505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.101308504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.913841464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.147327879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.084531517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.480202177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.16541892 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.113529741 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.487428943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.087774339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.309835417 seconds)
  done (took 174.369185186 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.682690264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.926929713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926465912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.927566253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.284940373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.928602157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.928960754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.926562487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.987153553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.973665779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.926751441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.280387158 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.928188114 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.926769395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.946436738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926559326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.101779969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.701118803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927768788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.927455344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930581087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.162881574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935296699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.203682639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.121595581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.942949227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.924660843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948611075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.927401454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942376177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944839422 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928668993 seconds)
  done (took 208.862043708 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.927962307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929327469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927453958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.928689593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.934259322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937141798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929813648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928165464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.500821131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.492896407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939777732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.931949736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934380543 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927241094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.938258937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.930626719 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.940901541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.940253486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.930334109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.933265215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938757012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.628159882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.938210281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.618372206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934562843 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936848474 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929322675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.938998503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.939779602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941541933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.938036148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928052057 seconds)
  done (took 222.279184486 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.130744477 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.934850363 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.936536203 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.883981615 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.936276923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.935225908 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.931402275 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.125687398 seconds)
  done (took 19.691537627 seconds)
done (took 627.073522031 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363068231 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.208327702 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.110282488 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.958972913 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.175587262 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.988494806 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.955281477 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.018188413 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.679575571 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.023609237 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.623626449 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.97223096 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.71009564 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.977775269 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.08009875 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.011645635 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.534977096 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.633880667 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.132593082 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.995467984 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.126578593 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.895871564 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.027766616 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.714129494 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.729514778 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.930622663 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113364053 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.538434557 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.965311017 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.121669446 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.640986145 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.325370484 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.965079213 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.954733503 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.007070451 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.993326608 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.290904045 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.965914088 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.081285364 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.695246304 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.99706763 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.5728427 seconds)
  done (took 105.670453129 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.926050439 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.925640693 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.924435691 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.925075829 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.926499753 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.925696849 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.925184115 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.925969884 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.92491148 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.925225949 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.924435653 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.926317833 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.924971413 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.925758026 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.924447307 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.925796531 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.925782636 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.92789772 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.924493995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.924572915 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.924715187 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.925407003 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.939359124 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.925324195 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.926288088 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.927305359 seconds)
  done (took 51.951626895 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.939590513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.085332552 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.159582123 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.956271539 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.937730514 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.941734118 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.955387456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.942751404 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.941144807 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.940652264 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.033252314 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.94449963 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957200127 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.162039413 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.952874793 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.940199106 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.940331611 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.940189713 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.091735299 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.953669342 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.95840117 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.944530923 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.959022436 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.952757839 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.942076557 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940137282 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.942555188 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.4143571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.949744046 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.0347546 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.982552613 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.959997743 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.385802528 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.173186501 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.992319699 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.94775866 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.941050171 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038629881 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.946438219 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.941084009 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.958361787 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.947047835 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.162609524 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.444193223 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.952188888 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.940759792 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.424623089 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.045019831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.981453813 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.951384039 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.166409013 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.955274393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.943265024 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.941288574 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.977969111 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.952052889 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.942663539 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.311304822 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.952123329 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.960632181 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.951837656 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.942914903 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.095759497 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.952520596 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.08592818 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.956650273 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.948351999 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.942626238 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.164535065 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.95555822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.45096556 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.954064134 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944128611 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.035145787 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.089592623 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.446511037 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.953731124 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100229602 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.399549586 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.964931198 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.95003993 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.405708581 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.969340554 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.94993489 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.944982607 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.944864678 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.944380179 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.988420971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.958916469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.385670253 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.453979102 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.322641302 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.967941539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.95890286 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.944073473 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.311864306 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.951232721 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.944888962 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.160485976 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.460738473 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.955977938 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.95180917 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.435543709 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.956967738 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.96311693 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.952164102 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.171743119 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.957937875 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.989965865 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.945030303 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.950736452 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.94710354 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.963453864 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.950977036 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.945446796 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.425055456 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.056599468 seconds)
  done (took 240.619000553 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.939274357 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.948247814 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.937528198 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.938517344 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.938782745 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.945059575 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.938495579 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.937717211 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.944973027 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.938608774 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.938879862 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.940205507 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.940995711 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.941932058 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.442837801 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.948224942 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551763329 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.941158552 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.941619125 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.952115063 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.622173163 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.950685233 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.942335845 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.957785934 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.94211657 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.942077087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.949006843 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.979818996 seconds)
  done (took 170.108175985 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.949547844 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.130849123 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.966026031 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.983687391 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.960184804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.946956899 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.972742935 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.96909743 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.954546378 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.946795721 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947120169 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.010356193 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.962964943 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.080688984 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.981494938 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.981134118 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.056960628 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.956811632 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.94713921 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.946912111 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.976887895 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.944777708 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.009497252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.07911151 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.970853474 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.067623651 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.954155876 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.950808368 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.949635555 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065993299 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.966448828 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.009534652 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.980745651 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.967104483 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.070761173 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.067285393 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.057291317 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.98101183 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.956258535 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948278852 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.948076239 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.938600175 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.06807751 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.97199903 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.950897306 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.0597886 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.968831724 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.952430896 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.959271917 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.948525474 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.962733075 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.969287957 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.017654143 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086537059 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.984768123 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.976532621 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.975004407 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.240385352 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.960555896 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.05169762 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.945545994 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067751018 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.970350652 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939152816 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.95060235 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.955234612 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.979538466 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984910126 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.055991709 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.958334663 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.051856788 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.987237596 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.960114754 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.950436629 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.953007141 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.069933467 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.074776385 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.986837764 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.992508967 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.984786762 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.948850371 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.951050518 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.939895303 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.969099211 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.957507983 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069858664 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.070465501 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960013388 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.954082076 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.953609052 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.953152466 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.978381265 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.079179328 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.991285086 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052121672 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.020954748 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.03124323 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.969525085 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.965208868 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.957303125 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.015501399 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.970989438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.963543239 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.292193 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.025103711 seconds)
  done (took 211.356120743 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.428995337 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.009560214 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.009573415 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.231338056 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.389449794 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.803017648 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.002707831 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.002882091 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.028400031 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.166232744 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.063585847 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.014770547 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.991111784 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.974840025 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.003898468 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.022373151 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.006093888 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.306645761 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.125797167 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.08400955 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.983279175 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.30528347 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.321707611 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.39519231 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.035960553 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.32316959 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.676942873 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.242288278 seconds)
  done (took 63.837048564 seconds)
done (took 845.405499864 seconds)
SAVING RESULT...
DONE!
