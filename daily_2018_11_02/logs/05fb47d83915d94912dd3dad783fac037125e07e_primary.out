cset: moving following pidspec: 22859
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.263365627 seconds)
loading group "string"... done (took 0.469122115 seconds)
loading group "linalg"... done (took 7.641300198 seconds)
loading group "parallel"... done (took 0.173092745 seconds)
loading group "find"... done (took 1.185677522 seconds)
loading group "tuple"... done (took 2.126201979 seconds)
loading group "dates"... done (took 1.33923927 seconds)
loading group "micro"... done (took 0.24750582 seconds)
loading group "io"... done (took 0.754322415 seconds)
loading group "scalar"... done (took 42.070498866 seconds)
loading group "sparse"... done (took 13.272374071 seconds)
loading group "broadcast"... done (took 1.174521072 seconds)
loading group "union"... done (took 14.273764736 seconds)
loading group "simd"... done (took 5.185946425 seconds)
loading group "random"... done (took 10.38719994 seconds)
loading group "problem"... done (took 2.011565525 seconds)
loading group "array"... done (took 23.456616098 seconds)
loading group "misc"... done (took 1.436414734 seconds)
loading group "sort"... done (took 3.581350437 seconds)
loading group "collection"... done (took 19.449257165 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537304088 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140246945 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131320014 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146968703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203093237 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143618999 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155526308 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113978447 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942192121 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174700851 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152970015 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510280625 seconds)
done (took 5.079883914 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264613975 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09450607 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104226319 seconds)
  done (took 0.878118799 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078009107 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144902444 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093800002 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078841083 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096147681 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078391222 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096241772 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078419571 seconds)
  done (took 1.345463381 seconds)
done (took 3.248094537 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730033038 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282162598 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201902848 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459458741 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194392659 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213289715 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725510974 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.382885711 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254004944 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09946697 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142531086 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383284667 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135263644 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.721745111 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088810577 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124133232 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181984068 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.492577407 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081448922 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109585796 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115884477 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144014488 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130578154 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092720651 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191078406 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080769558 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192057696 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109858676 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080010713 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285194848 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199922925 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.734336604 seconds)
  done (took 11.074702284 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109816428 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133184792 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097542105 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13912141 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134847111 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100934696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085248114 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097055614 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122929055 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17697341 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11338912 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135186104 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094721649 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081527317 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114272495 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245116239 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122035814 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105786268 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102017376 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103930363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120707051 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112142311 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107228159 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092243827 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165312096 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224673098 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113229535 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128755102 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099085152 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113484452 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143237743 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144775372 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096660854 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081253775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175083059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126660118 seconds)
  done (took 5.151100877 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187749223 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11917842 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167021207 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163531046 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138648324 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155619242 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161718799 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113692205 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255933333 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.180418456 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176313264 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145198376 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.1026303 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098811147 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082919458 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095498308 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080677956 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.69397339 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.125638469 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161034999 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118491368 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106028989 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086737797 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.72519401 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105744275 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081869046 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101236821 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066891456 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095694913 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163715324 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083510898 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.166325816 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106343398 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100889588 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13220606 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202044722 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130225927 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120290062 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098452087 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079601354 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190448969 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088921855 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096997035 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103364408 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135481567 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134647161 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097927756 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080905698 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219888287 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079914165 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113918772 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.966118015 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183033228 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091767761 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098390878 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326242475 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09937096 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099056302 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078460307 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.292015963 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185670593 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100416306 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081491497 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099878508 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078614124 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.102171152 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08124464 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.754663935 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08273067 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108131212 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.119580874 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08293181 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096846362 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10209316 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088079968 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113910945 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079936023 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098907707 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078999406 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09698138 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08125676 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109035824 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101589914 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080782993 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165099586 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081596508 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117294799 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128956579 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085933515 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097569433 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131546124 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083155347 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097593731 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134177902 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080935229 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109718652 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098752185 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142617403 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082429637 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200664276 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080835871 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127175881 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099279621 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114498431 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111682928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099072291 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084068293 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095470967 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077641217 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165130847 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082518949 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099432253 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083414662 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110496326 seconds)
  done (took 23.948063288 seconds)
done (took 40.851373172 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318305005 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102051174 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102069132 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102626653 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099926761 seconds)
  done (took 1.473796323 seconds)
done (took 2.197570608 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288934277 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.211999675 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077023294 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168269152 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093541325 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171779001 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161290693 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112212422 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218505211 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077490329 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180084007 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076812312 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094012951 seconds)
  done (took 2.681367683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095047498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115553488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082738704 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111913485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076627228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112223965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093330511 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117677576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109988493 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085113293 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094367551 seconds)
  done (took 1.815017245 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094475677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115025812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084234492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111887279 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077717845 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111814146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093052171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116707333 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110118581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085900471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093670202 seconds)
  done (took 1.815853839 seconds)
done (took 7.024998446 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091217682 seconds)
  done (took 0.808670911 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925476484 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.845535929 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113046007 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150975099 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319261426 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.175099778 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478144621 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125032306 seconds)
  done (took 11.057089589 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145772574 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083063316 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10483754 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084808562 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103746363 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086161781 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098551266 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101392394 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083481003 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100295141 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08667691 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099622137 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100196389 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085242988 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100589635 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08780286 seconds)
  done (took 2.338378568 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119625127 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117797928 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106328716 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10910058 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087523995 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104076965 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106236304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08895453 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101218527 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10413389 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090781498 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105373275 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103988041 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081222592 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105789884 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108333946 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086536104 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106172003 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106390775 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091372332 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106686423 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096578957 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08673613 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106462563 seconds)
  done (took 3.259513269 seconds)
done (took 18.18496604 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159467528 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108206262 seconds)
  done (took 0.995369183 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09523279 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113310979 seconds)
  done (took 0.941125559 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097685479 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095530179 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121175609 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110079338 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080073456 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095798481 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119943397 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081148811 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095577718 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081195103 seconds)
  done (took 1.713851722 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08261054 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109413695 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101989619 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094416378 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104458651 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094349946 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088361477 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098550347 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109044896 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076601382 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102843556 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114694337 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086259041 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116226391 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104603 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084251649 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103084926 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098048001 seconds)
  done (took 2.507368363 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07992216 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097088884 seconds)
  done (took 0.912102861 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080600206 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094192903 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081515143 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09756888 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094295143 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077123964 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094450775 seconds)
  done (took 1.35448785 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.512431097 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137823759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255932436 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086091614 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120563237 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30521682 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097740106 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084447189 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10302634 seconds)
  done (took 2.495992878 seconds)
done (took 11.651710812 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093018362 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118176078 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112245759 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467763764 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107440792 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097651628 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161273364 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253995398 seconds)
done (took 2.15184388 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144557334 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328886309 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117740325 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068859768 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098262366 seconds)
  done (took 1.353238958 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079325462 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101319313 seconds)
  done (took 0.920168834 seconds)
done (took 3.162021596 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081099888 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130232289 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080937345 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098485824 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077991203 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098716326 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078006641 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096621516 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080413457 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096497842 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097660984 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080743928 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09724585 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078202631 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094438624 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079903051 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095450706 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077423368 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094666678 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078091499 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097603243 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077995386 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095194945 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080079501 seconds)
  done (took 2.917951739 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099777215 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098374946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103651914 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085996233 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101383117 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086433619 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101692413 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097324507 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086193226 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098878841 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100872599 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084569218 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099872475 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083764657 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099909703 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102080729 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086109897 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098424629 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08365318 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100320988 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10312407 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081189824 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10107696 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104639009 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083873609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100676991 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083275592 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09780474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102739505 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084203995 seconds)
  done (took 3.584888091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08486372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09485091 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078707442 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102129829 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077723032 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097481246 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077659181 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095966482 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079633954 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094966486 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080027641 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094999449 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078594124 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097076372 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080391586 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09820825 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107943174 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078106819 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096162912 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078568641 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099246922 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0779349 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095965589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078162178 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095125772 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077885626 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096138064 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078037862 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095889422 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077663792 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098382241 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082062546 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095840021 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084817667 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099201255 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078580229 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099267128 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078449156 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096321524 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09482074 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078483683 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095412721 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078796609 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102585739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078437169 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097976963 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078201556 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097387911 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079929876 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099438699 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077999823 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095099933 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081012172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096126916 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09907156 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077881405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096606018 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077924731 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097458499 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078044031 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095229023 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078061011 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097949627 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07849456 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111277451 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086254191 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095810264 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080209298 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096449551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081512045 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09672419 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109720378 seconds)
  done (took 7.174506101 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083351399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106721502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080096005 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09757327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077098808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096174626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099453085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079164401 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098013952 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085346525 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096009548 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080693226 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097243395 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108935046 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079826272 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097702197 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085016667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094337404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079050298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099219037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079235399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100012653 seconds)
  done (took 2.749536232 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20966638 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104767742 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142082489 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107871754 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08300457 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10655445 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102816339 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087141497 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10344152 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08388641 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100074053 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102862936 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082928477 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100581774 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100928772 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084845726 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102204242 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085969499 seconds)
  done (took 2.644688905 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093218648 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09896982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103475131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099259873 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099297551 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084206871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104624452 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109284605 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084027545 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099115997 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091345164 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100990351 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102115149 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081827908 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101719377 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081402681 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10173054 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081012036 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10860294 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105086282 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104453514 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090456033 seconds)
  done (took 2.881390494 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097244002 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100822635 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118941949 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083993786 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095686963 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079650948 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106094027 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081438137 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106781613 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100435146 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081420957 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09723843 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088205132 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098537473 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103620569 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081306379 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101095616 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082238135 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101501155 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077771811 seconds)
  done (took 2.640308848 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102570642 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101077124 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100286632 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091719641 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100565067 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082442711 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109835868 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101078179 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083514247 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125000991 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100633269 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083342538 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109667461 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106827103 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10007125 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092821036 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108926644 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109642126 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083903082 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100687639 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125722314 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083414145 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110380369 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100207406 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.197886858 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100187114 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100786435 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089442591 seconds)
  done (took 3.661533618 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081887147 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099383227 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078809785 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097617663 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078775087 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097414355 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079166695 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096599081 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081694068 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096817694 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081096105 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101481509 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081361727 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098651225 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081375219 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098692216 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081689878 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096668762 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078919047 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096438539 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081679773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099139802 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081863029 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096194789 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079073712 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099075318 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079017881 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096031614 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081711789 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096552227 seconds)
  done (took 3.435901823 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091142675 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106860189 seconds)
  done (took 0.959082256 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078843387 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115662899 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07896637 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103343512 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104501146 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082381939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107711193 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087065562 seconds)
  done (took 1.519327057 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097970519 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111467099 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083645865 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111929665 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110488511 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09515334 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167403269 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101579244 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087973516 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099152799 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113737553 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081456639 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106162311 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082661694 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106094891 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08889927 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097697648 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087836838 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102904327 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098062763 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083671148 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110836294 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084512164 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096553053 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082946171 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110352128 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108899443 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083050355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103276931 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109868766 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087804291 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094037042 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082319479 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100935853 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081175108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108896496 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112817201 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084919197 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108820647 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083055419 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110666116 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096257488 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087820873 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106365681 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09313652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100433666 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083134711 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095196622 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09823423 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084946996 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096263592 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082970274 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095371938 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090071152 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104467526 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113813242 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081019015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102068567 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085666187 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103516878 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089746394 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102109952 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084998223 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100078275 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107150299 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086604517 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10745795 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078230859 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094193279 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080756722 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108465724 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123937191 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090478789 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101461023 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084153195 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097560465 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104365663 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083422747 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107563353 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090888091 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100169984 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107033847 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089432217 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100402622 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085545567 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107828034 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098311206 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084423852 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0986652 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097911599 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09971313 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081562896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09773625 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109299711 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085807973 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100645804 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08063684 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109744669 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078258165 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102800687 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085368329 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101695154 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111557363 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094817862 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109803799 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111173942 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091705794 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104594043 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088937986 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100300212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087057847 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106082334 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11081903 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078002704 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106870183 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08719813 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104858939 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092283616 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102077296 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085857709 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112030836 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110914814 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083879104 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100693209 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088608644 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103706463 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089386846 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111485316 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101761816 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078701212 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097556181 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088989454 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103277707 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089914266 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10961124 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106607228 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078321011 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100974957 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089192317 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108916098 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100874209 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083110639 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105488004 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083602396 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100620321 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088323274 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102316347 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083214879 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106154938 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10237011 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077812594 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10521159 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085415081 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09892903 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08697446 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104623487 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103749294 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083495382 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099770976 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088487743 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10232617 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082241959 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100905704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081311831 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110348513 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103560054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079731061 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09849798 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090321818 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098681358 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082729722 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099210848 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103159379 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084443043 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099765622 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08216126 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101967241 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094855015 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10624611 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101683533 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087752507 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11148036 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082965121 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102864546 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10092147 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083717163 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10291481 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090272456 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106679726 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106825332 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085915474 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098147171 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088856068 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108693491 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082722579 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099110718 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082674883 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104551931 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108748355 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087230987 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103112349 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082496826 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103687178 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108146879 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08623946 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103160201 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082326092 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108067279 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081738458 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108474273 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103843628 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092094487 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104863573 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078483286 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105156934 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099278012 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089277566 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097465334 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080907157 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100091576 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08412815 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099796992 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085730628 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095500981 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091349668 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109663785 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101484698 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082195371 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101261413 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091801271 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103581658 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08632005 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105586948 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10638933 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096232019 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100292049 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086667236 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110359235 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101635737 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076879706 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.1067624 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082188662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10064228 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08240112 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099360116 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086100539 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110193424 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10631386 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07690579 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103915286 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081378994 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099755451 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07890906 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108901307 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105481485 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085168011 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110453424 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084044629 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102337355 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087266889 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101314486 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10264507 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085129447 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107905378 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086771713 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106385211 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085737335 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106868988 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086094421 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100291454 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.1042508 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083354927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102454722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091528955 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10340122 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086045302 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106748894 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105048459 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084285292 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104815982 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083779915 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107419582 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086801117 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104357261 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089140445 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099950344 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093514282 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104052142 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113660738 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085905888 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102460908 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091653472 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107623635 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108111803 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08456318 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103668195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085123613 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101605978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085649413 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111213423 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099773655 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092731198 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107769949 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084046486 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105034444 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083313911 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104561822 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084342435 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104051101 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105740402 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08524458 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103881298 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091237488 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107088868 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086096725 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106162785 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105579736 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084255612 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105243347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078045429 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103305367 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085278696 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10477049 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090487987 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103449373 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105517149 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082805412 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104334302 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083358108 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098831431 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091568573 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11220839 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103509782 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092005264 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101056799 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084562269 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112998523 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09715803 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081833282 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100330627 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081744369 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110793149 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085502866 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109693912 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083420802 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101691335 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080136592 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102971163 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101274619 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079390821 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104284139 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09058731 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108173939 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085244968 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106055287 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090087895 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10741492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11332019 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084738694 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106879656 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08657218 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10189099 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084747922 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104222236 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086864676 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104235236 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099692986 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080996509 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103502515 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085294616 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112992965 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084061582 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103671 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090734365 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102421757 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105194641 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087395253 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096747022 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086901331 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102052489 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083558142 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101185889 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088104846 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106541291 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103146409 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.0908236 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102090778 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084029609 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103374398 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082282312 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101580709 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10229191 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084700771 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102095056 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08552318 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111986021 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08167007 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105358486 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083154691 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103890463 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106727154 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085384735 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105144915 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091171662 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105441288 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085430071 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109652647 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10625073 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087904754 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1039714 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085286561 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108460699 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101435903 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092082354 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102855412 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08525282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104261662 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08199512 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103954924 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083221484 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101985662 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107655847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085199399 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102621256 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083070382 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101823614 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08575775 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106693367 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110330632 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086481078 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105788001 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079929502 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10058489 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085556492 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101393012 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085555574 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106352686 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108879755 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086361417 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103470078 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082997397 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111487397 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090854723 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107951784 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081389648 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108077036 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104034166 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086364742 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104058502 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084269994 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104184375 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089419927 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105107361 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10310917 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092160893 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107118548 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085204518 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105263388 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084475799 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102441626 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098474757 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085186426 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106625649 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090838249 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10566833 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084326695 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112218512 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101981962 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084145284 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107858853 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083904217 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109380381 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080231651 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103960006 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104165851 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084798232 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098667052 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083227483 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10068668 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086740003 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102495778 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079849257 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112647767 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110472465 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086282886 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102892633 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082664823 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099227412 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080428499 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104205423 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085868349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106008658 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113110443 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083620084 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102957988 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079929451 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103530892 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087385308 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106994629 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081535567 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098886842 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08270096 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10622504 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109504092 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083805675 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103147507 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087699367 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105132774 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082682346 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107568409 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080776591 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107470766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113158746 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086129845 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103661565 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089683649 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111552258 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104843468 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079921991 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104261129 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08710209 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103304581 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086062606 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106047301 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117206277 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087629869 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103194464 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083900782 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107773012 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084987969 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113049739 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105092437 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085447158 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109791715 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086547247 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114318327 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106260938 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09097144 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107147004 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087673058 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104081669 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084005863 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102794988 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082264973 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10505507 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104871427 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089355767 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111816674 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083657136 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113408885 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111611496 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089109523 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10024634 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084190792 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103100488 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079521018 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104384814 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082533504 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102599553 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082439636 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102626781 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104717439 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090822989 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105665416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085577336 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103321606 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080686534 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10525257 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087413706 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105829635 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10044676 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084433799 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10555384 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090190018 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107838743 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084583216 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106292979 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085116204 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104378074 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099120596 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091208122 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104030553 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087076769 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10374044 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08481494 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105263886 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087721853 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109444437 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104916778 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086911228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11584605 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086974116 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10208575 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101027004 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089899104 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101205363 seconds)
  done (took 58.342889523 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147436513 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081317137 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099009104 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080573304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114843672 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099576157 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080234315 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101035516 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081445056 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102625977 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079857328 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099372579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110206385 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123953915 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093079208 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104389693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098342985 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081924614 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098991145 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081555696 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110070589 seconds)
  done (took 2.882637594 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106218591 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11822649 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115119421 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120794962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09114674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115826265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11596489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116441887 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099494036 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112531254 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119824706 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116521017 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092580053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111466377 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111756556 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093372181 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119277134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109535052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116993804 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096024865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113572758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115192229 seconds)
  done (took 3.240581894 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085166048 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102839552 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085645619 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098780873 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083978858 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098500556 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088429625 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101927069 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087836009 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102766711 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082761179 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102961996 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106147118 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079435852 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104799019 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081798094 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155085885 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107491524 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083653069 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105806843 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099018437 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086131302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100353063 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079794956 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10321296 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087950015 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104689013 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082466978 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10378575 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082894898 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103687897 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081361347 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10588797 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103537302 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083514629 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103336627 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084290194 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102917188 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07972709 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102868119 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08474776 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099347579 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084559802 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105121883 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082569027 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102796227 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085288072 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104152597 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09899018 seconds)
  done (took 5.490254076 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105315389 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164152013 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086390311 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143240008 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120920321 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114556036 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088918436 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143597962 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102380915 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083378074 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123525695 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120666322 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104413215 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089980216 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111663566 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103872627 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08598925 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103196828 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109705986 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08439602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109869029 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090929052 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120555733 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119217473 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10901823 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084480061 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103925164 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109762544 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098024885 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110768678 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109911335 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091039605 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121376711 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109965992 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103056637 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088122663 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123581353 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104919209 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086899743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101783414 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087118095 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109083768 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111362866 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123135352 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08482776 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110318415 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085435565 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101240191 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118445146 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087340537 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114410499 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120378635 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108908256 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085482608 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110256075 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120021575 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085229836 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103071655 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087834023 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117543063 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101662198 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088268713 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120499143 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106687836 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112476216 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100066181 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109735843 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109234016 seconds)
  done (took 8.163643345 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094194577 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110919456 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121374788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12145937 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09095291 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111732253 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111745057 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091705783 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112201783 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116729671 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111265431 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133805226 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087311635 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116861947 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111899321 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092035311 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11224881 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111271329 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091992834 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111774449 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111479199 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122130369 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091714333 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122025049 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142451148 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106766583 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090883438 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111076766 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121560102 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110924626 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124131979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09179852 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112244262 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121601583 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124009883 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090830828 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103664158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110734574 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091133463 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111304506 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105878728 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101300196 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11242297 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10615315 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092486924 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112056418 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121585033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124389969 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115662919 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097485748 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112232571 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121320359 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11131583 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091069775 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121999309 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146988484 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122207646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121608496 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11155588 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100489775 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122506383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128723317 seconds)
  done (took 7.700674483 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107978536 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115570448 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118511862 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100574641 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083040416 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110691209 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082662437 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103404057 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115395074 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094497199 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117339179 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109297443 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092450082 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117978151 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11040874 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112516248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08856273 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110136573 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114926919 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109289141 seconds)
  done (took 2.941511725 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093902286 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124240349 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085582613 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113540847 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109013174 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09143415 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107842041 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108179219 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08609247 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108261124 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09735644 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11777544 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106207306 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092181033 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117554954 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111396158 seconds)
  done (took 2.497210461 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097173714 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117428735 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120240793 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085080842 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104200369 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081327139 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10581885 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100941825 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081395616 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12176158 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087217633 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109126592 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105215673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083061354 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103210282 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08835397 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102024668 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083174005 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105979942 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119304491 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096335736 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105213627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106297131 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087310755 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105592828 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090185487 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106844899 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103595145 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083825996 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105556435 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085316299 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113810187 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102014606 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084377444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103194326 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083163071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105745476 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085594245 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108603682 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105017511 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083867587 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105274741 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085069463 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106930357 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080956194 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106051712 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101507037 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091832191 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104004852 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085776198 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106383723 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107998512 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086708454 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116255104 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088985942 seconds)
  done (took 6.257210072 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100190092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109293443 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080597328 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103947725 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089125207 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108755464 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109633338 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0877645 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106873448 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083915954 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107985543 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090678925 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1085814 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10945166 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087626989 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11003207 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080569248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107099286 seconds)
  done (took 2.618659869 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09115699 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105635632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092828168 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106663667 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085587739 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109208388 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081142703 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105104328 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10421375 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085382085 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105256186 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087843549 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104259705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087397738 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105897664 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084855349 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108749615 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104665986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085949567 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101666037 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087300744 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10464711 seconds)
  done (took 2.970498479 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118379889 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12577611 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093078084 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232457968 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103876853 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132848967 seconds)
  done (took 1.641973706 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109805883 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121921714 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106679047 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108164216 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115131195 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108089937 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088092403 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108674017 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118726139 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100973533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108631831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118215297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119664938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096348712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115443799 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115296817 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107988846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087626246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106581953 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129213375 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088607779 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118014771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108137532 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087713112 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108543395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118886584 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118399138 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122712245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086908292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118847573 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114927174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087744131 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118790736 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122963762 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109474458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098434924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107772341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129553826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114859935 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098028433 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109804606 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115388941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098100491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115059977 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118509473 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108233238 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092944137 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109107066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108497535 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136194255 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094270384 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117355389 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115023394 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118451392 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118424791 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135095622 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102762377 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117593898 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115472673 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12339569 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118378981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09466021 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117719945 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123473703 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115955381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118535705 seconds)
  done (took 8.167894016 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102306777 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127071967 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11026678 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122926345 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096963736 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109061256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108222622 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088220203 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108785142 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107805691 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152797003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088141419 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119317705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117749269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108588692 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08907221 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10884279 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11856975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087607075 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136198256 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108809173 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119028778 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118820656 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097122786 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123458121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115255208 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109131503 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087889722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108956728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108809829 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094245432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109694017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118207268 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086949066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118441835 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109480577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087906518 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114965749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108760652 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115678363 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097015119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129133342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109241938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109117336 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102770003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108898567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1089194 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086984161 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11062967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107927991 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10161833 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123576922 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123511029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118868996 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108791383 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08851292 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109386114 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108749841 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088094156 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116321245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117969714 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108623911 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136175743 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088508033 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108438883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118972526 seconds)
  done (took 8.048523696 seconds)
done (took 155.87056787 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097542975 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136907107 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096363437 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.200004742 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107099702 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130468372 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14833609 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097879663 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107046 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086761779 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107599136 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087068741 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.212685822 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085778913 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107377401 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107738766 seconds)
  done (took 2.758273227 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201238264 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256576575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102706554 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106622461 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088915983 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111057142 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105605543 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090784616 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110549059 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086351988 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109748138 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086789773 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106604895 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086567647 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11034284 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089421805 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107327459 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088138441 seconds)
  done (took 2.891320184 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113292257 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158105075 seconds)
  done (took 1.123685689 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118583429 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182224555 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319839501 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157240465 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107345155 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128524074 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158243938 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130920493 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198953985 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123703453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123056759 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097577729 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140590362 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116410054 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094495803 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119045127 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141864453 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093224049 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116149753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116360938 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117041385 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106981732 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116639193 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094218698 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182795787 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120796459 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084983278 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107537915 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116097198 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094425444 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113786618 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125236429 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098314355 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176344258 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104691504 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177398743 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097990555 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113211677 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115690951 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091236907 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119626499 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118633088 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105497356 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118813665 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084875911 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119482522 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106634623 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08542403 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114697004 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097495088 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116420464 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113429891 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154685269 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118607776 seconds)
  done (took 7.562377072 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799032755 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156440472 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090723755 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.893149857 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138912204 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104059586 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.785560044 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136281546 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234166888 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76761413 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135156012 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122236951 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230089444 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239748657 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962358078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314593197 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.677404631 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10195412 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152860213 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152903956 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119678326 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13879689 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131100696 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454530989 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095473278 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112932471 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117506647 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099963617 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159170024 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127376481 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11534792 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178964365 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249539433 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208302258 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115626041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089933513 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111898667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171165588 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267387132 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214870384 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182159423 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086914036 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111710357 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122013268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111151094 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10996929 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16443092 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174119784 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196617668 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092263764 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121492612 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120918417 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120351468 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166699975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121418475 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299437 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311980441 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112351559 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12092003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105614415 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264834856 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123183971 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225523887 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118411674 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213293148 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111469522 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774947521 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191398149 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089635186 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118533808 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119869422 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095496707 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122111811 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171110889 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393929144 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125152874 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093036966 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112942202 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20491482 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126017219 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110827255 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162792055 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116224298 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099625103 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125711587 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123334335 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171931786 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228875267 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125179141 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120859266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093572689 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126041148 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116283364 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213311127 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221479193 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163851504 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211585052 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12349029 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165579273 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191499719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099354895 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195579343 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098266182 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126246829 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123706024 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218661879 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147228859 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102488332 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116943667 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119862079 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149881481 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127438509 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097461579 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169023406 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.504646977 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168980326 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109824462 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128300815 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099466211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161982051 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119487008 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260527656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121618874 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17147501 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120254142 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088298204 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121278222 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167222758 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123072775 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099182116 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124097248 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119373034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236022148 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219433137 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123179829 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222741977 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184616982 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119701381 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173752381 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122947401 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167897061 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122507244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121382277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095895717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785781712 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12397422 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09946028 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117079109 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198766587 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112028506 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102996596 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125038821 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108610498 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756626817 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127852835 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121958413 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102861421 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11926968 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121409581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095899616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11686844 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161985692 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232331494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122625098 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12034645 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102686992 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182838152 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096160633 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125546477 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126359 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125060946 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1010016 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115810247 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125898548 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170895302 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164453921 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221772685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.592274653 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09138523 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125880135 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231184758 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090153605 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289958495 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120998489 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228663957 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166558882 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120973571 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309547267 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168762861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196853992 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12782307 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176125987 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086940377 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120287855 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164855607 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113760999 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118958525 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163081027 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125806634 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102043545 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960758428 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112427095 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225911497 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086354602 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.194266067 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094055739 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121890527 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298529753 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112635249 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108008468 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187990378 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093983957 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126371727 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.729675317 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127197056 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12253924 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11911495 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201403488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187217843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098361956 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120565994 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122463649 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164709786 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208307088 seconds)
  done (took 44.298200187 seconds)
done (took 59.479130711 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278445813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215753877 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259814799 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169802747 seconds)
  done (took 1.878207239 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171015582 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148585648 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120491178 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108599269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150131521 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086291154 seconds)
  done (took 1.664071571 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355464425 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276243377 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240254386 seconds)
  done (took 1.755236296 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291756255 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.255874252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358021081 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.399594777 seconds)
  done (took 2.308338592 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.2099004 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132314809 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111320679 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104584346 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197876724 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251955557 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140657929 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203738643 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12270629 seconds)
  done (took 2.404022872 seconds)
done (took 10.893519873 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.251479323 seconds)
    (2/286) benchmarking ("sort", Float32, true)...
    done (took 0.265160439 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.243207188 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127345791 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127797803 seconds)
    (6/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.103888678 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122093022 seconds)
    (8/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.19964582 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122550659 seconds)
    (10/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.24375724 seconds)
    (11/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.249279812 seconds)
    (12/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.116313854 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094058538 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.127831263 seconds)
    (15/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207069776 seconds)
    (16/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.205754969 seconds)
    (17/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.252341433 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.178563066 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.156213718 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.184984314 seconds)
    (21/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094111233 seconds)
    (22/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123344731 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.20835901 seconds)
    (24/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140101456 seconds)
    (25/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185429009 seconds)
    (26/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.153828733 seconds)
    (27/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185814266 seconds)
    (28/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.129175217 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.212093286 seconds)
    (30/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11837385 seconds)
    (31/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076679099 seconds)
    (32/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117121729 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.168134391 seconds)
    (34/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.186882786 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112159935 seconds)
    (36/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.219441086 seconds)
    (37/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171959418 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130786269 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.222572927 seconds)
    (40/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.119787567 seconds)
    (41/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066465911 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173662348 seconds)
    (43/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090409598 seconds)
    (44/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.142780141 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117573448 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134743231 seconds)
    (47/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.152177477 seconds)
    (48/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.099680281 seconds)
    (49/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.164170307 seconds)
    (50/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.22409386 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136600685 seconds)
    (52/286) benchmarking ("sort", Float64, true)...
    done (took 0.230685624 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135499588 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09572528 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117231003 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094654103 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115813743 seconds)
    (58/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.147003759 seconds)
    (59/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077550767 seconds)
    (60/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.088254445 seconds)
    (61/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.094407856 seconds)
    (62/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.128768738 seconds)
    (63/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173682455 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087040515 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.122729157 seconds)
    (66/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118092997 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067515821 seconds)
    (68/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119379724 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094978309 seconds)
    (70/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.133789229 seconds)
    (71/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.214174588 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094008782 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108299753 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090752799 seconds)
    (75/286) benchmarking ("sort", Int8, false)...
    done (took 0.187768363 seconds)
    (76/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116902159 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091931393 seconds)
    (78/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130993498 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.111125885 seconds)
    (80/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.1621974 seconds)
    (81/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184943714 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109705101 seconds)
    (83/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102444812 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111639023 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097114689 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111551631 seconds)
    (87/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120892151 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086860952 seconds)
    (89/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122325509 seconds)
    (90/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066220969 seconds)
    (91/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230494991 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110978747 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067946021 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185101609 seconds)
    (95/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067456071 seconds)
    (96/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117690071 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112696406 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119163471 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135442585 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.130818623 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066785822 seconds)
    (102/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111248062 seconds)
    (103/286) benchmarking ("sort", Float64, false)...
    done (took 0.172015099 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090249774 seconds)
    (105/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.123935503 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09383606 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.141496362 seconds)
    (108/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174142524 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.167956877 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090571459 seconds)
    (111/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.195586781 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.183067826 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096199379 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123698624 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095001861 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120559342 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088395671 seconds)
    (118/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121932866 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092470718 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.201764578 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117037749 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138068763 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086258226 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068048935 seconds)
    (125/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23938849 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110902377 seconds)
    (127/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125355061 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095436226 seconds)
    (129/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12202651 seconds)
    (130/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089190685 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108549576 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0953059 seconds)
    (133/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099580889 seconds)
    (134/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088402513 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109899496 seconds)
    (136/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.06733281 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109271957 seconds)
    (138/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066642795 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137062196 seconds)
    (140/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185310949 seconds)
    (141/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06837614 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090621062 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111209783 seconds)
    (144/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.189081944 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093327425 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12157805 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068550124 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.1183072 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088776479 seconds)
    (150/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090757591 seconds)
    (151/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094645016 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.10602 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086093177 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117761367 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101226335 seconds)
    (156/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117733283 seconds)
    (157/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076079822 seconds)
    (158/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17460788 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086740084 seconds)
    (160/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111873842 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067375594 seconds)
    (162/286) benchmarking ("sort", Int8, true)...
    done (took 0.221195496 seconds)
    (163/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139877967 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068405132 seconds)
    (165/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.145041599 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068512667 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125936043 seconds)
    (168/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.18625583 seconds)
    (169/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094588946 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072193489 seconds)
    (171/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.095386996 seconds)
    (172/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076711444 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.122178355 seconds)
    (174/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067697981 seconds)
    (175/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069816393 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.17814508 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119620838 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115641736 seconds)
    (179/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114416272 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086338647 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16567617 seconds)
    (182/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.107016135 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.223406984 seconds)
    (184/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.161108567 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109707425 seconds)
    (186/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.121371635 seconds)
    (187/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123185733 seconds)
    (188/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157426488 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093260981 seconds)
    (190/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139210338 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096947384 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118651144 seconds)
    (193/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08894471 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090402151 seconds)
    (195/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070589792 seconds)
    (196/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123555463 seconds)
    (197/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149369649 seconds)
    (198/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092557651 seconds)
    (199/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095022101 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110960309 seconds)
    (201/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22330607 seconds)
    (202/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077713378 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09220767 seconds)
    (204/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06785766 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.1422543 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092602735 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110465423 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.123974833 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091257206 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086030156 seconds)
    (211/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173974454 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111008884 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095372754 seconds)
    (214/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066541573 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110938234 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095857545 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114808078 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.421282755 seconds)
    (219/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.145605834 seconds)
    (220/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091522467 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087066824 seconds)
    (222/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091873707 seconds)
    (223/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111614134 seconds)
    (224/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092259023 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067005373 seconds)
    (226/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119749293 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110194269 seconds)
    (228/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109820626 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088114615 seconds)
    (230/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091561589 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086922315 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090710179 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.113619412 seconds)
    (234/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090112754 seconds)
    (235/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087286104 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090107046 seconds)
    (237/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.128053987 seconds)
    (238/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.19021447 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09224161 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11745818 seconds)
    (241/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067238246 seconds)
    (242/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091213677 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113221681 seconds)
    (244/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.10216935 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096275537 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109820851 seconds)
    (247/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067316815 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109801538 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100985034 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090080174 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104300144 seconds)
    (252/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091938634 seconds)
    (253/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088940985 seconds)
    (254/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111720171 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143421511 seconds)
    (256/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.096217361 seconds)
    (257/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068761657 seconds)
    (258/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.082000515 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124746977 seconds)
    (260/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.081534892 seconds)
    (261/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.098726558 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101356606 seconds)
    (263/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096457111 seconds)
    (264/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099457435 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115744631 seconds)
    (266/286) benchmarking ("sort", Float32, false)...
    done (took 0.156263145 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142250667 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08587732 seconds)
    (269/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102801346 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099105902 seconds)
    (271/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.092499996 seconds)
    (272/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068847973 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072499708 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.121795486 seconds)
    (275/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117370292 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087955495 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117336338 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068421072 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143057884 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091151752 seconds)
    (281/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121341972 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093394506 seconds)
    (283/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122215911 seconds)
    (284/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232207002 seconds)
    (285/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086550012 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129584863 seconds)
  done (took 36.324437831 seconds)
done (took 37.210759896 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100481788 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149064355 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099781672 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136609027 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124294906 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092290022 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118982527 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098564654 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124195212 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125548199 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09937355 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093246878 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097777403 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120853003 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097241937 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139892223 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130806579 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09500809 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119254165 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085845325 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119496236 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086470881 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112233935 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07032313 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122568092 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094204875 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117655239 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121205039 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086595366 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110631686 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090216795 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118440595 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086669039 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125400341 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094411882 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118832055 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097445716 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121249052 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11206098 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086827824 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119650852 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086942833 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117642252 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094894915 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116186175 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092608909 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119034398 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098930148 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140635636 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115965984 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095682871 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120979964 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096124487 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118711867 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092756659 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121042927 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092462969 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139296168 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123932213 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092771048 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118517538 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095126621 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116598873 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095689586 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118976688 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122061464 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099096652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116050869 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097499363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116235882 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086632813 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11959556 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090702366 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110705981 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096020951 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121664711 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085719514 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117403826 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11831063 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09289726 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111053089 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09015227 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115460339 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093664675 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115676679 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070480565 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115185306 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093159915 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110550236 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095879694 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117224553 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094334167 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114883847 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099871724 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110885397 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092765018 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111174143 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087844097 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11252774 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091399742 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110980346 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089479776 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120793154 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088436773 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116593606 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123878955 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08694907 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11794619 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086832823 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11230812 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101989497 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122190824 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087996251 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116830768 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08598435 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118358952 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086683821 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111141856 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087359863 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111719874 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093360397 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111547572 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089214364 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118574584 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124648496 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087027455 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113949919 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090278492 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110625463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09319748 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11113275 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087023123 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113619709 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077869671 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114003408 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087708545 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118756165 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090478851 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120571401 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089578799 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120372223 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092372871 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117559086 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09282386 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110190392 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07520578 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11613558 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091987751 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113893707 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087466781 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113302517 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087908339 seconds)
done (took 17.00161592 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087902152 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184846747 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151034507 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142336968 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107461245 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112177535 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122653578 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118064626 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114519649 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142945142 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111068271 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132217123 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148003317 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088149055 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114862353 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091663316 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11379096 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103425139 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14666875 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13462083 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164937502 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087192472 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147429354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136200648 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121254496 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104519178 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11324758 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091571756 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116099584 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113933805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133218959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114850501 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087936632 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133680516 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104750054 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120205229 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08784624 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119756608 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087818938 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112753055 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141088419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13440472 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092666655 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11778081 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091952467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114856081 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089570988 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121082805 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098369118 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116646694 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127027766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157509049 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090953977 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121697367 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086720872 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123847558 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121121684 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090848032 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113082055 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091015047 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112104431 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091269698 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127106826 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141966831 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092526561 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121274618 seconds)
  done (took 8.633372419 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105686807 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139579889 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106013277 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131912987 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11237504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08930873 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113067026 seconds)
  done (took 1.743487103 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088614604 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134877878 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111263934 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137079476 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13358962 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112161655 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123652464 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088717616 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132893796 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0896833 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134650804 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152643489 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090181793 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120891232 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139468845 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089281169 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143717528 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091432048 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119715845 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112893472 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11646485 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135816176 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096116868 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119111728 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106033169 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115723143 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163584816 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09359771 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115662996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092397418 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112306356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15179793 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102864233 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125749273 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089352532 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130315107 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129017158 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087051187 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126673593 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094059842 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128514235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090698168 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115584521 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09112355 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122077565 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099080291 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119504412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089329815 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117116246 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134092232 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.10874795 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127516903 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089388235 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11866879 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092811543 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120195803 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098593532 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114680314 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13521345 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090262845 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131358095 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10598462 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12951311 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130608516 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091768724 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128181827 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103166058 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116789506 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091248667 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118021034 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105533109 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112215745 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091044102 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125087104 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116933283 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112371483 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137640666 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091122809 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125756331 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089047798 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114951828 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11420725 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112005062 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118954772 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090908706 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11848688 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095448234 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114554041 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088671136 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11839366 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087646668 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115656584 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092409263 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114718479 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091819407 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131118504 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117632312 seconds)
  done (took 11.894940253 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089908815 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115955915 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091452167 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114565632 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090650602 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115492789 seconds)
  done (took 1.574328174 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114283257 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117981686 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103492688 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120830612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15633834 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103814071 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130626492 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124299645 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108658369 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127691019 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130268748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.1073515 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137257818 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124305801 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10483346 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120452196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103957902 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125493869 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128169205 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096952499 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137621773 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126384667 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10015376 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134616511 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119697688 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094999889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126476016 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105714998 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129437675 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123612285 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098237679 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118936594 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097242644 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124736663 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130084281 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099334143 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120590129 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119710205 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10071929 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118280942 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105147481 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123208091 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127344871 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094693007 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124261747 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121599804 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09441821 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125318279 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.133075896 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093928057 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121419948 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094452573 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120705747 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094608248 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122171274 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124868873 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094003448 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130226963 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122287761 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09615026 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118530078 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093298457 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12427856 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118910096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104836833 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119303037 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121565687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09638809 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121870833 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095874534 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120208898 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092627585 seconds)
  done (took 9.265016511 seconds)
done (took 34.056295203 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695766541 seconds)
  done (took 1.652768439 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.967910597 seconds)
  done (took 1.931030388 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.39303182 seconds)
  done (took 18.386436088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49838131 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.436455466 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999031906 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18233254 seconds)
  done (took 6.079434433 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955741643 seconds)
  done (took 1.942586737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283993793 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236053102 seconds)
  done (took 1.487625732 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.785693524 seconds)
  done (took 1.762209631 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.375345501 seconds)
  done (took 2.347913001 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325759045 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184071485 seconds)
  done (took 1.495141579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553957383 seconds)
  done (took 1.531925988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.588215448 seconds)
  done (took 11.569369787 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267444658 seconds)
  done (took 1.254534974 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301363163 seconds)
  done (took 1.279831511 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.641220607 seconds)
  done (took 4.623458501 seconds)
done (took 58.311766124 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099718196 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12781165 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10214456 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12510584 seconds)
  done (took 1.433466498 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102443045 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121560805 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100709062 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121070263 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127311134 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096004328 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12374383 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10140105 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12151332 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096697468 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121964219 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120409779 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098334889 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123793894 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093121143 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124377902 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099318113 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121446476 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124918349 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096301252 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119465895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098125111 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125608842 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094415352 seconds)
  done (took 3.658568544 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105542407 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119427026 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096545794 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11930421 seconds)
  done (took 1.432962574 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106833575 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137544125 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105444928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12569877 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131071671 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106069253 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118201427 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091854599 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119381749 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100362994 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116990835 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139776332 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106168375 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124452701 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102438413 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114254264 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090774807 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132030874 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124913227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100734413 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118671146 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100573872 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115647441 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108174731 seconds)
  done (took 3.726401197 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170396199 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127341987 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139058454 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096781001 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16124413 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141567314 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087903925 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141242488 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08754998 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131308721 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118245845 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132905996 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130637362 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08797296 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114395659 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088336269 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12958495 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129531318 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091234331 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128360797 seconds)
  done (took 3.431309027 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100460733 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118468643 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088132721 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116913384 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099656554 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121380479 seconds)
  done (took 1.639164696 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09453731 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115601129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090448718 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114959563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094667612 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116633517 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088896079 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115823564 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090036171 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115955139 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089470012 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113837063 seconds)
  done (took 2.236073323 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514646939 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121612268 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120987621 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089012242 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121901019 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089516575 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129929317 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093726508 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141432088 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08840953 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116555311 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090569226 seconds)
  done (took 2.711416542 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236255588 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126489361 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282243969 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372386008 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15470614 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16639989 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279706226 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160769959 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223933341 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15006495 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203064538 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196418612 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153447198 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216995027 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113065636 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146969611 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188371865 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247577989 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154825215 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236772654 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183491197 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168492956 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181668276 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151988506 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139035437 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172785069 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121969659 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105350346 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235804866 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178252763 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218328954 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164473429 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14836932 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209258457 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256004011 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223554304 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28446096 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13724378 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14740039 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167681084 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267101371 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14152032 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208393596 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15615826 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132846711 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224915902 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172416316 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179258647 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146839294 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112934149 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223682708 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24023674 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193151814 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139001976 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304675358 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149536393 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15839724 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195148987 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252539868 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231156245 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189632431 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122918316 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189038782 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22136554 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190222468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153075394 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182944236 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149495222 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182729033 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189728101 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190523947 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17854676 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188455502 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141991461 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17079 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171048073 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172056454 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259347331 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213630593 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095714487 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170412344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151641815 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133608998 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196309087 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098926025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241137968 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144897765 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163602622 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214472223 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159611849 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161826406 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19315648 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214236665 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121431243 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111625595 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155337382 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154683944 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176445527 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140741936 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157337782 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157013118 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103529823 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170198902 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125161061 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185051071 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118852641 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172653104 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183319706 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127889197 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162507572 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152713191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123460022 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206758842 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200723809 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143836418 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133945585 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210412603 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178437627 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142328607 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176190653 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230583705 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117312137 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150100393 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229045134 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216827169 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140987447 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23011555 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156579655 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108132089 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13342958 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182759367 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156490508 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162882074 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135118341 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184518173 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233182767 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099214616 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139413578 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193308897 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136283609 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133285825 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156423719 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148728808 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110092081 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14461276 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145733098 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176019487 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178802231 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155611228 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164569458 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152710839 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256650418 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143368199 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152612843 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149846306 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09400653 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220780618 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199407559 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131398447 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206612601 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170694316 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232066853 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170985405 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135517941 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178920803 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10258736 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121151168 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194954027 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167993009 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161400019 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.225556518 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200808439 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.209181147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18482318 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167074141 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175101397 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166910019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158162871 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138463097 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160872776 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159058007 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096049383 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139995971 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135145481 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149184657 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11558231 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134571188 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224101814 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172307136 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190161401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161337657 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150437327 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183419079 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130612274 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175835109 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178752199 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149941426 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226758148 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195266073 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186294206 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145535319 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229080486 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093854038 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12513781 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141979676 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169330943 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106596421 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137394242 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16473844 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182219092 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178457009 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200043589 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212104884 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17353591 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218528681 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096816082 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169980157 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18529959 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178748717 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181172383 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142407642 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156768263 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180409801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160072703 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257005649 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168826979 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177260779 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234883706 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124008272 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13281371 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15136688 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179726031 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155746855 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177345889 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147795925 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142774136 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161372968 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103880088 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188346679 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186056526 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163328851 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187693898 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150546579 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213593533 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101192551 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163917636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161862798 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166199831 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109843646 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175585366 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202441337 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149824592 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167574436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21760779 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103735525 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310753085 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235643738 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194329251 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139187874 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156634268 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162501834 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165374733 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170615411 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18045541 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159564045 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188442644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160084926 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136801413 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142422243 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1494219 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150328803 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104126579 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149423368 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177371118 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139574891 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186742118 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155586366 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160645661 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17374955 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151975332 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145773363 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151327331 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214859636 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213740777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21320446 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151880292 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178321286 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236861442 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098405167 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133784283 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135313023 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180347703 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108580429 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225020097 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189207058 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233136116 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186770797 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179186 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141386941 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120276822 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130024097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169305886 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236522268 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155976321 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148857837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201271403 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138837201 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132558316 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166284418 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294330536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147047908 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196815681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079310865 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307861412 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100036817 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133623396 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163327174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238309793 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108843019 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179442329 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17210311 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162254799 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163611879 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150211038 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19228591 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245139782 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203213776 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210167915 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105623291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156988995 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177116534 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221750689 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159111863 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111536266 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234265254 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196752552 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19570966 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142982732 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169362058 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16908033 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158623155 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217834131 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107113874 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236982449 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135141971 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194894873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154894811 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1397678 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176951346 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189792959 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142140896 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216019634 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185214602 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135581397 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105418371 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170148303 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208205239 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159617252 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099351496 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209475978 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098178275 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223051716 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232824944 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13628126 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157458248 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147981251 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108777289 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155208268 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186793823 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114539235 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166298746 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203773946 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136243591 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190524769 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234064291 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171975904 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174141769 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146505997 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694307235 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133313215 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196043668 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149685384 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235571811 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121233687 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202606407 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131155502 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168943868 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226945907 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163475499 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23305032 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194430372 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208240841 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104761628 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160547681 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157297688 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147012059 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153293522 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17086121 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161567369 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146889512 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179790192 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166797117 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137435163 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141259042 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20261017 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152206665 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185177153 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180960184 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140617107 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17492221 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187725303 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135555627 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179382448 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241531319 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144105359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152814209 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106165139 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1493759 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270678831 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125670006 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192019311 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185989469 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160838565 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170545362 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148743446 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224036813 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159554795 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188001509 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143567464 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158904812 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158246011 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138601273 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103016507 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157362685 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169234987 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151222423 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160232838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166699583 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196467776 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095369481 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145860313 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318243467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178124902 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216931811 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136040012 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136024307 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162741425 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122189727 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.206492 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181600611 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136423657 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10977818 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138324558 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130270259 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136120332 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159055726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199020456 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166320932 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237985059 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110414055 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280407863 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142393501 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156306601 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088739899 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133948639 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152822847 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14752769 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160031194 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192536867 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270820638 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148228013 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10616688 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150262925 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12673628 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107731029 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165229769 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164541923 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206938907 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14601743 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081685764 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157720093 seconds)
  done (took 83.141497754 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233685828 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.159717808 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166575697 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.229565422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241761135 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287576541 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22677548 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268252886 seconds)
  done (took 2.898838125 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095828645 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147090071 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158803031 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134350972 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09172216 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121095429 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34676809 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.138337357 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117470631 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120248975 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174895778 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093030948 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.561052085 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090572241 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120928077 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108035977 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092093344 seconds)
  done (took 3.792435645 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.978006602 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.608234207 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.34482295 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199140157 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.834821598 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.094739683 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743748917 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.171245198 seconds)
  done (took 62.062465016 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12115317 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142907166 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123483199 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152828503 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141254047 seconds)
  done (took 1.770880316 seconds)
done (took 174.91459594 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102496207 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127985118 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096853723 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130188841 seconds)
  done (took 1.541428104 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097820609 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.075066693 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101043607 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074622106 seconds)
  done (took 1.437857738 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189673491 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174031217 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.417189159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071032144 seconds)
  done (took 1.613147871 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11339662 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133370189 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104371074 seconds)
  done (took 1.447178198 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107500079 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129514277 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102577322 seconds)
  done (took 1.433560522 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105537073 seconds)
  done (took 1.19809096 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10911959 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137365833 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108164481 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137009775 seconds)
  done (took 1.584710282 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097243455 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127269149 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108986115 seconds)
  done (took 1.424104488 seconds)
done (took 13.136809992 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107638517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424052826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.392685201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145595543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726213406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388462128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035527104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15348459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172765943 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092897165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140473248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677317189 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.057282625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.38475967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.013698674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377164123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676282561 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121603806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11996423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094488791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014283854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098850896 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123287118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097803101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704564123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427152781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094279656 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375616099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092501573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127392676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.385024837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123807551 seconds)
  done (took 17.053598034 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094296027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17833796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105262774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139004787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123649934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096956732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125337929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094521364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181556509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129496037 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112608791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122326979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126631123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095176303 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142631864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099116893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126673101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092152327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121993553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121913782 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112098592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120225233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093500127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121651785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093653979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13569805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123570423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092991537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121185665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098318692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127276059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094341514 seconds)
  done (took 4.856976713 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139256245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184486054 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13440412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126971292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170179568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125508582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200593204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12722725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185062277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130127635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140170559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095664969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157832687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100307622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142824263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121640495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097105516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123243934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097274804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123683183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141749971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093002921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122963049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093448406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1229242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107115097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124575982 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121080535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093477822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127542311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099324934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124790917 seconds)
  done (took 5.194918336 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096734573 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126981826 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10899594 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139422345 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098704103 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12638165 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097101082 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125940468 seconds)
  done (took 2.019865025 seconds)
done (took 30.223231296 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112702897 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128171455 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107752067 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134992039 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102296905 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133035293 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090984962 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134977353 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135163565 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101522334 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140345213 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09690608 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122906136 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095239344 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135729772 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102224462 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133335798 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103180452 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134673459 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133053083 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096880491 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.137026571 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111318053 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.141527954 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109908521 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134359961 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139564671 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108025752 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.130066752 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094368146 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125318513 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109257745 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130693685 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107870232 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128134254 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103869124 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.130775601 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101062776 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135386902 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132957077 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103002376 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.139948783 seconds)
  done (took 6.123228709 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107653736 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140338111 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105392327 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080577012 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117263695 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080435789 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138492737 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078885487 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110847596 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108612732 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074518992 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106679647 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078249544 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102414084 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07697759 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075270449 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109192159 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075660709 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076277531 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10684264 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079587096 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071811965 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108805201 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078629894 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075014967 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110642341 seconds)
  done (took 3.576335521 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099656453 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134567655 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112633531 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185660697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16164998 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100512041 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132857394 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140678527 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109083005 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120949049 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09583182 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150095827 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11062529 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130472045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092107019 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137556158 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136969256 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094532163 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128916419 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11241331 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139533638 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102747786 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.1425181 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134501579 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092314295 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123697401 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097115122 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135972581 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098214339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131926053 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09738037 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125767263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123703359 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104732412 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127402883 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09529507 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143357522 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103809303 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131237813 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09194673 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130551035 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122498436 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113290422 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162846895 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093567902 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130141204 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095693112 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132803101 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122389309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111353863 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131623726 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097075048 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126988308 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090692954 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122276117 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106500846 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124498186 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094784388 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131562366 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127127692 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105093714 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125688694 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108286318 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12216007 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.0991688 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122115319 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092765483 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121432288 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144053363 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100093096 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163141662 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101708013 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12549009 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101210759 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131065625 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129924746 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093261305 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138023071 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102576871 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126771986 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101763176 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126391193 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09559251 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141461949 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124493916 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095047157 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122812986 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100302457 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125515294 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094016485 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136971211 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091643768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126302577 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110658272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123694967 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093932913 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129448659 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127106737 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092176177 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135517785 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098609243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124337277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10318618 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122606995 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124838864 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103946944 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127087975 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091848111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12732518 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099946367 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124547719 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094281787 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126457339 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093943997 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133160142 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099566516 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12893712 seconds)
  done (took 14.882194023 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229486461 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217589787 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209084064 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294738576 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137345916 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115619982 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212151141 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156485096 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124146764 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160137861 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174239478 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182351663 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171350231 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182971459 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170304736 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093916214 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14297865 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134133596 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.247106234 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258714785 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144701845 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100942779 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.201036266 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.130670335 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137806621 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133299152 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110686323 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135679419 seconds)
  done (took 5.828707282 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108582264 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156106689 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098456046 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145900116 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149877214 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092137605 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12859586 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094067369 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136435851 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136709361 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092792303 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130426148 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100872338 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132892679 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123975624 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102680307 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132422957 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094854557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12689737 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09808248 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135355643 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101879417 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12755559 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121475626 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103278354 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122222358 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08656558 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143443209 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122775837 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115994391 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121159807 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101835012 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137265356 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093897234 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124026439 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095552853 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126246489 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095108316 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125648433 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091541102 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123843207 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077106392 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123058111 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107345268 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129689919 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080387389 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130827284 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128979206 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094620211 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12099792 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096466933 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125898917 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096278061 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1311557 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096533916 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124786777 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097526731 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116341935 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099165706 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125470892 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085119743 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121272032 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098227574 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118447802 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101819047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129337143 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09233025 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126484083 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097838093 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130142186 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095045416 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130543656 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090851608 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126685253 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095256348 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129632638 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095781135 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122259944 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123104989 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093579013 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075337145 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12419957 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073639549 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127456008 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091135928 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122392629 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095447215 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13031732 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138434344 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09520445 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132724419 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094785844 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123303867 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096067562 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114084602 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096885674 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14048121 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141550133 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093705826 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121860855 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107892905 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.1268436 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092518594 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107114759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103387384 seconds)
  done (took 12.997137404 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127704163 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154991349 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094669297 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142842408 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158057278 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15894855 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101134877 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131812591 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094779736 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142733978 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093335436 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132867893 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09401046 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137941391 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156986631 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10389789 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12578592 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107906188 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129594016 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170079169 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111422929 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143580098 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110231308 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124310326 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099402491 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141580964 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162499581 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107490602 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137643972 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143239943 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108861162 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161512777 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113016736 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128848271 seconds)
  done (took 5.4897419 seconds)
done (took 49.994334844 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.232474671 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428787382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.19999978 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.16213277 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.246368645 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.201143459 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204216493 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195769889 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.714461905 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194211539 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.459974303 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.862665217 seconds)
done (took 60.237065202 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.265654335 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350580368 seconds)
    (2/2) benchmarking "String"...
    done (took 1.475104425 seconds)
  done (took 3.9716378 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.588733781 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.198094102 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473842642 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.221872148 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.208852125 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497785148 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.961310338 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.623959936 seconds)
  done (took 28.316295438 seconds)
done (took 42.275435683 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.213518083 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.272983784 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.243588171 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181527319 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.336991538 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.231785006 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.843453751 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.263975235 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.217313906 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.191076128 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.225239546 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.22011216 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.232646153 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.264082525 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205110932 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207548424 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.240265446 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.881084482 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.642701345 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.222164105 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.231634914 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.260036181 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.22065699 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204827466 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.275038248 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205016509 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.227169293 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.206412597 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.891038486 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.208201684 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.230034195 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.354255654 seconds)
  done (took 190.982624961 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.210320897 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.398297802 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.473161476 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.254394912 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.744605603 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.403489912 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.355976404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.968392586 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222676551 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209207645 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.527079865 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205161321 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.559294576 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.184242743 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240153357 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.233105442 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.540925721 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541042775 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244030262 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.343465922 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.226138166 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.625105302 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.535235373 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.42708135 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.261705757 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.274058213 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.212955242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.237959611 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396408987 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.439525586 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.248305269 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.239409447 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.859107903 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06371387 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.235793704 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.225972999 seconds)
  done (took 151.499175655 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211040727 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211261065 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21001707 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247069942 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.209915716 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211040062 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826185557 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828164575 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.739149758 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.755857519 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.764780607 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.573943268 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213067995 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309769291 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.221269016 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.211943821 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213227088 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229134883 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.257446508 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213004006 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212061589 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829770913 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228485105 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.371277235 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.40387014 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224424347 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248231472 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603211744 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207026668 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212040109 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247267512 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.550192616 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259282818 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206623239 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.682994282 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.090078447 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324181565 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209745401 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247176782 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.213243831 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.496916878 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208452697 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.215169418 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216803616 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.949447261 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213114096 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831785303 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215843152 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.196758532 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209131379 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215828597 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.887395905 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.976188791 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232076427 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.214265829 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215583888 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214726395 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214486245 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.249757171 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.919305938 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.315142082 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229548084 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218044305 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247933267 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212540585 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.21454863 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213877808 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.362415834 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.295504017 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.42760449 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.48751325 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84619576 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21485991 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316213355 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332739195 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209962155 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214592392 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215115215 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214869409 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328055487 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210524786 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.664147016 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.391975669 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227771942 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.809155141 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31651078 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211082614 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.691117933 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216608736 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215267233 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.013843626 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31075205 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211017884 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.216813546 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216091735 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.666554172 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831849673 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542314109 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218774311 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.851856712 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.222414558 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.684425433 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.79584047 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.977373264 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218290968 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331975522 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.393785209 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229314569 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.21625626 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.81087385 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.219558642 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278149894 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218856165 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.617358666 seconds)
  done (took 370.824389075 seconds)
done (took 714.442210787 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.82868389 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.816623213 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.931815167 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.809811304 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.772462774 seconds)
  done (took 10.295859769 seconds)
done (took 11.434600561 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.418979147 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.417207679 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281957839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.421678057 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251516466 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437713969 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394474415 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.2387564 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.326222193 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303538097 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.327415941 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274286762 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254298756 seconds)
  done (took 18.486552824 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54165813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.549205855 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27643187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.555130403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253065168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540137803 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418479283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433356128 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431861568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247452568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234102705 seconds)
  done (took 16.622722744 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.552220047 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.549978876 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280963656 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544136663 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255433174 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538833267 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426205301 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436263317 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435333209 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248302936 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233373546 seconds)
  done (took 16.642186719 seconds)
done (took 52.891561675 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.229863179 seconds)
  done (took 2.370842039 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.26660154 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.429543251 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.246717615 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237578383 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23166742 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232889065 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236106405 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229673132 seconds)
  done (took 11.253799163 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230313097 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.228557731 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.230597029 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.229771831 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.229450049 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.2305073 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.226560838 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230073201 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227810507 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226604132 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.229219847 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22645524 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228523892 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.2292357 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227932866 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228263274 seconds)
  done (took 20.8027549 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229112731 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22680272 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.227016202 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230386806 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.228503711 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227667087 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.229533658 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227807294 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227447265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.228359412 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.228616619 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227746369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229745543 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229387198 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.229200878 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.229102982 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.228936461 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228282433 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.23297268 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.229782486 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.229957701 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.229815276 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.23124077 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.230074191 seconds)
  done (took 30.641566481 seconds)
done (took 66.210511932 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.863257811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.00943862 seconds)
  done (took 7.015573323 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.231694973 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.231858803 seconds)
  done (took 3.61070609 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232186016 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.232228745 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231660444 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.232040445 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232313858 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232288179 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233303826 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.232990466 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.232442201 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23380301 seconds)
  done (took 13.469039242 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.232214243 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231791873 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.230614096 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.232891855 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233274499 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.231015495 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.231699143 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.2327594 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23436484 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231410442 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.233568838 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232434352 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233778407 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.231204516 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234538762 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.231437565 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232333524 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231995477 seconds)
  done (took 23.329057418 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.234598185 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234238752 seconds)
  done (took 3.616369725 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.231636986 seconds)
    (2/7) benchmarking "second"...
    done (took 1.232092792 seconds)
    (3/7) benchmarking "month"...
    done (took 1.231865941 seconds)
    (4/7) benchmarking "year"...
    done (took 1.229494892 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.231226244 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.232236918 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231603278 seconds)
  done (took 9.765678554 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.235882384 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.403465916 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481611609 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.817822278 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.23595749 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237337426 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09734354 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237859821 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239823382 seconds)
  done (took 14.134176991 seconds)
done (took 76.084183364 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.268717937 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.239935214 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.506295446 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.2424022 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.239120507 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.573470915 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.267396081 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352952591 seconds)
done (took 37.839055548 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.236013723 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.215079266 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.031589605 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.205552382 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.287621057 seconds)
  done (took 18.887772499 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.295702326 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558114486 seconds)
  done (took 5.002217696 seconds)
done (took 31.274076327 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236964611 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232797457 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.236361097 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.236667716 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.234011482 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.236776746 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.234484421 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.234217728 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.237235738 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.238284222 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.236153922 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.236394894 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235928163 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235332979 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235941501 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237364348 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.234527918 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2345382 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235768535 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.234739052 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236889103 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.23320487 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.234344332 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.237279057 seconds)
  done (took 30.804561882 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.236633376 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.235001976 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.236968239 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237346356 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.233741863 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.236501568 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236893804 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.235213668 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.236746113 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236544764 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235197197 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.234429741 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.239435982 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.234997394 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236975682 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.234149007 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.238677302 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235586308 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240152115 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.236181409 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.238382225 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235782295 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236227581 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240530355 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236652933 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235912898 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.239754339 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.237067114 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240387255 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.238368237 seconds)
  done (took 38.257379488 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.245161341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248929489 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240838204 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.239608158 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.238680053 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239549159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.238588212 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.240244646 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239304506 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.238967271 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.238204362 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.239859623 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239395027 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.238075322 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.238514827 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239988951 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239789029 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.242253942 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.240925247 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240481299 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240016252 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.242005726 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.242011099 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.241324405 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.241901825 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.241052392 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.241528 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.242513902 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242250772 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.241643889 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.240744623 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242928757 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.242134912 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.24242753 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.242145072 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.242009689 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.246380126 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.25123709 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.241807722 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.240461428 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241968227 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.241636365 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.241371198 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.24244849 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.241515827 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240738144 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.241363083 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241147823 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.242963418 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241071754 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241006807 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.241801759 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.242105468 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.242348193 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.242916145 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.243902136 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.242448627 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.244035486 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242372678 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.243611231 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.244943443 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.24304724 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243513454 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.242308448 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242445667 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.243543198 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243949352 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.243871783 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.24416711 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245281776 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24382739 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.244034882 seconds)
  done (took 90.578072699 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.243408505 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241362634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239828307 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243085152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239590146 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244440645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.242087233 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244976639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240609505 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244315245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244912134 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243792292 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24293804 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24583676 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246854764 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.242705696 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244589098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241408795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.246158041 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246545197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245405325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243639258 seconds)
  done (took 28.51493878 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245263618 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249129196 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.241413633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246961349 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242683288 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247126723 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24707669 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247246584 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246347679 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242495263 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243996761 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246327786 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242622593 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243660709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242080124 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246082372 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247185247 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245465752 seconds)
  done (took 23.570987871 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.24417678 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.24464565 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.246272651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244258136 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.241743632 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247008429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244613946 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247602198 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245961923 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.244500241 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247145224 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246087299 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244914876 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24355497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246155654 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243444281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245749507 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245451381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247306625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243667707 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243734757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247653917 seconds)
  done (took 28.55445903 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246489186 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247020209 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24422843 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.244159944 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.246554418 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.247263874 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249019593 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.245415062 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249359537 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248225932 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245607889 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246885384 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.246823193 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243778123 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.24541559 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246041238 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248909686 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246535764 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248430424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245547186 seconds)
  done (took 26.090867021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247359785 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248685922 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249915238 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249193548 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250044925 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250444778 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249815665 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.250919399 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249832275 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251063926 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24995528 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251098378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250543061 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250250497 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250359401 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250493003 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249097992 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2511239 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251055997 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250590286 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25116713 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25002606 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25030171 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251938082 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25093477 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252247383 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250761954 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251369288 seconds)
  done (took 36.171303593 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251343011 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251175904 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249194977 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247085375 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.248936361 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.24773215 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.248262588 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.247754967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250932288 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249041492 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.252419266 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250883576 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252730694 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.251900971 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252772353 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.251073481 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251701508 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.249972695 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250004502 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25017558 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253422737 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254563701 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25238574 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249200492 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250040822 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254946974 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250655573 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250367399 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252416275 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249221988 seconds)
  done (took 38.685807215 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271855239 seconds)
    (2/2) benchmarking "in"...
    done (took 1.270791157 seconds)
  done (took 3.706613252 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251163741 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252855323 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252135001 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249758796 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250646348 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253802008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25186143 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250651525 seconds)
  done (took 11.177358782 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252514936 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.254247605 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255114031 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.253297844 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253224144 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.253744086 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260692156 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273657701 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.254127604 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.254312697 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.261243646 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263274292 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.256140202 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253459412 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252449766 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255019614 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254018299 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.255137657 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.255262691 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.256433356 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25520673 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258242377 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257468464 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251569354 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.256939344 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263992241 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277354908 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.254828798 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255807475 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257391199 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25490304 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.25259041 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.256561655 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.255945626 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.256996144 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256434358 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26496331 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277281978 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.262447464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275323703 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257124393 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.253132645 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256948761 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256459183 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258561926 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255168689 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255528675 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253306041 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255241991 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260059076 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.263272043 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25661909 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253996122 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259482424 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258171856 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263314894 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.27806292 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260235665 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268468398 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268047861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.289553089 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.282635285 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258973308 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256027915 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268289313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.285235917 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265751144 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275022126 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256303366 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.257756175 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26573389 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289616448 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.2840228 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.258616612 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257866254 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25867004 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258565107 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258427731 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265066388 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.280870987 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259805763 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258790551 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269328608 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2835748 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258076948 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25869782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.25964462 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259196032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259696465 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271717325 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279804615 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258714022 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257250834 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258262473 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259429105 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259536763 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258055237 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260669106 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.25827447 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.260131058 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259042427 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262607391 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.270035444 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260051429 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258569194 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.266485774 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.279567397 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260075424 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265840183 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259718089 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25990344 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261617978 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268045258 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.258683777 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263434837 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270434711 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.26075114 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261357071 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260401734 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.261571058 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272546141 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.290174309 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261084341 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261396755 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265673387 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275025313 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262265989 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263971028 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263025898 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.259518622 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259784173 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26318984 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.268132442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261387556 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262571043 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262825947 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.259855174 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262157009 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.262250982 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262378613 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263792976 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.26262238 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262918618 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.263704451 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261655061 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262323723 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26762844 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280449435 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264651055 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265380031 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260509756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263179188 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265059709 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264555159 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262298819 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264062771 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.26411634 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262740638 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263862462 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262596717 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264080791 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265319124 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267651193 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263232879 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.266469935 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264999581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.262486873 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.264638142 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265538829 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265121723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.265215822 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.263420422 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.268848961 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.273080032 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.264298985 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266153589 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26679211 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264522971 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265776881 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264658203 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.268893841 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.274482323 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.264648673 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.271042497 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.285650297 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265621576 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.26539989 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264644654 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264611585 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264446948 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267560276 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.276067674 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27959605 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290536118 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266851892 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27288656 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.266917849 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271518236 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.27002803 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.266426692 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26720855 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266198188 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265958146 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266199319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26796811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266374645 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.264884162 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.266829569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.266841131 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.26657368 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268680297 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.267014248 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266924437 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263793729 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268161994 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267863062 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.266477858 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.263979418 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266561196 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265850528 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267255977 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266992215 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272538514 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.265509356 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270241393 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268943317 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267891514 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.26754819 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270443921 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270408106 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.268145445 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276321013 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286923409 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.267697117 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27444067 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287749864 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.269311511 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270318528 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267901484 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.266533929 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.271956067 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27934973 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270413195 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.27069327 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269486739 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268404119 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268387313 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275974207 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.285579164 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.269170603 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.269385917 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269208288 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.267102688 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269627168 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270243742 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271109379 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270161114 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271433191 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269896191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270570776 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27093723 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26955191 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268545054 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273967331 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279178607 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.274225993 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270458478 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.271799144 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.272864946 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.276172127 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272074642 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.270894394 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272140638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284965058 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295726246 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2782477 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290443002 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271805048 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277815895 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.291679032 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.276522954 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273883565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272712028 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.27070712 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.271698677 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.270202162 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272445887 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.272410268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274016854 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27356672 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277922724 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.272306553 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.273040353 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.27292088 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27306084 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.273389914 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.271406267 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.274555751 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.274883226 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276154154 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.273068034 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27347468 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279991686 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292757626 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275041349 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.273884707 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27373225 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.273219736 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275866296 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274340433 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.277094389 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.281128082 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278073844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.283970662 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275351123 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283854567 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275977546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276985329 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.282922932 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.27253702 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271890252 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274651184 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.27561814 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282503276 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295210908 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276932915 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.280118603 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274593754 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274002675 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.275161959 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.274702478 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275132136 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274790409 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284491861 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296372408 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.280766553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277410386 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274501905 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277105758 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275719755 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275642554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279422002 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.276715894 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.27644653 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.276471515 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.276370716 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276374531 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278425573 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.277113198 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.276527726 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276488117 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283581477 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.300370562 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282085182 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276901095 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283741974 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29746589 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28429686 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298806586 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279270526 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276480254 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.278930268 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277963487 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.278382478 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.27727059 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278061751 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278430243 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.282364798 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.277893137 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.279788162 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.279490107 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278458638 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.276840864 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28869604 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304169963 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278897489 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284641604 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.275261934 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.280346834 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.283747975 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.278807201 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275810202 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.282489548 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290800128 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28897179 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279437193 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.28001469 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279790176 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279772482 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279780922 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.279039006 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.279830146 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.279414926 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278245944 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280010076 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282430022 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.280256202 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.278986145 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281258805 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.281357358 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.291131397 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.299735615 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280836918 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279958286 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.28055472 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280596996 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279957848 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.279902049 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279882331 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281728783 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.281881169 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287672964 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28886182 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.282405923 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.279671168 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.27945122 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.280008592 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.281621125 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281583942 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.280876876 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282765005 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.281593674 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281045123 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280701522 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280813108 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283402128 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.282848724 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282034114 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286558647 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.29179959 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28352123 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.28014273 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282026706 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28388716 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281825717 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283034457 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290306568 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306827655 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.294070546 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.294318193 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288102237 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282783122 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28648768 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.295173572 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282578679 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284901264 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282978793 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.28378791 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285992241 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.287856417 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284917326 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290151313 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.302356223 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283873711 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29216656 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.305848702 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284121519 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285762058 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289598545 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285594462 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281806885 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286880371 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.286016162 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291805787 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.305741593 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286542435 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285527585 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285644623 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286596826 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289754215 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285370803 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285876399 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.282281701 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285376407 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285451845 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285107087 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281783629 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.284538763 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286051785 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.289682391 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.293488277 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.283593005 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288007665 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.285317907 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286216742 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285830026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28635727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285009339 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.284882792 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.285742688 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286991535 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28534922 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290435804 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285499463 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.288270998 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289346497 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28687301 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290525942 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299207023 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.296052382 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.285348602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.285961053 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288540983 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.289730304 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287102375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.288181786 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287507105 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289223897 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288512333 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288748761 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.287709773 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.28942344 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30436574 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.310419141 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288263463 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.289061609 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29160241 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288118585 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.285989466 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28966946 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291621222 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.291465157 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.29757792 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.288331794 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293864267 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311104077 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.288633756 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.293367194 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.292254035 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.29678139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.290810319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288674786 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287216298 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.293069631 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305421584 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290364864 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300662126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324047641 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.311362688 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.28958295 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290356625 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288515093 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.291045533 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292543901 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.290015323 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291183259 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290924183 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.290111041 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.291964651 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296170376 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.290917519 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292879224 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291070639 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289940348 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.29209192 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289351773 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.291999907 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291128706 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291660423 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288993377 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.28969908 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.291029005 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305512911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.320004924 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291291408 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292264721 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.28679613 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.294395997 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.295593003 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305386324 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.302064408 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292476187 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292778252 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293732245 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29307213 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292295235 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292418356 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291721695 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291035999 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.2917721 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305245121 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319041089 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297431957 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.292958128 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29413764 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.293466338 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292974499 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293394804 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293425739 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.29361988 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296980535 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29837213 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.294208273 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293734279 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296007753 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.301781117 seconds)
  done (took 761.938397141 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291424481 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291950436 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291041747 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291288904 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292926595 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291769278 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292476992 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292289328 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292162661 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291129149 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292563053 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291788148 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291901522 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293981609 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292823769 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293623967 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292463 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292370888 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294405143 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292826127 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293481312 seconds)
  done (took 28.343932901 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294985999 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.294009545 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293727205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296397299 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294188127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296765896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293431892 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297080019 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297348577 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292684211 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296202853 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296930922 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294882318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.293901944 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293451514 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296270146 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296440089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294481253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.296908368 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294714727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297445195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293044699 seconds)
  done (took 29.699177185 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.296175031 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.295268065 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.295094373 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.294256765 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297637305 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.295404438 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.296522993 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.296734537 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297261745 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.296993431 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.296304379 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.29936247 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.30585777 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.304976019 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.298762945 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.29828075 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.441747422 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297202451 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.296718367 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.297475045 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.294764842 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.304098979 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.317314971 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295999388 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.297824165 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299398805 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298728219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.298810125 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.297494285 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.298044385 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303336 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.298159872 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298150944 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.301659932 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.296936146 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299522596 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.304070112 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299524988 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.295994084 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299235105 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309487552 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.325062279 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299372471 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.30507281 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.321690563 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.29831546 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303668675 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.307748995 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.297121379 seconds)
  done (took 65.070113021 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.299312335 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.301571547 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298740143 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300273279 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.302232915 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300578029 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300006429 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299955178 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.297385715 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.297870802 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301464581 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298402822 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297953407 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301371497 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.302125903 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297900546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299114076 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297739859 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299202197 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298998456 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.298629214 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302781869 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.302449137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299458586 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301655688 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300045771 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299806106 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.303050687 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.300119989 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299600483 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.303395161 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302523815 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302580603 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.30099821 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300732939 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302653667 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303591179 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.302210153 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303072396 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.300123695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303177139 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304039712 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303893309 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303758534 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302255928 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300798277 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300724127 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.302111613 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.301191427 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304050418 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303664505 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302117774 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303872474 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300972073 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305623684 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302885882 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301362388 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.302074151 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305200346 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301137694 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.301561911 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304674168 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.301792749 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304914172 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303284561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302157969 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301789634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304436698 seconds)
  done (took 89.710265858 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303637425 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.302916914 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303777694 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303098427 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303727087 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303850861 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303576034 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302878433 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304125029 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302096381 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303494735 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304468876 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.303678404 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30396434 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304833876 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303318244 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302806151 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303212145 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304434071 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303554427 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304334413 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303196827 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303839795 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303799275 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305468789 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.30406308 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303244648 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303668117 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303928331 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304322034 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304200966 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.303470939 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303615311 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304685631 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304315335 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30455339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304674152 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305378638 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.305588924 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303919665 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.305892374 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304332004 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30590619 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305554661 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30516272 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305636899 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305358525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305518737 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306509766 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305349899 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.306034707 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305409039 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306922136 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305675712 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305489723 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.307220562 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306376008 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305797089 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307389559 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307672421 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306958171 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.307558291 seconds)
  done (took 82.104327193 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309109146 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308164976 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.30393965 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304214251 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308742676 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305558889 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308699876 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308771182 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309186539 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30730718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308479472 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306435198 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306687629 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308138122 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305702068 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305700015 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306242698 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305695226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309134629 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.307115433 seconds)
  done (took 27.358957361 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306882391 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309104658 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305755507 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30747653 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.310029685 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306553861 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309365227 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308842585 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306282856 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310077745 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31048014 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310563021 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30705964 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307008889 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311403234 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307982216 seconds)
  done (took 22.151951177 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.30740807 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.310821868 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309653321 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310552792 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307815885 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307991225 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.310258321 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306962478 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306520827 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.310555798 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.311501798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.3115503 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311154413 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.310879533 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307019062 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310217426 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.310448403 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.310388136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311919425 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.309416051 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306520627 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.308587994 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311852225 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311755374 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.308990835 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309645088 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309777521 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309754893 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308904073 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311400864 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.309498636 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31222079 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310092632 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310794632 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311856195 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309706836 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.312299185 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312427095 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313167837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.313407932 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31385465 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.310144213 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.31245679 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314298841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.310981417 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.313613599 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.310371794 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311859056 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309885026 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.308947138 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313686885 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313993126 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.313638553 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.313886634 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.312804779 seconds)
  done (took 73.309071627 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313818066 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313583271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310533862 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313946796 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315130114 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.313351611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314004412 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314061694 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311511817 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314358353 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311632077 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315556258 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312696538 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313441709 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313184447 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313428981 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313043734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.313444866 seconds)
  done (took 24.860572852 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312837455 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312879065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.31466735 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311516754 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313075059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315288347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312386734 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.31585905 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31573423 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313996802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313533499 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.316190694 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317455444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.316100713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31438711 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313455387 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315395315 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316861655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312067238 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313628505 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316291691 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316401569 seconds)
  done (took 30.141127388 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.314644075 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.314079779 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.315318337 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.330568861 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.336634011 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.340161033 seconds)
  done (took 9.174415046 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325480596 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317962587 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314213115 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318830304 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317372921 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314030352 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315056631 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315230776 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317186806 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316288596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315660385 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317791218 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316819163 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314984355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317032663 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31837799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314458 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31467487 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31606143 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316832887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314542454 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319166788 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316110251 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316544313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315497055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315413277 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318922513 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315193368 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315911506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317892309 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316639706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316527864 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319217378 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318526164 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319886683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319929023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313695623 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318503726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318663266 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31620421 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319275424 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319034771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319795582 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317835351 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3194905 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318325145 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31741757 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317343698 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316736891 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317913273 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320259045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318352452 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31887006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320633083 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320929555 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32002013 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318431509 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317674641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319842863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319954009 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317361662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320910974 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317290187 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318716897 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319856026 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317265554 seconds)
  done (took 88.218921889 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318340583 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318037072 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318516345 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319659145 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319413508 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31892211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317449484 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319153098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319969273 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318918996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322544238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318453748 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319451157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317237741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319909793 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318178441 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315594899 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318274952 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317797485 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321908137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319384659 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319355848 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318868859 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318111933 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320948441 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320404549 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317720021 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320557522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321339928 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321100983 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31794714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319843513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320354263 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319556699 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32012251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320451179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319857818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318693478 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319441631 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324352182 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320408183 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324688796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320035987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318958457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32085813 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321732876 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319346015 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317098527 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320849728 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322854671 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319984405 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318331567 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320865676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319225153 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319153653 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317500215 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319089255 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320477804 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319507009 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322941232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322117623 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322300254 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323167416 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323097043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320127323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320643258 seconds)
  done (took 88.340128201 seconds)
done (took 1777.682068879 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.486394733 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.437700783 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321339187 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.346839272 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.316448116 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.353237441 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.32925085 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.315808597 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322998748 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.321214254 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321834859 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510470881 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.3361592 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.318196879 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32131027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41533525 seconds)
  done (took 43.00620065 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352365068 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325594511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.458600231 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.347656276 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354159771 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525655671 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.385488705 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.328137285 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.528221289 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.375268659 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.053969805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.347736222 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.32277781 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.553693012 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341903285 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.528719639 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600067504 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.057846638 seconds)
  done (took 31.019198055 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.836945124 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.321750148 seconds)
  done (took 9.392054086 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.350787422 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330118614 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.331726682 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327686938 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.320945622 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.331744731 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328161412 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.319735089 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.562256482 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.474464732 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332288006 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337160695 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350310642 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.329119258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325432854 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.36880645 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.501173678 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.323369905 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325642789 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334457925 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.331653496 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.435936048 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.373925556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.328145364 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.470326815 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.540273867 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.334385139 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.336697633 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.486019403 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.322726913 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32778348 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328958306 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.331167404 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.974042498 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.865231026 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.350047648 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351972168 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33384002 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.327361125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.481065379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.325606299 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335648192 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.322776387 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.854161769 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465640414 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.454639457 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.657859107 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.34576691 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331895744 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.397617044 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.325289165 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.331485638 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363284974 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.15235212 seconds)
  done (took 112.744083411 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.332907038 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.714230998 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494875128 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.343252122 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.218253772 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.094079504 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340215976 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.664562075 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.395090217 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325320574 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.670456311 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893236876 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.352306361 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.349736201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842181671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.376730583 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325598824 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.25352599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342167936 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.322393189 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843571356 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319703146 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.321905218 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.570900529 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356702495 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819082951 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.918822202 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.894546283 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.338121697 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.319602516 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833081882 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.340603022 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.37296569 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.319242633 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.612205898 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.727641222 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.733411818 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.344412377 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345831195 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.324622533 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330442505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815863875 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.724074971 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340360864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342161762 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813518108 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.338540453 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.322820217 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.325059844 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540790827 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.196449968 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32320695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.945008898 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326470375 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.637335051 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.392918676 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361249641 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.849290549 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340415857 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.539916398 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365070354 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326744309 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327744721 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323033552 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320708591 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711430455 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.631965262 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328407393 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.715957936 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.86100236 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344393266 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898570582 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.284804884 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328313316 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.375585447 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32652449 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.064699109 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878493113 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.386452482 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321633745 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715043266 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341418739 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.676936385 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.340137601 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321515411 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861909957 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.33515577 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.359750997 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.333228943 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.327229 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.095454966 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330821486 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.642207003 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.379471461 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327848192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.321921031 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.329582286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32384046 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.342447963 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.332599682 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904789191 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.34981642 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.330971934 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.350395954 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328417933 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324202649 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.324766312 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330518666 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562326171 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.821301523 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.355914371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329757427 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.322495026 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.330322675 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.589646965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.33089125 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.677287555 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.346886173 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331204211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327090902 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.167218473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.384368658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323578576 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.327378865 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.29005222 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.536283005 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.358752175 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.324968462 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330250905 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.351260913 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.732785823 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.347013453 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.414254378 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330477322 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081979021 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384173656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.350323553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.85646845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.326090021 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325224895 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.349871931 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327568616 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631345147 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.623308939 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.606882903 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327034792 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.346495582 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068993933 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.377067463 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475584265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346998424 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320536781 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531659043 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553426031 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.330987911 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.929266562 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324409273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.552018948 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.332247171 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643105728 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.873973855 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.353769684 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338302429 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.097118422 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.058872468 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.002138683 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.332568046 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.670247738 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.304518839 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.800748918 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.33078388 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332496262 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902917065 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.333209493 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332059 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.330797621 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33164563 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.388509137 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510461515 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.68240198 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33209736 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844594095 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399675412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338838565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332986762 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330294879 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.682146395 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378986947 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.336010584 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.353945289 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.326098821 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.333994335 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870740187 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.311248431 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.326762827 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489890837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016822753 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.355979006 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.336802505 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.965627969 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.556889927 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93239988 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.399281318 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.703255559 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.35861623 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.374129863 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.1526774 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3769859 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85208252 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352400807 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.331291124 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.99248377 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.355134905 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.40489437 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.332218791 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.333677291 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924342203 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.357209954 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.330561391 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.716816712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3502572 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611559172 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.330357212 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.362154663 seconds)
  done (took 1114.395238227 seconds)
done (took 1311.787607741 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.337124195 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.331682346 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.31711987 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338730144 seconds)
  done (took 26.57373736 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.346968798 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.344341389 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342489824 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.340186107 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345273475 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.34157875 seconds)
  done (took 9.31357785 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.987404321 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.337374926 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338401506 seconds)
  done (took 19.914245694 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.572311403 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.760228895 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.729221313 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.832174947 seconds)
  done (took 11.146816564 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342463308 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.340278987 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.3411902 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.343193866 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34475541 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.34763917 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.344442567 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.345467176 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351098461 seconds)
  done (took 13.351198702 seconds)
done (took 81.549120848 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335151985 seconds)
    (2/286) benchmarking ("sort", Float32, true)...
    done (took 6.334700435 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.672245063 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.657128569 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.92746956 seconds)
    (6/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.418340629 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.378210109 seconds)
    (8/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.250676452 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.031902584 seconds)
    (10/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.446325583 seconds)
    (11/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.318916815 seconds)
    (12/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.464382087 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365344971 seconds)
    (14/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.640037516 seconds)
    (15/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.346587474 seconds)
    (16/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.724425007 seconds)
    (17/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.088702404 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.314216518 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.758615459 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.321281828 seconds)
    (21/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362588288 seconds)
    (22/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46452083 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.320271982 seconds)
    (24/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.335246337 seconds)
    (25/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.313189021 seconds)
    (26/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.064403654 seconds)
    (27/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.314425338 seconds)
    (28/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.230516176 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.35376412 seconds)
    (30/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.365423152 seconds)
    (31/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.192773924 seconds)
    (32/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.45923726 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.101635737 seconds)
    (34/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.385745635 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.802278381 seconds)
    (36/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.34166894 seconds)
    (37/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.391442497 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.054382821 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 6.334669513 seconds)
    (40/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.783643655 seconds)
    (41/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.978475738 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.795850532 seconds)
    (43/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.31822958 seconds)
    (44/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.235244034 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.464063446 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.726693981 seconds)
    (47/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.665289842 seconds)
    (48/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.797194735 seconds)
    (49/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.863767532 seconds)
    (50/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.050330784 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.356818296 seconds)
    (52/286) benchmarking ("sort", Float64, true)...
    done (took 6.337250098 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.110568846 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36400567 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.454660664 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.62221325 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.196531862 seconds)
    (58/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.235252387 seconds)
    (59/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.175543831 seconds)
    (60/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.553383626 seconds)
    (61/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.37358981 seconds)
    (62/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.853236515 seconds)
    (63/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.334491904 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.396571627 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.342309266 seconds)
    (66/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.366501215 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.891321672 seconds)
    (68/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.422790689 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.342513021 seconds)
    (70/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.409606119 seconds)
    (71/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.591434697 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.375758217 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.358194873 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403355813 seconds)
    (75/286) benchmarking ("sort", Int8, false)...
    done (took 4.411663369 seconds)
    (76/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.268256537 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363089685 seconds)
    (78/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.890932295 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.617458571 seconds)
    (80/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.318738873 seconds)
    (81/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.453702997 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.362282858 seconds)
    (83/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.858433063 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338992821 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.420153399 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.004885983 seconds)
    (87/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.425536604 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.784008757 seconds)
    (89/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.450394215 seconds)
    (90/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.278986742 seconds)
    (91/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.3592737 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.342911249 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.328412798 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.357359145 seconds)
    (95/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.083326765 seconds)
    (96/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.351242327 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36537748 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.558359602 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.372624589 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.798219638 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.321555287 seconds)
    (102/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.441100523 seconds)
    (103/286) benchmarking ("sort", Float64, false)...
    done (took 5.727203539 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.361423842 seconds)
    (105/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.479816955 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.283285553 seconds)
    (107/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.539715594 seconds)
    (108/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.815341901 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.325682205 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.320543589 seconds)
    (111/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.32329518 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.870989643 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.382528689 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.370978123 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.604705732 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.397901655 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457303904 seconds)
    (118/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.447666774 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.201564661 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.492805625 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.642118017 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.346090424 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.326478109 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.581714247 seconds)
    (125/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.455098051 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.37105299 seconds)
    (127/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.519000339 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.476487196 seconds)
    (129/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.365134309 seconds)
    (130/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.425936195 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.208895793 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36889104 seconds)
    (133/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.976445684 seconds)
    (134/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.378420878 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.594159139 seconds)
    (136/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.080268438 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.20501949 seconds)
    (138/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.327008772 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.197962426 seconds)
    (140/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.328838701 seconds)
    (141/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.351095377 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.466822432 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.174703357 seconds)
    (144/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.323244217 seconds)
    (145/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.455463306 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.351852721 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.325724393 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.386468462 seconds)
    (149/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.475172778 seconds)
    (150/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.367542167 seconds)
    (151/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.373968418 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.902923039 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.789401999 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.468087975 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.110348715 seconds)
    (156/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.375055117 seconds)
    (157/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.738102465 seconds)
    (158/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.655458321 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.362088202 seconds)
    (160/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.343019205 seconds)
    (161/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.316426833 seconds)
    (162/286) benchmarking ("sort", Int8, true)...
    done (took 6.344245529 seconds)
    (163/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.399455756 seconds)
    (164/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.495735218 seconds)
    (165/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.561478404 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.325178869 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.854745377 seconds)
    (168/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.324603185 seconds)
    (169/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.491610773 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.330008865 seconds)
    (171/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.342912351 seconds)
    (172/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.950628068 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.39315564 seconds)
    (174/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.078283565 seconds)
    (175/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.165651441 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.351894769 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.408265887 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.251586946 seconds)
    (179/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.438185751 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.051201078 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.323917148 seconds)
    (182/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.238371575 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 5.469020866 seconds)
    (184/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.344928303 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.404831544 seconds)
    (186/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.063275707 seconds)
    (187/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.452471462 seconds)
    (188/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.465865619 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.857699153 seconds)
    (190/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.428810718 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.994275682 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.568311288 seconds)
    (193/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.415488229 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.372729643 seconds)
    (195/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.88280019 seconds)
    (196/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.364059829 seconds)
    (197/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.328003158 seconds)
    (198/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.35487747 seconds)
    (199/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.381310879 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.20654913 seconds)
    (201/286) benchmarking ("sort", BigInt, false)...
    done (took 6.347526237 seconds)
    (202/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.328564122 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.34248744 seconds)
    (204/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.328034917 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.062431408 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.36888497 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.313661478 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327348565 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.335936858 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.394017517 seconds)
    (211/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.332969766 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.152544073 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.372901775 seconds)
    (214/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.17646077 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.225944054 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375208625 seconds)
    (217/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370309824 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.456605163 seconds)
    (219/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.150761381 seconds)
    (220/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.621939084 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.96948977 seconds)
    (222/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263304717 seconds)
    (223/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.358096116 seconds)
    (224/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.477016384 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.875257466 seconds)
    (226/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.350786238 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.366099699 seconds)
    (228/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.436268297 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.354102789 seconds)
    (230/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.337060268 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.598987688 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.355160071 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.013223424 seconds)
    (234/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.905069054 seconds)
    (235/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.348565957 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.359363567 seconds)
    (237/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.767133721 seconds)
    (238/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.446925362 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.367757143 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.381770823 seconds)
    (241/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.335291227 seconds)
    (242/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.329821549 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.009230477 seconds)
    (244/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.344359859 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.740865907 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.891150304 seconds)
    (247/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.148944527 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.75203696 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.135642583 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.660731032 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.035065942 seconds)
    (252/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.332742762 seconds)
    (253/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.411225148 seconds)
    (254/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438608584 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.367918235 seconds)
    (256/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.371583208 seconds)
    (257/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.09510042 seconds)
    (258/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.861288961 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.375272682 seconds)
    (260/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.756517104 seconds)
    (261/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.340945713 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.435569951 seconds)
    (263/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.716397951 seconds)
    (264/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.376958953 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.439837187 seconds)
    (266/286) benchmarking ("sort", Float32, false)...
    done (took 5.402048366 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.031161004 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.468814781 seconds)
    (269/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.336867746 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.212278344 seconds)
    (271/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.577277374 seconds)
    (272/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.664159545 seconds)
    (273/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.989008406 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.412283862 seconds)
    (275/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.363376696 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.796332628 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.374053396 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.610683794 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.380830711 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.424715243 seconds)
    (281/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.442703499 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377756105 seconds)
    (283/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.384865536 seconds)
    (284/286) benchmarking ("sort", BigInt, true)...
    done (took 6.358747216 seconds)
    (285/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.435830634 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.902993274 seconds)
  done (took 956.264249707 seconds)
done (took 957.518049293 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.394066505 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387889967 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.372018353 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.392529723 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.481060542 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.393776971 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.380906998 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.374166675 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.419283508 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.419713666 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.370210831 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.393287128 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.372453925 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.372739389 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367539263 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385503844 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.543709913 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.365422419 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.390178558 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.382688277 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.388107419 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.369051399 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.421355185 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.391877446 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.3738095 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374793889 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.375630155 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.390821585 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.482077837 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.376293154 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.376151367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.384607388 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.538594092 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.365516029 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.369459548 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.393201915 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.384174818 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.383664836 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.374515368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403963761 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.996520408 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.3885993 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.376942116 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.37650928 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373187135 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377787328 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.373586535 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.38280969 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386699217 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388664433 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.985863046 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.403283149 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.37519471 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.373577179 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.386983958 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372563553 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.378401519 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391517479 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.394350409 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392229474 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.527976963 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.374869802 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.37851592 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.39316172 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.382117255 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.025908815 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.384778455 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381440788 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.997675666 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.392474429 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.021923869 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397594715 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.377795903 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.391450535 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.406585651 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.538496056 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.365347746 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.376953113 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.384624572 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.37500302 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.387768894 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391576228 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382201053 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.379386766 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392357379 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.398986824 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.388258268 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.377858031 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.386302112 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.395062051 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.385156494 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.388648858 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380644854 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.373715657 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.38728268 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.382820125 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.378928585 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.380148623 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.383650352 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.388507593 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.996780129 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409377927 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.374945762 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.375194524 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.377133477 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.390547473 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.995420327 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.393067887 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.398666432 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.427228822 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.382052638 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.529676165 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.37447785 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397579546 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.387840472 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.38196405 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.373739445 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.534198059 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.985533201 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.409037811 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.379904942 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.377055151 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397147809 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.382412901 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.37732929 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.550017375 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.375312811 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397477342 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.500633478 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.39159479 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.411600818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.378427022 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.383880262 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.404107524 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397883177 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41213945 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.392453299 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393113729 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.394852079 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.375818709 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.389850461 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.391223764 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.379548448 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.385341394 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.373092717 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.401676722 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394217589 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39109542 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.399656924 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.499198495 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.379174711 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.535935 seconds)
done (took 234.499601854 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436299213 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.367989211 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.455435476 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374067809 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.479151875 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.475633514 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.367979932 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371513173 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.37087712 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.800842967 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.373810858 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.370968111 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.372021051 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.374010581 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.457862333 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.37464361 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372148697 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.72199387 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.375212822 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.443309922 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.370335167 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369852806 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.37644212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.756198403 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.371791718 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.370696457 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.441849179 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.375277741 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.722048144 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.369203542 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.369282574 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.718394085 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.462534588 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.39114916 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.386874599 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.383673206 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.481292847 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.392726455 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.457844297 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.457283986 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.460314847 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413320037 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.366916678 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.374865868 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.373477854 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.378382756 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373610783 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403747144 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.371157768 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373636751 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.72210551 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.387633856 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.374989649 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376970944 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.37481649 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405458277 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375482462 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.378913163 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.465277646 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.379361283 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436727975 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.757181086 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78996448 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377338638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.377635088 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375640576 seconds)
  done (took 151.286177293 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.447320596 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.448508917 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.502308027 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.395187762 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.426955525 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.504897679 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.392859285 seconds)
  done (took 11.402593575 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.382139812 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380795151 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430019274 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429903052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.377901259 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559008457 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378269718 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.391625963 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.378825644 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.43295086 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.38237165 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379945303 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.386004142 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.38016475 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426175988 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.387852564 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.495665397 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.381006593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.38035523 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.530242355 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376788642 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.386178034 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432456174 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.391643523 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.381035893 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.384956955 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.191604407 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379226578 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374504342 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.380297902 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380723581 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.457239418 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.380426029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.374818002 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378087131 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49571244 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.381411448 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378854176 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.382140711 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.378718802 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.378665176 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.380819663 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381496519 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.379915261 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.380030909 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.403550238 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.382637115 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.382192984 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.382721223 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383884915 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.43303487 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380188885 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377650985 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.379750869 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437993399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391132618 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.383485575 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.378987275 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382443316 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381848335 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.532330427 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426472813 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.379661666 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430174572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379450195 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383644635 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381688239 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.381795864 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438482718 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.383962972 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431597604 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.377357049 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.569450251 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.401628736 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381509263 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385634263 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.38331821 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381379525 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.375567579 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.390572489 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.380821697 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.384045625 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.385500037 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381845941 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380242824 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.553565654 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.489585228 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.377230495 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396439223 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390117486 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377263797 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.434003873 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.384019662 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.378951521 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433628353 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.493850725 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.432717271 seconds)
  done (took 158.237891203 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388157661 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.38869605 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.381046911 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.398527185 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381884282 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379305781 seconds)
  done (took 9.607077067 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.385387262 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.382484386 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.38343635 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.382848568 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.38442253 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.378537823 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.381590438 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381264736 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.385869134 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.382554894 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381500036 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380789803 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.383839212 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381347819 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.379220674 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.382280653 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.382394141 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.379272971 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.383847436 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385909104 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.481232836 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.385153532 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380269804 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381403851 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388284352 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381550106 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392557232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.384354164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.385567845 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.391447152 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.406720839 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382554964 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.388108211 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.391849105 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.393168388 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.384368576 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390378348 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386264793 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379302123 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.382586393 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.385532605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385334087 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382248938 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.386929861 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.389264208 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.391902168 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391765041 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.394222678 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.385214748 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.382395913 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.390158144 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388814991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.389209171 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384717619 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390038861 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412280016 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.392706519 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390128525 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.38460021 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386241452 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.390667264 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.389429315 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386116985 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.394963193 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.386298757 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.390246948 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391313434 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39416443 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385395088 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38842921 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389710078 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385084803 seconds)
  done (took 102.234125472 seconds)
done (took 434.046337567 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.658673152 seconds)
  done (took 7.952766333 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.864234846 seconds)
  done (took 8.163336577 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.288826791 seconds)
  done (took 24.594911098 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.445819683 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.428594461 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.421122791 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.383164708 seconds)
  done (took 28.9714518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.734586945 seconds)
  done (took 8.027898813 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.381129916 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.405939845 seconds)
  done (took 14.086958136 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.786901947 seconds)
  done (took 8.081223955 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.456509723 seconds)
  done (took 7.758940051 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.383511871 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.405934635 seconds)
  done (took 14.094874324 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.361179214 seconds)
  done (took 7.658539155 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.424586954 seconds)
  done (took 12.723364652 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.386457154 seconds)
  done (took 7.681710338 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.398444378 seconds)
  done (took 7.691814463 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.355302698 seconds)
  done (took 10.648161532 seconds)
done (took 169.43188933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.380191288 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.378973856 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.379188773 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.377844596 seconds)
  done (took 26.810312063 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.422769129 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.421453818 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.425570842 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.435188929 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.428301715 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423019814 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.416064483 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413407914 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.432232149 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.42657554 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426261521 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.425633152 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.42222256 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.416141828 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.425682652 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.425323137 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43493594 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.423622213 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.416754191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423328811 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.391653669 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.436156989 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.429457169 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.390798584 seconds)
  done (took 35.426866548 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.911536213 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.458962438 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.546327609 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.442661034 seconds)
  done (took 7.657183017 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441287712 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.444633365 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458137004 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492648314 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.523333595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.454737122 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.414506784 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.412802105 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400757099 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.446000616 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.523639237 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.460165074 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.528770298 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.391678456 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.576576362 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.392524798 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.391317664 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445347408 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499765571 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.51801083 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.392841786 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.445797573 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.453577809 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.462606153 seconds)
  done (took 36.268623674 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.392434315 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.412296704 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388616614 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.393569036 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401427066 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.395152838 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.39347299 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.392907974 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.394008132 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.40185935 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.39440703 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.408127676 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.393295771 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.393734107 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401144764 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396777545 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39960332 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.394213593 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.394565034 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.399536647 seconds)
  done (took 29.240190492 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.38757668 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.311683611 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736952378 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.640672173 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.389277828 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.388519993 seconds)
  done (took 29.155526927 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.475961738 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.646962246 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.391006676 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.809949582 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.903493275 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.410830707 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.392535656 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.681250241 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.044726669 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.049555438 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.46605766 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.476364985 seconds)
  done (took 21.051556093 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.388053633 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.403965784 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.393045788 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.407542587 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.460470429 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.41281269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.400534775 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.387747663 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.462589031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.480187837 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.413849982 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.461982174 seconds)
  done (took 38.376742603 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478384105 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436595322 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.538139872 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401393209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143440569 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597654124 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414602083 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.837106956 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393008763 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666592305 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405495866 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479356716 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650030465 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399632876 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390704626 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.505306077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637432571 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935211046 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390106899 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.874261323 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414764824 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396085666 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.964303488 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422707402 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607126371 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.533351755 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656298688 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169633637 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730232693 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401335513 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406319379 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396576734 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665614118 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107916304 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509022447 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40500205 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390154265 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.018806668 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.386465614 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.803677258 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392657978 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410760456 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406007466 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393043475 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325996248 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398520042 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841305907 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395859968 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.104896927 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39428406 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404274625 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488408056 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.400721194 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.383359599 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433230094 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394840483 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.399020354 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497016124 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987722468 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.285999559 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396263545 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.330936266 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414275755 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877622381 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095507711 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.41714824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.398111214 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399688904 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332349141 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.853607216 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406473133 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533482335 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.414718932 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056690214 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180931145 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41613164 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326387981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996287723 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399241856 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.332232251 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623167205 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166931029 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33014517 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.341516591 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330253889 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172240386 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401001076 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.915782131 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413456587 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865663018 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402672282 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412319174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417060791 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621224561 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.274216638 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398214732 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.404831089 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50791511 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413058616 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850224012 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331866472 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396100265 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655708582 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.605923384 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402691791 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.509881496 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632160815 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392375218 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41406162 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415771897 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411424071 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.046910849 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428976242 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.306364127 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411365858 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177950827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206438907 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393765368 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.405383246 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400063846 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668981234 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.241890395 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277360773 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465784457 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400740736 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398331308 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909875102 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987974764 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.280234943 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.393375864 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398230037 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.411753813 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.396500993 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373041931 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.396560782 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409992464 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.171048781 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620950678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397590884 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670661632 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330392472 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531736186 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411681301 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.6208374 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.74575506 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.421697925 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657406556 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39707067 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4310887 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413405296 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416550748 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501112626 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41988981 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.3983566 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658173903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401899176 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400167043 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916807964 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177704578 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401948553 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402123225 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402542284 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059513897 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389542804 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40529186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288203613 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.411336849 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465427433 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406293362 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409374243 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.512566012 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422431718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.425370723 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.409708726 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623041977 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408861023 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.843448707 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478054499 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.613257589 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062165537 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435217807 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.334792809 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.108488754 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.090558566 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400042358 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.588657539 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399654472 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412235339 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414485893 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412721529 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056324698 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420365854 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.839593956 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403889246 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411002519 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.409192226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401637392 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.564087755 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.547887071 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404974938 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.418621514 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545074942 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41723223 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338792545 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919653567 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409888386 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404771083 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.18028041 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43854195 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863739842 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910777154 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66027639 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416494178 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416766998 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175068779 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.442163931 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.406064883 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416786571 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416070092 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.425340302 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411463281 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.415170267 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.937736807 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.773876164 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971781733 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236346692 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043955889 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448332236 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.403891011 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.310188084 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856806236 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335683837 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064713169 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623458667 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881194668 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376020967 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615808359 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.75896887 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337642843 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417242749 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63434742 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427296446 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.410642493 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416570329 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619743274 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440911469 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412376232 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.342564459 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.693624233 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662212694 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407650657 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485348878 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863661569 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412788927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.181917004 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.479239869 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.834115557 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616971261 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.948371733 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.808243312 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403649845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412215215 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906196686 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414052182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931928119 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102301278 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429428809 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.627727779 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341355325 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.419327133 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41932526 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403256057 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.01993925 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.413122964 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661338954 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420103148 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342119374 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422980474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016498683 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.282750626 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413359036 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407541813 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227276652 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420705498 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751241823 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.410876145 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.485174287 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429654523 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341462072 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342035562 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.09956716 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410718292 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376982371 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965603672 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.430736575 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42456578 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40897599 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279045131 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.665759436 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.423134238 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078535047 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654785645 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423612288 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432081056 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415476059 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416799263 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.389101645 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.310065335 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645894458 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441961989 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631931023 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.507332073 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.30773781 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.946826581 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644222914 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311802803 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410892196 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700271082 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.141821766 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.414315499 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241264395 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455481927 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418351763 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427000091 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424782491 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430830615 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503471824 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421744633 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420820497 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.420465064 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600980704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409611768 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411588748 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425208976 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506454599 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.614354652 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.496355727 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.181848847 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085823013 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246663612 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098710939 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44403629 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412901617 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409476292 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349549956 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56142266 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939777326 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687233687 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534334769 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.416234653 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432655318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420374407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411431983 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631274749 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687821495 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381498491 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430809012 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203702708 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.292891013 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425446249 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.624986963 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973674252 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036670008 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533037718 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420531082 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.867844829 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684666165 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505579166 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413684232 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006550118 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.425329344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.882172929 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.441311423 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421537527 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56154447 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424390015 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133042795 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447255774 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.575474448 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.187407904 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086541193 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677449184 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.988184903 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425052645 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091246671 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27463705 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680731374 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485145206 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428422753 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.523436694 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569496711 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.414998245 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296497588 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417526995 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262280511 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.125399817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428294375 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083756736 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700776805 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.422286017 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.43234164 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436711212 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.428247756 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63952986 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202498863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640813654 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425801245 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418235897 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.988022947 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088295711 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450908012 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353809084 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419543363 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718396309 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677417685 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441982329 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.871073343 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.126903015 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029230289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.386920022 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439165318 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41999978 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213545239 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083838006 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.612883437 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996412296 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074881485 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430633183 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69524613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.424045432 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.431769128 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697176274 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.425593807 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421450481 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43236168 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.091856531 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.358937958 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.433077193 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.134597778 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.358437106 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644552331 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441184939 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356915653 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416743556 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.614280899 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418614928 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539631499 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42953859 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420511965 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424820346 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.154960502 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7018196 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.424809006 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.425291314 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.426542557 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426409875 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520015915 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682183189 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424785958 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.096040409 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.773139768 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677982078 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.421284885 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.406149708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422983837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419612964 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155075321 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451819038 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421300737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044528731 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.426058214 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.434988574 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425327378 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.638573439 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632036058 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436870788 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432097211 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42974113 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442276086 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.320349294 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19519111 seconds)
  done (took 1677.10544055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466056973 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.465515815 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.43936143 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.503015548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453430296 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.55418895 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.535669846 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.562580858 seconds)
  done (took 53.312042106 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.435058457 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.581706439 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.457846195 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.436957233 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.430485904 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.430616252 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.939547007 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.451647612 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.432004345 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.436277772 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.424917755 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.433914098 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.154249642 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.432270332 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.429426549 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.407287652 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.431670756 seconds)
  done (took 67.090685361 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 52.972632152 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.418701285 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.061864861 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.485866682 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.745759884 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.433215987 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.451380585 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.454711125 seconds)
  done (took 101.360858786 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.444375954 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.443471389 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.443296623 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.443079343 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.444885112 seconds)
  done (took 8.555515776 seconds)
done (took 2132.710518137 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.431180055 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.433017742 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429434321 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.432416681 seconds)
  done (took 7.06032472 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.407661972 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.138638099 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.407499475 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419165952 seconds)
  done (took 18.708214675 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.45562066 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.446673419 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.281627426 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.181802581 seconds)
  done (took 5.800782851 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.174401015 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.186641343 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.17310945 seconds)
  done (took 7.873238814 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.423767074 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.429967029 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.429950151 seconds)
  done (took 20.620027051 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726446938 seconds)
  done (took 3.065350131 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.571796417 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.620880448 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.775742241 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.749813926 seconds)
  done (took 8.053284607 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.813040978 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.8147988 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.614996741 seconds)
  done (took 6.578685472 seconds)
done (took 91.997991981 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.802731539 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443943247 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.637829011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.76972006 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.651475821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.638164113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.692980297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.737327779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.279387036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.268211307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.772038331 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.655103021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.854891461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.445820073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.863717644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448495092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.656822418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.858499062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.426084476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.443985782 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.694989248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.414091642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.601825376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.439473424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.655622288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.591203734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.989452218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.450392101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426661727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.016538669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.587295617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425852994 seconds)
  done (took 200.977359493 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.440437728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431691168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425540764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.443696824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.424638576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446023142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.462413238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.42648782 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.463354066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426254904 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44455261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.425278767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.445567905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.425833076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427620192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.42610956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.425415103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428048288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.426020488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425496863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.425386908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445139259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.449061479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.425997721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.446267246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.427149231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.446423766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426380492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.425024118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.464983698 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.425493924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.447256149 seconds)
  done (took 207.283821517 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.428368281 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.425486385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.462210584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.426174179 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.426592193 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.431749658 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.428516959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.446819502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451598225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427252584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.440425771 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.427342162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.454306084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.4278818 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.451307321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.447087331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.438738035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427358968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.426851907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435363941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42619231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427495194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427719958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.446365459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.44808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.428113233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441507234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.427763458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444407818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.426507782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.458285001 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.452603645 seconds)
  done (took 207.326467943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.629417139 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438952088 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.440321234 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373786963 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439713633 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.440898898 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.434490966 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.641526501 seconds)
  done (took 15.180980838 seconds)
done (took 632.104952419 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.941961445 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.630624143 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.662390937 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.459625412 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.363421158 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.478753237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.460963009 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.665396216 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.413390196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663428169 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.842403869 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.473863008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.003254579 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455650809 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.740877363 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570428397 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.429636141 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.566934014 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.810085983 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.123696078 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.752827341 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.03345536 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.674032932 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.405594 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.016609884 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.024322893 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.308408549 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.419575813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.477637161 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.814138387 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.284167594 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.576265768 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.531625011 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.530814051 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.589679732 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567607403 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.550990338 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.531789718 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.678103048 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.78700867 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.115792345 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.222535828 seconds)
  done (took 98.992098825 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.423582164 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422925501 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421475471 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.423999759 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.424599921 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.423817972 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.423103487 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.423976208 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.424437694 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.426416665 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.423536114 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.427361867 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.424616215 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.425199331 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.423723181 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.42454278 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.425375564 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.428421135 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.42505988 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.423968728 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.426609547 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.424608257 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.425415176 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.425749324 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.424932224 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.425669388 seconds)
  done (took 38.387936567 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.445218453 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.715609759 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.898245711 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447322243 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.444422491 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.449046676 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.53671021 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442736468 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.446787367 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.447772946 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.632182431 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.444267652 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.485205784 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.926313833 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443042563 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444779278 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.44600104 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.446760265 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.723580243 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451308712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.5634194 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445148762 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.537586615 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452872568 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.472618634 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445711973 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.450348406 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.021900543 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.465669956 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.630812483 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.392763685 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.536767775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.972329358 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.928183073 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.390752136 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.450092317 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.447465359 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.641741853 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444925964 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.44584663 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.538195954 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.44471506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.908564345 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.129559427 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.464633448 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.448530189 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.04285132 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.65732818 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.741890023 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453436286 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.93759199 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.447090194 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.44939962 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451237634 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.742866447 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.453112472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.448881458 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.066734963 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.474418332 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.544612684 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445814633 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.446526879 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.737976223 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44510964 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.724927123 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.447382604 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457889255 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.472704868 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.931388232 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449364699 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.172071692 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.466416394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.450551126 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.642392045 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712882362 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.079297472 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.470946522 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736360406 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988149428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.557006003 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449148769 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.012600258 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.560824016 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.450185952 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.451861239 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.453515219 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.452019789 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496846569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.540094126 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.093912881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.16621245 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.07952059 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.563416163 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.460866517 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.450183118 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.054173728 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.472527363 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.452635879 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.909557184 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.180604858 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.477814773 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.462027412 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.179592022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.478117304 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.547841112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453523088 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.94302936 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.455449101 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.497734888 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452003264 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.459998363 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.478091734 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.546891336 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.452316734 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.452435091 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.13311303 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.662691498 seconds)
  done (took 191.770462834 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.444281472 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.443529102 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.445557925 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.462190023 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.445335208 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.453126559 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.445315299 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.444605628 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.450892716 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.445295076 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.446255029 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.444612643 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.446780566 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.453711888 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.455920143 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.453847308 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.058079379 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.447753913 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.443845528 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.443461822 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.278087902 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.449482161 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.455191989 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.443240154 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.447726513 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.445782517 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.454568626 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.466307287 seconds)
  done (took 155.369873566 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452795614 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.112858198 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.471876358 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.612157532 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.474381522 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.457101662 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.614219843 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.52331941 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.47247187 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452030697 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.451147183 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.810359401 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.453298722 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.064941168 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.683407042 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.637042558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.069751122 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471594783 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.451998496 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.454044425 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.621118586 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458150323 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.838076088 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.172885702 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.480085189 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.169994976 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.44309682 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.456487621 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.455009012 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.125353535 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.470173602 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.817293659 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.54870015 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.527868523 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.143314541 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.076347144 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.07870731 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.634071339 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45764602 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453027154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.453401721 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.439954562 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.123260192 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.473382979 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.455689079 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.130973634 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.477171371 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.457653472 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.461962684 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.457539225 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.526429548 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.544297861 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.843368115 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.13101313 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.567033715 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.467505301 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.619756675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.850302629 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.457584325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.059359885 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435232083 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.138972494 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.477431978 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.440181149 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.458034986 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.461526961 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.636823643 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.612933791 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.059815595 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.476474265 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.064231786 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.660986776 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.453908195 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.456753732 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45979132 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.1804532 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.089093138 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.658285472 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.622643543 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.691250157 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.437484188 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.458103681 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.440192599 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.552849922 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.455987325 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.185397523 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.086657503 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.476793416 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461945835 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.461339543 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.463034928 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.671509855 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.182039728 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.573226038 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049990086 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.857328127 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.824509938 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.456516555 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52844587 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.4761438 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.834953856 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.459336825 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.528397049 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.910488307 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.833702646 seconds)
  done (took 176.178447722 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.742908759 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.795400013 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.55460422 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.622816971 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.126762335 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.060270781 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.847637816 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608213791 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.579499188 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.745210064 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.740266852 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.544234097 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.704406542 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.543363167 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.24126482 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.55923536 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.579592938 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.616432044 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.634348152 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.567214495 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.199094657 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.766838505 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.67717303 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.485132893 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.559366011 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.318471487 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.076778965 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.056815799 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.656124947 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.92974923 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.05091102 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.672277643 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.523785748 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.241408228 seconds)
  done (took 70.989537847 seconds)
done (took 733.03220072 seconds)
SAVING RESULT...
DONE!
