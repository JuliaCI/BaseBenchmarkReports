cset: moving following pidspec: 7473
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320612245 seconds)
loading group "string"... done (took 0.542316009 seconds)
loading group "linalg"... done (took 7.508767835 seconds)
loading group "parallel"... done (took 0.170044705 seconds)
loading group "find"... done (took 1.158984991 seconds)
loading group "tuple"... done (took 1.823225748 seconds)
loading group "dates"... done (took 1.251322164 seconds)
loading group "micro"... done (took 0.232279628 seconds)
loading group "io"... done (took 1.099928702 seconds)
loading group "scalar"... done (took 40.839083796 seconds)
loading group "sparse"... done (took 13.326181517 seconds)
loading group "broadcast"... done (took 1.054381468 seconds)
loading group "union"... done (took 14.292459821 seconds)
loading group "simd"... done (took 4.7693613 seconds)
loading group "random"... done (took 9.644568279 seconds)
loading group "problem"... done (took 2.019146517 seconds)
loading group "array"... done (took 22.653960273 seconds)
loading group "misc"... done (took 2.054729939 seconds)
loading group "sort"... done (took 3.451103842 seconds)
loading group "collection"... done (took 19.781151847 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575841674 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157922187 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153712967 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149086957 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20055585 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146710887 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162569578 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098893113 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.0151693 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181200749 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1524319 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523931411 seconds)
done (took 5.280424417 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.243057187 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094516571 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104164176 seconds)
  done (took 0.907408048 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077640969 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145266237 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095407088 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078823317 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095372941 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078128024 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096427531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077879902 seconds)
  done (took 1.380917906 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086541184 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09717923 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081306859 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096741731 seconds)
  done (took 1.074205081 seconds)
done (took 4.405075019 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727509458 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277401705 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203635052 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46173716 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197025655 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21807143 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672313846 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338477708 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255915624 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099080772 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134640121 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395435456 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137341989 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685948458 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091114412 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124533867 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178590187 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442134369 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084485679 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109320708 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116859306 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140500309 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132542372 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090865406 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186596594 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082211942 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19519518 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107335587 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080695318 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275591224 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20103544 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69311534 seconds)
  done (took 10.888624634 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110635784 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134109959 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097833478 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137241292 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134447645 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099870827 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084771925 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096686243 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121773573 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176786765 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113950872 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136815516 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094677047 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082053788 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115036572 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244759 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120883362 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099503781 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099969304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087362939 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138149419 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112183845 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108462443 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093141641 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165676311 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222198004 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111684124 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126200713 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097963543 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112455691 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142735402 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142701347 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095082278 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080902489 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171726609 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123058632 seconds)
  done (took 5.157854547 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.094656507 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189055323 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120523261 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169682933 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080485223 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142714082 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094743038 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112854258 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25727142 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.119013578 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486766669 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142925188 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098619547 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098439784 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082830262 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.111181055 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097495599 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.653942088 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122591969 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148777141 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114083868 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10179169 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08376885 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364050914 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095549366 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079741097 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096810249 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065807155 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161340654 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101941856 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.15464627 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120987025 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082199342 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135237835 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.2053343 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110612069 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134380112 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095944638 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079033602 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175513481 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.122415913 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085540104 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097642168 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119668107 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133044657 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118459081 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098852507 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096800897 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.196511944 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080693972 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114216428 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.947759215 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182540629 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091030576 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096513713 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288134604 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117852588 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097762804 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077966629 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.284036482 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189352948 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098163873 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078831229 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09828144 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077496317 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099537962 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381382217 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098000667 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717211375 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086011006 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106601874 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08268403 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097141744 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103249119 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089540839 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116105608 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078629528 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099384395 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078485647 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097245522 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08084291 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108190627 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213328755 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098560958 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07916035 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09634653 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115445681 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11079527 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099823784 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095065537 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113804921 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099210632 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096975182 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117175562 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09953792 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106514934 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078040619 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099495133 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14182637 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080325534 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.152877275 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081142346 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123857019 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099299264 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11367853 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111341045 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09836643 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168701824 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07874729 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095351923 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078962159 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095557497 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080169711 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100109969 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108975811 seconds)
  done (took 22.8068133 seconds)
done (took 40.659236554 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327023 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103827126 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104128927 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104229406 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101891129 seconds)
  done (took 1.528502387 seconds)
done (took 2.287461935 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288166123 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17417338 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096371331 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167218901 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093438202 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164561076 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159247123 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093990256 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218740526 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094802291 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161121832 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075550471 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094881465 seconds)
  done (took 2.66846015 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094730458 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116946068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082336224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110537814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075781959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110264491 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091893128 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116598108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109977903 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085177422 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093615925 seconds)
  done (took 1.841611208 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094875966 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112900761 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083240736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110363064 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075686968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110936909 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092868468 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117076828 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109753857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085952145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093857711 seconds)
  done (took 1.844494323 seconds)
done (took 7.103171042 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090857335 seconds)
  done (took 0.842001194 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.942163817 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.862911094 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113858851 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149052604 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314052652 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171137593 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472205017 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125754415 seconds)
  done (took 11.111597512 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.143873176 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085364903 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102943188 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085463196 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101212397 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0833395 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099654066 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101814584 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082986919 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100163174 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085853985 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099902296 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09964607 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085893808 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10153317 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085290077 seconds)
  done (took 2.363718048 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118236326 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116083624 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107293765 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108688611 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085888534 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10518422 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105543284 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089053646 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101952255 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103357191 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089932168 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106457407 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103477939 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079581852 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10673105 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107956566 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085680081 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106535377 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106596557 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08991794 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106891946 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09537173 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087036253 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107156243 seconds)
  done (took 3.289345997 seconds)
done (took 18.362900833 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160772708 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108511431 seconds)
  done (took 1.029725013 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095725486 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112519954 seconds)
  done (took 0.974305629 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098586461 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096014166 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121884088 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108979413 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080870052 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096943105 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11837538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079564889 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096656758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079602028 seconds)
  done (took 1.746489839 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08333596 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110041906 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100544516 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095526209 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106040308 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094913277 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087955451 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099786562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10950589 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076579424 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102535767 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11381538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08606521 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115759811 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104637303 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08169395 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103940612 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097890014 seconds)
  done (took 2.540845506 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081123447 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09659464 seconds)
  done (took 0.947121395 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081279573 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093740248 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081648808 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097279576 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09337269 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077063123 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093770599 seconds)
  done (took 1.386998583 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438163844 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135323856 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260322241 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083960681 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119568187 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301652826 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097891601 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083933212 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103439949 seconds)
  done (took 2.450847542 seconds)
done (took 11.841774429 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093849126 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115135693 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112499609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463198088 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10758178 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099215884 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14604618 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25149687 seconds)
done (took 2.162467895 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143938902 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.593782324 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.424171137 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230181668 seconds)
  done (took 2.023777973 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403927668 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099133666 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083801826 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081294462 seconds)
  done (took 1.443700372 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080336232 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099141084 seconds)
  done (took 0.954398851 seconds)
done (took 5.346418773 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081356884 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128854185 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079438767 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099675384 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076606029 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099286011 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07668594 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09668137 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079337208 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0982597 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095987628 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081714968 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095877025 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081092891 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094232276 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077975448 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094007383 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080326476 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094386396 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078572859 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093954735 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080128071 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094303057 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077798044 seconds)
  done (took 2.945360817 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100134087 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098671738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102689106 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086386578 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103235131 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085480974 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103091451 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09706693 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086306192 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099733112 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100616958 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08524811 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100122145 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083915062 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099575948 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10175795 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086066451 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09786963 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081723268 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102585807 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102287705 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080937831 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101042261 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085017452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102058759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101239494 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082213664 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098772608 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102692415 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085079362 seconds)
  done (took 3.621568102 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086214067 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093508992 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079402412 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101530917 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078645307 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097479493 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077512914 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09555087 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07875179 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095782982 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079368838 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095904277 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078059366 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097286631 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078330366 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099262346 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111732033 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079123683 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094982688 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078947568 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098750576 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078024847 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094974018 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078269232 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095347736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077907427 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096600966 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076938894 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096191719 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077259897 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098958348 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080324073 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095127835 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083139239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09935204 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07746089 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098844848 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076056916 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09702981 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093962615 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07810961 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094131365 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078995535 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100394251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078930392 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097408085 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077889707 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096831231 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078023503 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099100201 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077013642 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096217577 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079179392 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096620932 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081635623 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096137012 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094729289 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078303413 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096049625 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078463062 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094249803 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07821538 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097396758 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078824971 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111278829 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085352748 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096278682 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079618877 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096827582 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079831129 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097247891 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108519798 seconds)
  done (took 7.187935229 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.130607352 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126708926 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080302599 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098006927 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076588593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09625622 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081807148 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096327062 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096491658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0867056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096224391 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079916169 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098391605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095188071 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097012458 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097064896 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085920396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093678475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078384877 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099603042 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078572612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100003153 seconds)
  done (took 2.854408521 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211002845 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106333258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142888294 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107070847 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083724866 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107423704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10213088 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087795704 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10281861 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083328866 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101368711 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102039976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082802181 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100789907 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.210464104 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085660123 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10300572 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084452284 seconds)
  done (took 2.791279256 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092747552 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099340773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097713345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09989004 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099009688 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084383706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104529815 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107226379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084344043 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099801228 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091645197 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101972617 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101327603 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082199886 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101183729 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081691156 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10126554 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081085647 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108650114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104604417 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086580061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109521697 seconds)
  done (took 2.911423871 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097602043 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101388986 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118829013 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084931427 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095931595 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08032447 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107169955 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080710104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108712984 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100501883 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082394118 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099752193 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087151759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099738492 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104708704 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081251198 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100874539 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080575092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102310046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076937816 seconds)
  done (took 2.681664591 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102039085 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101077681 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099315462 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093020115 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100884636 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082259255 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109293522 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100517394 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081983771 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125861385 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101289045 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082192113 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110759442 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107292426 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099421761 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092440235 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110146987 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108574901 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081864006 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101257167 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124423263 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081206196 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109277134 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100904951 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082529575 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100764622 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100043912 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088827091 seconds)
  done (took 3.572468505 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081379908 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098476322 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080015339 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096425805 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079452559 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096583615 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07923343 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098759505 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081424124 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096638788 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081285423 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098756192 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080868407 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098675979 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081317418 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098754196 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081342645 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097131919 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079538694 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096641304 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081307327 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099297161 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080815837 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096974395 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078696171 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099797427 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078137688 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097251679 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080510842 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097566516 seconds)
  done (took 3.468276138 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091110898 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107209896 seconds)
  done (took 0.99235896 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079900809 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115088182 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078216644 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104272886 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085420533 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101015207 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107942779 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086548383 seconds)
  done (took 1.552902505 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096413858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110485628 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083142612 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113850839 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109252066 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097937922 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171464446 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102441398 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085642434 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099048702 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112937487 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08119726 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106416708 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082236575 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105870204 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086697574 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098067781 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105319085 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085318243 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098581728 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083010668 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112162271 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082663054 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097189233 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10092061 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091216921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112772673 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082443796 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104809734 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107452338 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087466143 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094365694 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081894818 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101078798 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079276612 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10967155 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116760997 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085115049 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109622695 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100483868 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094437407 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095274236 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085941139 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106735681 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110436244 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083019928 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101009073 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077806445 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098828183 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084139547 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09684743 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082689178 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09583663 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088382395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104945167 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111977343 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081485704 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102819234 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084963793 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10450636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088231581 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103488022 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102127099 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082039158 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111147155 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086680375 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111513601 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094739094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076749322 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098023484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092152594 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124239669 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105674835 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083672635 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101991593 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081106126 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104271472 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083514314 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107121794 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10560922 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083195403 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108242003 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088399768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100854619 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101906659 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091464008 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099507636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083583218 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098430462 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117663075 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081696494 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098502382 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079509372 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112526152 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085164546 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101056197 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078672267 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108616028 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093783791 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083474798 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101132673 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082718269 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113255319 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106023349 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088191553 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110909216 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107700663 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08277775 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103261781 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079058409 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102375809 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085213193 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10849797 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075862101 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10429576 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081965848 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101898533 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110229581 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080574035 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101068686 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088775342 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107265013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098683287 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079481317 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102904812 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083097454 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104979129 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089676059 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100423219 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076001235 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096878914 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103242087 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082935701 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104537232 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087765328 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104888786 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075941395 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099477068 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105594576 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091616495 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101660952 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082305037 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108792544 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101624114 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081951747 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107050326 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085068134 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100311459 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087519087 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102549983 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076388226 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105628935 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103635256 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080399571 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10462539 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08574766 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104351319 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100776897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081348082 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10664526 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083662205 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100440162 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081628334 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100032892 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111180966 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08509918 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096575469 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080148605 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108915377 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078810738 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101479831 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080591836 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10401716 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101012107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080980909 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100801352 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083868291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113159396 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104990548 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083867565 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106254711 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094229193 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101291297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084172803 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102876583 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102595447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083931523 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110157915 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087326191 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107957723 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102501976 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078909745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107816539 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089494771 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10100334 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080397662 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101526361 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104051327 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088177853 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104616298 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083178424 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100477654 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082484969 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105232101 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103691875 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083693143 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0995823 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087653264 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101925904 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108523749 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085705433 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113015414 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085607015 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097544353 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086312615 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100469331 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107220022 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078212806 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099192595 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082119144 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102407108 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081824339 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104078097 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07610695 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10882352 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108162114 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082847618 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099442967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083864006 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107975874 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083753036 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107057203 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084921646 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108141536 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111993262 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081286744 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104716451 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092189954 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102887018 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094925808 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089275716 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099654303 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081992118 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100520945 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080931878 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106392733 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110165928 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090983659 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095964421 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085723567 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100982119 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081410408 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098372449 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087185483 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106116694 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102192509 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09096958 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103339351 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084009862 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105464031 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08157664 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10431954 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102427383 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089033384 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102503135 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085169396 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101176356 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084952574 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101496681 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079286415 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105123557 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100809245 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083435032 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108134863 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082633107 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102330458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085067772 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102726655 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101514978 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084634086 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101109758 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086370078 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102100268 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082994948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104971062 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077622903 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109430738 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08158106 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110451762 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10178278 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080062933 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107042409 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085367574 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10942519 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102256685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084560929 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103611811 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082921308 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105409411 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089008949 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101100773 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112343749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092153305 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103319846 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086442059 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102425482 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083493133 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101344649 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101307193 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086224402 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102107246 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082401995 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107178492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084836232 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103189857 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084264934 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103828169 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100636268 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084767671 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096205222 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083375688 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100819265 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083674234 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114425714 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101823886 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08628616 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100171194 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084709029 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101341162 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079783303 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111000639 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111154347 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08427347 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110347506 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082338798 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105374806 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112463777 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077480166 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099933726 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08098795 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099458463 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091152589 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104024511 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091424469 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103734827 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100821106 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080752982 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.111339909 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082197991 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096871167 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081642895 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106288537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084740886 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101099431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082409843 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10581191 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103377698 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093509903 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101678869 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082816796 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103758797 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079003242 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101767892 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080867703 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105993178 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10309948 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080328561 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098857889 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08258664 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102823461 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083404567 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10273771 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083815352 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109968478 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100766136 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086065101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106583211 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07817781 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105390403 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082204062 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102427339 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099582258 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087986898 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105444938 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084702403 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112070886 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081564683 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103498351 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10227291 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081937391 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102148481 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082935749 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102912419 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081874341 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103992046 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090124426 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101817733 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104281636 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083657096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102658736 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090329951 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104388218 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085643953 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111099705 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105261558 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085155966 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110587446 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086316732 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107303376 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103401463 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084337166 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108341723 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08169439 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108802857 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082695411 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10513794 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103245867 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081139488 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101915108 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084441255 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102203776 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088721775 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104761499 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08098265 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102450665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080024806 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10512098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106064835 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090352147 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105868458 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085578247 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098443053 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079363513 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105356061 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09994733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085144655 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106391896 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089541565 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105148961 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082931231 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102014817 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11173167 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090136523 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107188905 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081723115 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106212425 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084718069 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105478259 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083226215 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103810567 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104080148 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088632002 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104009078 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082366368 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110743305 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085608839 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105484145 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10445587 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08442174 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10233936 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079210891 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10371751 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085122413 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109979338 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084088993 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103769082 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113501038 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082658554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102778764 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086394665 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102956601 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107190516 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079734481 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103578027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085242313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104172395 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078401335 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103006214 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08140604 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106017644 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081514821 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099648148 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113991086 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09323059 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106216458 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082231324 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103171414 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078253014 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099490542 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101130415 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085659892 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104158422 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093373588 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10243062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082187373 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099355454 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083062383 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107403431 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10501702 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082114922 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098386264 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082212151 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107102312 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088392427 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102099645 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082765308 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107234926 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105131989 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082899879 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106451492 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079971763 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106895392 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116072926 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085552131 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103700421 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089879971 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111690529 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083378297 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099547099 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10290994 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087164101 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103994553 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085003111 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104398477 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119049861 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087653093 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101641475 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082316603 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105923866 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083311031 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112501446 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084621153 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105705824 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107545279 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086594359 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112961755 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085743418 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112869476 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106298884 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087529425 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10255974 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083865846 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101917439 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081705444 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105464383 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103826849 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089750431 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112295318 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08207807 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116721432 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112785818 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088399664 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10018978 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082607492 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103248451 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078321528 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105068612 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080672028 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103007658 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101241513 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085846425 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103025072 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0901345 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105099064 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085037582 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103765085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076744201 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106103998 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084788364 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105129994 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099824341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08464625 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103960129 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087535549 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107442629 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083733819 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105326962 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084516579 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105392412 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099082922 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091580435 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102363578 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087391401 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103516965 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083889648 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105977768 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087361887 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110881036 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104651621 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086212217 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116787308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08553284 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101800078 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099496015 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089035175 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10089306 seconds)
  done (took 58.013365939 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146472387 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0807689 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098344359 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079117036 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114169328 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099456387 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080012013 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099467609 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081381596 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10307722 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077820815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099869993 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108816131 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12417719 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094064055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104562008 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077468374 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101328609 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098757505 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080530974 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110423986 seconds)
  done (took 2.909218157 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104685015 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121082171 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116263096 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119320781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090059442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116204506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11515808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115290882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098280567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112763952 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119310599 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114373239 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09131168 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112114448 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111164978 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091590739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119193396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110498642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115685725 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094510347 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113507802 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115642172 seconds)
  done (took 3.267230654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084481119 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102111658 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085064564 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098155031 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08314903 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098793364 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088498599 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102042139 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085850435 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102793823 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080841506 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10340338 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10422904 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079295484 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102570683 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082109804 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152180614 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108292608 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082268351 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106531433 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077424533 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107502937 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099114694 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080081052 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102433037 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088604364 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104996427 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081759339 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104089681 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082250502 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105345294 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080258102 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105866072 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103324653 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083320796 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102532703 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084123627 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103247939 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07916345 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101732786 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084538672 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099889579 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084256007 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106260487 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081467629 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10287263 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084242541 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104742679 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097746297 seconds)
  done (took 5.508280486 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103918501 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16058682 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086670302 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144708343 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12193294 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112177226 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087591372 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14281259 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102920832 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082185158 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124016697 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120804254 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103741918 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089446886 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111725734 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103897609 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085395093 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103998225 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108097877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084266111 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10927167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089877189 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121029252 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119322173 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108575014 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083588918 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105027016 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108583283 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097231837 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110209863 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110859099 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088999874 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120922462 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110534786 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082719888 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107732386 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122792903 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103808649 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086571874 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102224727 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086274748 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109396149 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111080819 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102133394 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10515946 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109915423 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083875254 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10190341 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118677807 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086193593 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113434621 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120720996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107676779 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086124329 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110452095 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120014955 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084583204 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102520304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086370427 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118800469 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102364102 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087732701 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119857993 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106546013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112009641 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099877632 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110841423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108280625 seconds)
  done (took 8.176181909 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09347165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112169104 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120563869 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120629034 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09084901 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111406287 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110842521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089235746 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111840688 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116826379 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110858176 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13427811 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08551132 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114686015 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110574309 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09067885 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111768112 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111370383 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090524618 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111041962 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111325171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119941573 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090797041 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120430202 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141628029 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105175142 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091388962 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112097772 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120784266 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110629929 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123381137 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090955781 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111505316 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121413334 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124859829 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090681946 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105288274 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110242204 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091170985 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112513288 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106002007 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100438547 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111439814 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106738886 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090744801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112500598 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120917246 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123982793 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115298045 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096522455 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113123168 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121273921 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110908856 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091419672 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12080074 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147804529 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120504926 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121689886 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111374176 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099921204 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121481321 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12903703 seconds)
  done (took 7.709336639 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107637764 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116168009 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118306216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09985991 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083170092 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109149401 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081992466 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103471472 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113554438 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094952108 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119201515 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109979839 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091480974 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118333412 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110431574 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112962248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088460103 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110587559 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115301906 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087643758 seconds)
  done (took 2.954995966 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094158522 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125518533 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084382759 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113302349 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109370206 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091270661 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108977455 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106646278 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086433121 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108019298 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095911962 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118903308 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106474689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090481991 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117774791 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112872829 seconds)
  done (took 2.537038671 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097660263 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118175126 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120691607 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086327803 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105347695 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080497283 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107080532 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101253741 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082035169 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12158159 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084238376 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109697019 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104544828 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083622353 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10196415 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086916386 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102661385 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081978866 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106895672 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120457906 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095629122 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104775672 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106061896 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087520786 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107341639 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090131285 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108275928 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103659655 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083189643 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106092466 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084288857 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114442813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102291502 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083770904 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103500279 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082491395 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107018164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083989821 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109400545 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10490357 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084410778 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105413728 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083975133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107581217 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080526969 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107221437 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100830657 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092209144 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103757737 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084710268 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106854184 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106538799 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085926754 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11657808 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087782715 seconds)
  done (took 6.29440534 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098980111 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10947041 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080144269 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104523121 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087149598 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109266727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108767552 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089217271 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108166287 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082295088 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108224166 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089276331 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109288505 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109046204 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087696364 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110515685 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080125712 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108179068 seconds)
  done (took 2.653207604 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092306297 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10540471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093097641 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107712115 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083870486 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110124033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079255404 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106267809 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102930124 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086040419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106240627 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08746327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104348139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087510219 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106982159 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084807649 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109124396 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103689144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085915623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101285432 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088284974 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105474702 seconds)
  done (took 3.009294733 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119287134 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12634652 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091393143 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233676921 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103459956 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132980996 seconds)
  done (took 1.678984141 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110382218 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121936202 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105784757 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107769844 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116415962 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086906082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109568314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109056988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11845441 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100817882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109748827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119114129 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11888298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096170148 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115789684 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115439637 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108260955 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088226769 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108041834 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129047234 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088270672 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11826333 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108507047 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08636698 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10934198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117221633 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118496484 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121434259 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087660814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119262677 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114979414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087383216 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119821344 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122628636 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108180292 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097661668 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109321451 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129142401 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114186764 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097530435 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110594623 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115100607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097420389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114281181 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119439266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10819449 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093642637 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109601226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10840794 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135659323 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093733036 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118761049 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116422393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11838332 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098063627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135967364 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122179379 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118764422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116150735 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12282618 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117280931 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094678127 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118215242 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122942625 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114889692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096107824 seconds)
  done (took 8.185351804 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102498935 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127740234 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108823867 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122344654 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098155304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109953709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108507851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087767677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109602291 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107246707 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152238265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088964118 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118361333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117385019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08612957 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109582788 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1088464 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117884766 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086749443 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13533854 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109880521 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117753695 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117149192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097202446 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123792986 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115544502 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107695196 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08811138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108747025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107631565 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094418012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109499234 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117862104 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086258654 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119035471 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109371607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087827177 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115497896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109140361 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114919664 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09665978 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129666373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109056092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108446344 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10092701 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10999372 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10845078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08748849 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110446544 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107251357 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102238189 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123720378 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123075521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118687168 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10885927 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088875547 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109399466 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108106956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088466255 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116262796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118810518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085865903 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136062823 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109506746 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10880771 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119031012 seconds)
  done (took 8.079186634 seconds)
done (took 156.328613917 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229376267 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203589979 seconds)
  done (took 1.308722578 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087998739 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137246721 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095970761 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169803312 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084988275 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142591941 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138363638 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098506034 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107442147 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085731708 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107394683 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087385729 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174584063 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085323104 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10827365 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107643545 seconds)
  done (took 2.703017144 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114535754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255150864 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124180255 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105107572 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091170662 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110369945 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08444912 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112462811 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089317159 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105694008 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088200448 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108031457 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084153548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107826895 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087730151 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110664227 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104406219 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089882289 seconds)
  done (took 2.856493321 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113735478 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150882223 seconds)
  done (took 1.156878224 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243477201 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163429897 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232158776 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.472846094 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.273061974 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.359233763 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.204811196 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.216416388 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160042055 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.211579825 seconds)
  done (took 3.422206349 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119429055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179240756 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317886714 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156081656 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106761837 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127918327 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15697153 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13146138 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.126728024 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101059507 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123727029 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119877891 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138303271 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094059751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117221054 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117847552 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12001423 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115666879 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115494551 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095643712 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138517287 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.082968086 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116590477 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114485254 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097021164 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120539801 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106468132 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084999296 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117251366 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093028169 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115112917 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126875575 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118500111 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155092646 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123148811 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15759084 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118295151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091677659 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116269451 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089820184 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120201539 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118801125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125052817 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098491363 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107387073 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096913727 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107841225 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083671192 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115479944 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119018229 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092575965 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114889636 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153835398 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119893955 seconds)
  done (took 7.428580892 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790398695 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155798373 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090148792 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881779104 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134607264 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103912371 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775188778 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110283385 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26024433 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751656267 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132790291 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119448787 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203752263 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256992477 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929641817 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286776166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.639712367 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126619548 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152144996 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153067209 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11765743 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113941278 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130508613 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428866288 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116863643 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088429578 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11773969 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118379476 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15837569 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125864636 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091851944 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199841182 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246916474 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203139145 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094102896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111931672 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088040781 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191050223 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267390512 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193195243 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180148656 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109493826 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088397419 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123755889 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131967976 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085630408 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184951412 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175452932 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169718352 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115246534 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11773443 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097677633 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121207649 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164169712 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122839673 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310948801 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314270869 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088551309 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122026005 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125618071 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240762475 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123806142 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224366267 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137975474 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211173006 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090405068 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820134442 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169502093 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110628557 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095498973 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120205077 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116147516 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098200244 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166421883 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405035313 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123640943 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114026281 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089026403 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228270493 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101304186 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11223318 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161330316 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116186935 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120635104 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101972399 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123699898 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167713942 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248299739 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104412576 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120237117 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114761624 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101012216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116949472 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213883757 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21714089 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160484099 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234724681 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099637073 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186370189 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168228203 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118692483 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171395529 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118957858 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100244736 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122304765 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215430669 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143990703 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122765377 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092504212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118242094 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147788219 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126882801 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095605738 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191931472 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456786224 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165484365 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109515097 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12791127 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096675232 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184036735 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096242366 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264327599 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122321313 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169050472 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119715457 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086609276 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121152822 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163225628 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122269344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121047569 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100085588 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12002668 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2345674 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217955586 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121354735 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219595218 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183829274 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119003332 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170152321 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121428519 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167568138 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119767942 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119820875 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094180313 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815702157 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123570656 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09723221 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11599148 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186450855 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111057078 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102548708 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125466582 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108205514 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791508342 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127766501 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120754193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100237689 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118516404 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120032796 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095208401 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115920055 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160564472 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228428439 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119644482 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119134651 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102543789 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181704329 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093858088 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125006452 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123371413 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102015247 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122683868 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114492222 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101584834 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191672934 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16336187 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21814024 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572843199 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112676656 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124722617 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225402816 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089419802 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288116004 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118174756 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222334454 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164127003 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097549332 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320035372 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186685171 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186761264 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10442263 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195158737 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086899967 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119062232 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164094563 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111324523 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094451218 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184797301 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102016168 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122881403 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961470072 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088322552 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253463811 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087270112 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191435719 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095947416 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120168899 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287329145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090387102 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129239081 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162266945 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115826213 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124260229 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.843899428 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124115737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12099601 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095488644 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21993374 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163156677 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120240647 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11903506 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096168857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185172194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21165649 seconds)
  done (took 44.054535043 seconds)
done (took 63.812652922 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278915138 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216976048 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270385423 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170587336 seconds)
  done (took 1.93052927 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173263238 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149692106 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12149684 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108410582 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152147928 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084701172 seconds)
  done (took 1.705186749 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36467592 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278105971 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243467787 seconds)
  done (took 1.804685575 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289145639 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247312029 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472690041 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325658489 seconds)
  done (took 2.375729967 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208251695 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132751517 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.114301605 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103705623 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198491383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246227112 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142908168 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201860645 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097546743 seconds)
  done (took 2.410521911 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198847722 seconds)
done (took 11.346848923 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.165141084 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.301338141 seconds)
    (3/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096007797 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.126167254 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.247251853 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.191512688 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102698119 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.172418852 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.252268753 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190709899 seconds)
    (11/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.163621558 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.212344684 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.259368248 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101878694 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117504249 seconds)
    (16/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.16881865 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097036721 seconds)
    (18/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118491695 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.214110024 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092496297 seconds)
    (21/309) benchmarking ("sort", Float32, false)...
    done (took 0.173255066 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200469159 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118434512 seconds)
    (24/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096513547 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109394418 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095686901 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.176628692 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.189736871 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.215082333 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115052192 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.187463919 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.199667181 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123547794 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140224469 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.176217984 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.12145778 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094389058 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140564712 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.137910723 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118871549 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.169105288 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118355253 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204826661 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213810711 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11535566 seconds)
    (46/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.234216654 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217744608 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122047264 seconds)
    (49/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.247762724 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11763327 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113330732 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112102966 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214264341 seconds)
    (54/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096567279 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124253199 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090208452 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135310857 seconds)
    (58/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146937508 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093163247 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119354281 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133417788 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16706606 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137273028 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120557257 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.153332818 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.12034567 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087696322 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224385484 seconds)
    (69/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.243214605 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.133468762 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109474322 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097179717 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116665913 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09761821 seconds)
    (75/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113718011 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133839115 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185961904 seconds)
    (78/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.152390967 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.086906393 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.2237841 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117043458 seconds)
    (82/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073126837 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179225484 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067561102 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127579165 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096049787 seconds)
    (87/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.088907002 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066694298 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.08578438 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110644647 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138186032 seconds)
    (92/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.181645235 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.232257947 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153386491 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.111534547 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066940907 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121326652 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197886063 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181319534 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112599433 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154080468 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148041448 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187090632 seconds)
    (104/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065671991 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.0904385 seconds)
    (106/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102777903 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155335276 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066483424 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138942924 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092003878 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121413121 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093003015 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112510076 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120470428 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067465777 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12352406 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069070469 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194683092 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094806972 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092211072 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092454124 seconds)
    (122/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066161046 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.139154746 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109474227 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.328840531 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090698312 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06888176 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196943658 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140703442 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.124929048 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.191828377 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119629681 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091596843 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111196694 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114096598 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110538778 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091082944 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068257939 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117254128 seconds)
    (140/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115530839 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090568336 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089705135 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112321134 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076469666 seconds)
    (145/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114658027 seconds)
    (146/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088626876 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179349071 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092004405 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.18976121 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179037064 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084310979 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118870173 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.172459773 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086207399 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090768695 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066457458 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.20604097 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085839902 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150255259 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196464889 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067733681 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066095447 seconds)
    (163/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11871753 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 0.187766912 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110027144 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095005227 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.183996849 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224099517 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153528049 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067896278 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143708074 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.116826329 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137955962 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078147464 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.187950104 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137415368 seconds)
    (177/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067908993 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.165283765 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111291197 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164584829 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 0.172671034 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086910116 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118073249 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.084482115 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110831016 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085712646 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119647535 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118900469 seconds)
    (189/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.122718961 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124713954 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066331991 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083806088 seconds)
    (193/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243105948 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109444365 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109352705 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086523415 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171296561 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067232485 seconds)
    (199/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091668605 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114870302 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.101233958 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086469238 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.089987559 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.149255739 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155677881 seconds)
    (206/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.140363146 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095400318 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11850667 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085451984 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116636503 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088206762 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217376365 seconds)
    (213/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.090565089 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087224085 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112533154 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.161035257 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119181711 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091604321 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09226139 seconds)
    (220/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.122213937 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112284775 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067433083 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110209814 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094261632 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110437739 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066927196 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07474778 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118306346 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123389592 seconds)
    (230/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091897802 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.1219177 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086769082 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101738219 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.18844943 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068637354 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066482089 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111873308 seconds)
    (238/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.126160409 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091130951 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090118144 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.141129316 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100046878 seconds)
    (243/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118693943 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177798814 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067772482 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110208617 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08805891 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116992193 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068593032 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135472884 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067917755 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092330127 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.136091754 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215886387 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067464039 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090991442 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087169637 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110741303 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094850267 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136074972 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068968991 seconds)
    (262/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124460702 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086091604 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.136122839 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066162753 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111139612 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092875506 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092301806 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06748278 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145888227 seconds)
    (271/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.126061818 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110609935 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093251341 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11960332 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067413996 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090409455 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.159500248 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109880329 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094087779 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112008576 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066139688 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11257921 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082692134 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068081293 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145832404 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.153317577 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068279509 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138984036 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069477302 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133963275 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095176914 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109702003 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088153883 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110642136 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067150912 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066663731 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120517368 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066045187 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101694259 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090080541 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.136442665 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067017167 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116429139 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067629557 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116692312 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10581527 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091846763 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134141848 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.21821591 seconds)
  done (took 39.919856272 seconds)
done (took 40.844434117 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101794807 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146971076 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095766341 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137222874 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123934164 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091025181 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119076618 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098180233 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124375659 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125469897 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098146364 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094216208 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097064208 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121155152 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096864194 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140562236 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.1245658 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093765477 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120164238 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086004744 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120766402 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086653273 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113795435 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069841491 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123132696 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094078235 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118321377 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119399068 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088338151 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.1102042 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091567365 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117486789 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086870394 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124878477 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09277714 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119546406 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096798407 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122812356 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08741355 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111875068 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118484547 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088485252 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118031517 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094863084 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119485018 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09354848 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122523004 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098245626 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142952672 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116809408 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095643421 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122597741 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094956825 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119071807 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089755742 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121092609 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091469397 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140852948 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120782625 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091687621 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121062413 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09506531 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118002096 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094783104 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121187316 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121782982 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099313286 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116238797 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096693909 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117527932 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086404302 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120253703 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089358908 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112475727 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095138525 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123316945 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109180359 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093946195 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117797007 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093017832 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111659402 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090203362 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112865699 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092970282 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11423262 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070478006 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114667266 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093833408 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110269257 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096904476 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117147006 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093881413 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114144435 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098498011 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112191439 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091520764 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112740415 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086866163 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11456842 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09039894 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112619497 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088415151 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121266707 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087717871 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119727485 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12306436 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087667685 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117946769 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087008967 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109869825 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10090565 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122332548 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086179015 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118634668 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085698132 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120108944 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086396056 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112524487 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086583552 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112108383 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092179281 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112927211 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113270606 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096007624 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124856444 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087805828 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115321961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090313443 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11147231 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092360667 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112423798 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087429562 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11446416 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078172193 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113601361 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088250322 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119298623 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090372751 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120276868 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088558028 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121590338 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090509079 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118812713 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091547479 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112457821 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074048036 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118084399 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09001914 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114887851 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086691512 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114657642 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086414963 seconds)
done (took 17.056126327 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088215515 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185725908 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152458369 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143126137 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106835203 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11323332 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122149902 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119411269 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114720794 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143496465 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110081114 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133623042 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148355037 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088222091 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11299939 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091020105 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114255405 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102178438 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148005467 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133889472 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166347301 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085999204 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147702807 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136783186 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119922493 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115468059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112563844 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090994322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115836799 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103303553 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134494049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114311194 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08985629 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134773944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104887639 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121121429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086087687 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120299426 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086857952 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113802502 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141539128 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133002799 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09386406 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118270424 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091877205 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114619211 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089259787 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122997804 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097914949 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118346341 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125802068 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156949647 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091466363 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123479576 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086654176 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124700634 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121770447 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090848242 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11204026 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090458198 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112075783 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091393494 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128863256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143403806 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09271918 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123139869 seconds)
  done (took 8.688125841 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105855494 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140653527 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103997963 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131620682 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111995033 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089000732 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113744845 seconds)
  done (took 1.785162349 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089221322 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134388718 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1297084 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137235424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132163919 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109759904 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124559745 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087953328 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132754839 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08897154 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136760379 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153128384 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089691236 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122126306 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138369251 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088596038 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137721702 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08783013 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117431668 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111273016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118268508 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135276702 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090538489 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114339859 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103562078 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114680905 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162323127 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094243186 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115570002 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09185757 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112978781 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167418499 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101774044 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128126872 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0882573 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129241576 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129535715 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087497557 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130841223 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093350573 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128828243 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089065594 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116233816 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086456019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120499228 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123499673 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090240058 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114260327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091982707 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13459824 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089978031 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127668478 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088713064 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119804568 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090102931 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121955816 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123340454 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090514631 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134322792 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090436532 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132977456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10435486 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129969294 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130020367 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091730544 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128479986 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102369806 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11865522 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08960193 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118351736 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13040003 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087340633 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115189965 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100215573 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116185059 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112431974 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138905107 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089196288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126079187 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113983625 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089621592 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114644616 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113366238 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119523732 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089148348 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119753335 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091156374 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113417016 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08675421 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118515043 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086725972 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116767058 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091635324 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115929924 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116390274 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107007509 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115216828 seconds)
  done (took 11.90773756 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091780436 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114507752 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09180693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115462003 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090552873 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115603103 seconds)
  done (took 1.620924308 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114732098 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119789332 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103233111 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12180377 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156660145 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10370477 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130445776 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124027401 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107608054 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129006957 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129407864 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105423556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136698233 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121669161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104159387 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122822119 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128769349 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101512303 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12799709 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096234019 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138101781 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121517232 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096339127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133636103 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117812946 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097312236 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126336253 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102360483 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129050669 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123192973 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096170221 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120333166 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095890729 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124525579 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130482574 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096143128 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122177577 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119391931 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101889599 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119386907 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10392213 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123365741 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12651013 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094137882 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125111146 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12066666 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095497807 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126111863 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102790924 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120084917 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119796003 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095624995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118966568 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093717153 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122800923 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12333971 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094855889 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130892994 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0955037 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122972226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118009091 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093625454 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12425546 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117608472 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106527799 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120275944 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095473499 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123161769 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121502927 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097207345 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119917923 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093340344 seconds)
  done (took 9.288966483 seconds)
done (took 34.277060059 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696313668 seconds)
  done (took 1.693980632 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.722133955 seconds)
  done (took 1.722253215 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.198592671 seconds)
  done (took 18.198276231 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51406335 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.594231453 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.821291315 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18285907 seconds)
  done (took 3.11486043 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964935175 seconds)
  done (took 1.984353655 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296495348 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2592016 seconds)
  done (took 1.560448448 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781904224 seconds)
  done (took 1.793778063 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.35810429 seconds)
  done (took 2.364377222 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334557548 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185825067 seconds)
  done (took 1.535014082 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549680703 seconds)
  done (took 1.56400522 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.94855856 seconds)
  done (took 7.968913548 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261679984 seconds)
  done (took 1.289120421 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302864395 seconds)
  done (took 1.319375484 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.581084825 seconds)
  done (took 4.602936697 seconds)
done (took 51.721894499 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09929478 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127479471 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102656891 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125021818 seconds)
  done (took 1.46795006 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101685723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12155849 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100702167 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121796988 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126012979 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096608017 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123939014 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100540671 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121534073 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095465887 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122221123 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119432974 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100297062 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123768381 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09346397 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125038646 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099508439 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122520667 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124974989 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096805594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118974322 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097994011 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125547384 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093791063 seconds)
  done (took 3.697754526 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10110294 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119320729 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097301507 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118700083 seconds)
  done (took 1.463989972 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100810268 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143048888 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139022726 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101351356 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143189104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135528414 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093554424 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118160339 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095261118 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126565653 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091196209 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149735978 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138297281 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099802764 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128284063 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088606909 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118433358 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137392031 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09967987 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128033313 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092712583 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126846408 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089695811 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140114319 seconds)
  done (took 3.847958069 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.15834136 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152317299 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140888088 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094970008 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157474388 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141870431 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088908252 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142032213 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087860981 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132884389 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118979963 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133724583 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129268761 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087880249 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115166954 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088017492 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129634516 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131556143 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092062201 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146231815 seconds)
  done (took 3.500973284 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098346976 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11840614 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088482599 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116639197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099935788 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122208025 seconds)
  done (took 1.673221394 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091735225 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114517059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091575758 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114182496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095674183 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11625752 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089161664 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114767201 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090308379 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11607804 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089367974 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113664075 seconds)
  done (took 2.267294519 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46295997 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092994976 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121473913 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113770481 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096696289 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116128627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103362172 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119862427 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140039112 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089729626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115534013 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092070735 seconds)
  done (took 2.693275742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238747193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12643445 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293207521 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192810827 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160735109 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172072995 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153959992 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16752038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225636428 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159113699 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211127816 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22264538 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127055701 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219826566 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111745635 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145597647 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227717269 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220066117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155856512 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233795601 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202887818 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166371322 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179951222 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153435931 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139541786 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170387233 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121752743 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103139677 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238895852 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180699605 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219207437 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166080932 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146877896 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216896023 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250615107 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2249559 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189327892 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136993369 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.144991952 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165280557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270669034 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139735714 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238627129 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159821647 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105951203 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22263733 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169432173 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175867147 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151392905 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138456905 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200075246 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242845273 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195437606 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138599273 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164837215 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161381062 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16936517 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152533038 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256234572 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202395703 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179867014 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122053489 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145796003 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192751111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182951339 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167864082 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208657411 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145874367 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196617091 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187611591 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168694208 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219524501 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18527315 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140610436 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17132285 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17689451 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173175353 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258811705 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177448952 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123025537 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171387032 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151478123 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131282188 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169170152 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126250674 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216082789 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151756868 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135446605 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163575876 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16262004 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162446746 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199695122 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221325498 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120744424 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111853 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156899614 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154851716 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19247476 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140175953 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161024759 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162066584 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129909303 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179616164 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09764606 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176280517 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119324392 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178106148 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186816997 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128100201 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158201509 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154754478 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14871883 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180782612 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200757318 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142835252 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133063342 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207686024 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176240145 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151095723 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180996431 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228648903 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116642924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150599249 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227391793 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219726088 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141242396 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23029157 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154346087 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108588368 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134658363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179338781 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158008039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160990272 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132425482 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182766838 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237264935 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099448595 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139073755 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189349176 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134364854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131297313 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161140346 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147895677 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112647654 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147862781 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1523178 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18163839 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178027741 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153510687 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167007494 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151878111 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251193853 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141653275 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150575524 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148917307 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093797617 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222386949 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19936615 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130802848 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204784476 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172495549 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156429698 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171226602 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136016841 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17925254 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129414838 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094591781 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220639999 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166380642 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162649181 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196391477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155863784 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183709335 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183236837 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20006087 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176728118 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164046836 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16010661 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112545001 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160094073 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165825175 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124940768 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142488119 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106485933 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157335627 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143674362 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135548361 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201469328 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198638867 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121877447 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159381176 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150791677 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181198225 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129193343 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179769492 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177184327 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148231417 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223813037 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193461891 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189528931 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144343214 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231770482 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094982281 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124605722 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142353267 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172974352 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106555852 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136810726 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166420257 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180051676 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212408183 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178206572 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163290488 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178359932 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192451139 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094118396 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168983904 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211407089 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176321657 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.159416397 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140697934 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152867444 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175729562 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157988251 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258817967 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167719895 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177859151 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239065266 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148168467 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105973361 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151912407 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186221229 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155307239 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203051737 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121592539 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141893923 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162908996 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133763324 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160653468 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184893805 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163607342 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220611995 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149427739 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189986132 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127381351 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167557022 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159234621 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165548964 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082243874 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17704958 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233133759 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147882373 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171998505 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191910967 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132187693 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179484222 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213377583 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225641149 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137789826 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15814216 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132530128 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164925575 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200778418 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178960258 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161232243 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189433754 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158575988 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109341949 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140789272 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152620002 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153670439 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104833374 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148829026 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.204926901 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112203165 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218042221 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161987807 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158359383 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171994385 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121680442 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145643428 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151675865 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242785147 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175301056 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215498045 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150511985 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180054095 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234435208 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098068411 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133621098 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133981308 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179078665 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135577221 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190413512 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.14685349 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130072663 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208917117 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193517354 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139930643 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092349503 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156837798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173557883 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164788231 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152250688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159765487 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237147604 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115435374 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134591493 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173227893 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157837921 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146573118 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199161763 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079404669 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150420973 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128788156 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105871712 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166086403 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238354807 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13671858 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158738506 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195790084 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169984929 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164657475 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148748096 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122729703 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16685215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229859754 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185866062 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13219043 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157820672 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178006658 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196443278 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160877897 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140543626 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203508726 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220266188 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201117063 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142640192 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169725028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168235874 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158018477 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186668103 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136772955 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20664449 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135983727 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2256312 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153634156 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142908916 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177841654 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120776941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146009909 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215016489 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175259909 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107814376 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1345881 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168062817 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177271672 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155098719 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128566846 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181992711 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125976242 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190398829 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260200604 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133838747 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153571815 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120547998 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136088734 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158216845 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159705267 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14182816 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139355357 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233969308 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13481464 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191435764 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230692751 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172966789 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175402577 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145642625 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693739926 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130026965 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195917906 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156731317 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205639268 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15259933 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171090989 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158099982 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168283519 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223980031 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160450527 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231014166 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193404797 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176678474 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133738349 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15871599 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163227211 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145955324 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154392106 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168104942 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160884976 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153324536 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178987358 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169732319 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134367368 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111461118 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228757191 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155820681 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189417523 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179995062 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139453172 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173351668 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186867085 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135792192 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181220828 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238056331 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141520742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122363712 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135751726 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156246085 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261111006 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096069392 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23147233 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176867306 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158924872 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166254897 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14823848 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188823818 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157766373 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206063601 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145521056 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160549997 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128059809 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138254525 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130712773 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15505268 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166878572 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147431484 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159468884 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138874803 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192492809 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124929553 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144923543 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155480967 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191932225 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241166879 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1113238 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136431891 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163011758 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15113529 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176539229 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17804917 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137146116 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10673152 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138620363 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16095052 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112794566 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157168607 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157304101 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166599375 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233362618 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110318813 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280081649 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141029851 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15392951 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090003619 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132848613 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150415047 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119022081 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158642308 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152031121 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261381311 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146449594 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105546072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149170836 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127331912 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135933413 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138716801 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194219896 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177110264 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145896516 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082411724 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158660202 seconds)
  done (took 81.327653525 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169673109 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13357393 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148958309 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204317181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178964291 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270274738 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211541025 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256100889 seconds)
  done (took 2.68304128 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094089349 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147832186 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153543118 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134748074 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092465762 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119405206 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.336072302 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13273541 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091767167 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142311877 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.149644927 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.119608151 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.514546429 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.120052109 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118900133 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085056942 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118348457 seconds)
  done (took 3.776514024 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.463874161 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722676633 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.48215436 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.127492421 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.150113541 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.137017596 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.788296664 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.216056505 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095568368 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492655653 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773597084 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.183594646 seconds)
  done (took 18.745863821 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100042024 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.12002784 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108882453 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.13547463 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096636945 seconds)
  done (took 1.676034857 seconds)
done (took 129.836682543 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104733089 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406503429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071605857 seconds)
  done (took 1.630299854 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108851865 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136947466 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109772652 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136626853 seconds)
  done (took 1.62123896 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09916543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126666739 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109307044 seconds)
  done (took 1.458937195 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323578436 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192471417 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.143973152 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106997093 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129483076 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103837073 seconds)
  done (took 1.463627 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097616154 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127610278 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097623339 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130585771 seconds)
  done (took 1.580944343 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095023693 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070934856 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101184717 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075078576 seconds)
  done (took 1.465228428 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113747044 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13271557 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103625468 seconds)
  done (took 1.474414648 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130288602 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139400568 seconds)
  done (took 1.39539861 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105908317 seconds)
  done (took 1.22620024 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118011957 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169887955 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189242035 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164494067 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229937178 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166305709 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141024363 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113412217 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132908644 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143830454 seconds)
  done (took 2.695188984 seconds)
done (took 17.898827162 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104047275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419100441 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413104509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117398625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72224764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380940492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03097702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147167372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165933265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09266289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140346247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672423233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061373596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379689166 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018565661 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.473432428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705031923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093299327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119721656 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093961186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016558339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09241158 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122305339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092462047 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705189064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425934242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095690125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.470838719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093777826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126904534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382797965 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123775824 seconds)
  done (took 17.214562495 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098273766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174379103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097852888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139777633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124265137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095274389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124520046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093460501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179947533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12370927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110148596 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122683078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126553266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096432075 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142007646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093287251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126768989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092689859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123379696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121843144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113272084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121004573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094657111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122300697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094231776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136317828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122604153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093929434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120580267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098938331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127958557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094354789 seconds)
  done (took 4.874158337 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142037272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183540532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129418142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126710858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168884512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124581601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199089873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118313207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183875822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124170634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139801192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093322481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157679325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122784144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116555643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121621895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098867065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123276698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093378732 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12388101 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140563897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094009906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122285002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094635269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123782525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108173987 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125109261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121025356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094299568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128506209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100177555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124469922 seconds)
  done (took 5.203538054 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098039055 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126403869 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110053513 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139511312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095861374 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12625632 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097170771 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125256565 seconds)
  done (took 2.048703049 seconds)
done (took 30.463009681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112794019 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12670401 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10734448 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135924184 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102629396 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132885775 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090996264 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135244899 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13354333 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102580077 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137305706 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092170915 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122666442 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092561626 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135286403 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097448764 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134060862 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102270018 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13418116 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131960384 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095012435 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133699158 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103281297 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133756366 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10341341 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133884895 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13812885 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100271946 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122851238 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09470363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125042491 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104233303 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124292675 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105187972 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127626774 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096915407 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12416893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094377825 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134046647 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132274885 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100309635 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132744329 seconds)
  done (took 6.045458226 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109023081 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139767557 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105567266 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081319818 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118282248 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080525152 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138749233 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079371417 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111133306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109793492 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075217653 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10776391 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079371246 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101271601 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078374498 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075287032 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108846834 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076471565 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076854501 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106914597 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080547642 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072480701 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109239781 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079250166 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07429472 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111458616 seconds)
  done (took 3.626183051 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101251874 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136274841 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112819265 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18454659 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16178156 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099379381 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133493018 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141004728 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109203917 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120325296 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097900462 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149991186 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110551646 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12950494 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092009392 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137628424 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136119771 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094920232 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128323938 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114361514 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139848579 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102932342 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144936282 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132309351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093363907 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1226166 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097456912 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135300872 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097849329 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132040169 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09729023 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125941024 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12287692 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105619041 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126482567 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095106994 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143536863 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101705909 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131499711 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092280916 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126398377 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121723337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114098656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167534535 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091906471 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130435929 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098968017 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132847703 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120765147 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111461898 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130993269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09189067 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12621412 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091768679 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122036142 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105634862 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.133933561 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123468325 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103765586 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124993149 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105599435 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126309816 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108373758 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122401508 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09920607 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12172435 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092727448 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120913099 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143670706 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094567655 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16433733 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092560299 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124995121 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130158703 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102173571 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127458325 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092948499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137215348 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102849076 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.1264209 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100773309 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127097372 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095076609 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140320168 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123486962 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095999499 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122158286 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100683927 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12478691 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094148948 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136435774 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092133875 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125889455 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109266072 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123118444 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122422752 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100939664 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126248212 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092154037 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135684769 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096938356 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12369627 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130795908 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094369037 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124731295 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10414379 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126600587 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092404095 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127430249 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100131534 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123826511 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093868473 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126480449 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093712103 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132664908 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097357564 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127646946 seconds)
  done (took 14.894600051 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231814259 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215427433 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.237465732 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263028632 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135993544 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114918625 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212107755 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156482024 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124166995 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160442246 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161966875 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180805425 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139386996 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181262617 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142686276 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120870103 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113231071 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167506506 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215786993 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291291364 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112673044 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.1327373 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162791049 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160745732 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105613978 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134869713 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139966902 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105916059 seconds)
  done (took 5.779846775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108005174 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15721881 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09796361 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145499952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148682196 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092457362 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128680434 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093451451 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137523463 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135858781 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093357515 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12949546 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100296867 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133321313 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122677778 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103155231 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132939404 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094877604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126739768 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097266864 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130535192 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101883791 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129107332 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120949476 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104355326 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121225317 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086867314 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142277948 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120994644 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116248646 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120850221 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099584937 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133554915 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093048541 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123491983 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094504354 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125945557 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095601492 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125270355 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091578914 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122997841 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077674725 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122303729 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135543864 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100187075 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079313152 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129917956 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127774295 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095303597 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120278809 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096809569 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125121613 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096800404 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129931049 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098797678 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12444938 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096256106 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116442849 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100329631 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125157788 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085139671 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120230182 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098339802 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11846853 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102120809 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128010109 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091770056 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126417877 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097039398 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130642948 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095661444 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128203235 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091164179 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126555947 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095211262 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12830855 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125470362 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093565188 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121553295 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095463523 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074916507 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123968272 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073644097 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127095521 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090648152 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122135393 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094996144 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130666082 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137454342 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095980461 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132523964 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093828018 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122574841 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096646898 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113664174 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09606653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139349615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140491299 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095261822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121450436 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106349619 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126017497 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092816766 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106690848 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101434707 seconds)
  done (took 13.001238034 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128022109 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153411234 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094703382 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144411579 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154877751 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156336714 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100998004 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130601969 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095370554 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142204023 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093335225 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131726758 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097255179 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138446236 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156469707 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103288485 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125365465 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106695864 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132197879 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170013017 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111734097 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143059047 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10720909 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126294451 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127972786 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11191227 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161498396 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107692003 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138521135 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142808828 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109246032 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162301043 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142201815 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099862014 seconds)
  done (took 5.520871396 seconds)
done (took 50.000313084 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.252567732 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.464178574 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.234454124 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.235495702 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.246200439 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.260273862 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.24235958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.234715425 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.891982596 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.231436867 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.483169041 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.919015045 seconds)
done (took 60.858482844 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.271797831 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.371046699 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501437919 seconds)
  done (took 4.037281998 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.591317015 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.189451156 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.499782795 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.235067789 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.235351948 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.521967976 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.978606491 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.591278088 seconds)
  done (took 28.415183868 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.244423475 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.635558808 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.001762022 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.005808212 seconds)
  done (took 19.053571494 seconds)
done (took 61.534166707 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.23000011 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.264198245 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.253368163 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.215893068 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.353804107 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.285875522 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.541200879 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.253129756 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.266416839 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.216601166 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.259367929 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.264070183 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.238158289 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.54322847 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.248033503 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.23732253 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.31558654 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.795523197 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.649526085 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.241469606 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.264294003 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.263019993 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.265727097 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.241961643 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.263970307 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.237873641 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.237892633 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.245090168 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.899961641 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.244296722 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.249216504 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.736401202 seconds)
  done (took 191.989047925 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.237137929 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.258081297 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.360814981 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.286366053 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.752844924 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.438085455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.372897178 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.811517383 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.262144914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.259301192 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.477253494 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.241515936 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.560202517 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.25635788 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.246501206 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.346748128 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.559004653 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.616452378 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.257300906 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.489783124 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.243286317 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.503890844 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.437488339 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.501556956 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.295252826 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.302329071 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.265780817 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.26297121 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.450202238 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.488029376 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.272729196 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.280390134 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.875134941 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.101395431 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.265676658 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247586985 seconds)
  done (took 152.051337737 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.536675311 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.238760552 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.240426863 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239478129 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.272471053 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.239828568 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.828190792 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835330131 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.743936852 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485169763 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.30227631 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50029211 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.240286067 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334536147 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.25098748 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.240571586 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.241322308 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.255082447 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.286065551 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241260091 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240695048 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834955628 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.255937673 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.399743852 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.24557854 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.24057429 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274097166 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.631699894 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241189363 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273550743 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.566182748 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.294412893 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241309105 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.602623153 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.545621116 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355363997 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243407997 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275477351 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.241903981 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.51439197 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.242674402 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243474106 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.241371944 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.244093688 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89101106 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.246595355 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.821330198 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.242768221 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175118523 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.24238213 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.242168068 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.333968403 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.825568963 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.264622722 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.243858436 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.244873752 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.242552571 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.242922874 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.275916673 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.149250446 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.364787535 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.261933173 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.246065998 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276844532 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.242864714 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.243072281 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.489875558 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242127405 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.501497095 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.300342025 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.350831293 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.840959204 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247531831 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339351546 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364702746 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.244090604 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.244605193 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243809759 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.243948772 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.352914613 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.244356404 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.669931751 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.250652201 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.246549319 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.304602044 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.340291912 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.244155511 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614671645 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.247736858 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.244637484 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.9767485 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340077501 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.244996165 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.24502635 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.244646203 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.67337502 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.244558384 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840006584 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482886915 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.248725776 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.378772426 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.248366598 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.692780389 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.81772944 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915815884 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.250338193 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.355470831 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.249220025 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.24722362 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.244989457 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.273833819 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.264988868 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.304079247 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.246030445 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.644198745 seconds)
  done (took 351.092290254 seconds)
done (took 697.833483383 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.949165345 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.900799263 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.042482667 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.912873567 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.902069657 seconds)
  done (took 10.883861769 seconds)
done (took 12.057478177 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.446091047 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.446288726 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310904893 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.450564814 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276398917 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465829895 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425884744 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.266043202 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.354376649 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.333685077 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355781628 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302983523 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275348621 seconds)
  done (took 18.886167376 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570972682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.561550037 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310404545 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577729197 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286905965 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.569325329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.448890062 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.460377081 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458315624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282863207 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.260995264 seconds)
  done (took 16.965721971 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.582015844 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571529699 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.314571885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578017774 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288389054 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572159666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.460001477 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.468563065 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.466037492 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.281158802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.260854474 seconds)
  done (took 17.020871837 seconds)
done (took 54.047210268 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.256523151 seconds)
  done (took 2.433609822 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.291755144 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.4568859 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.278848308 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.26172783 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.256990347 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.258297718 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.261604727 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.258762852 seconds)
  done (took 11.504446094 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.25664097 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.253797763 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.256896264 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.256086992 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.25464835 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.255173725 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.254619049 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.257229314 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.25534985 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.25466626 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.258444435 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.254441871 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.255086565 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.258022941 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.257764365 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.257943097 seconds)
  done (took 21.275691954 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.256972073 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.254485712 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.255310285 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.25651633 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.256347713 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.254471933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.256778742 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.255092429 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.256736227 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.256467034 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.257101843 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.255077297 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.256967249 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.25548439 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.256419472 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.256712664 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.257091907 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.256826011 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.260189303 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.256213427 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.256659888 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.256166126 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.25702574 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.257662777 seconds)
  done (took 31.337454069 seconds)
done (took 67.727035833 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.472494577 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.112952479 seconds)
  done (took 9.765436693 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.259664633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.259682906 seconds)
  done (took 3.702083899 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.260027365 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.259282131 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.259399165 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.260476879 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.259341518 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.259011634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.259628556 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.26010686 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.259762994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.260593721 seconds)
  done (took 13.778346596 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.25972308 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.259902397 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.257724511 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.260621906 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.25996168 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.25765809 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.259363628 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.260386611 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.259650659 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.25803906 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.260205705 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.258116957 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.261117337 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.257265225 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.25984855 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.258440414 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.257696981 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.257698723 seconds)
  done (took 23.844710948 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.261903917 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.260248506 seconds)
  done (took 3.703847553 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.25834472 seconds)
    (2/7) benchmarking "second"...
    done (took 1.258532897 seconds)
    (3/7) benchmarking "month"...
    done (took 1.258175781 seconds)
    (4/7) benchmarking "year"...
    done (took 1.25771065 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.257689658 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.258143634 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.258378147 seconds)
  done (took 9.990040477 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.262924199 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.438466175 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.524019073 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.838799259 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.26238667 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.263931364 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.132097355 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.26536532 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.26689172 seconds)
  done (took 14.437666486 seconds)
done (took 80.401019947 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.28912528 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.273179026 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.472912801 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.281957617 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.274450977 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.555396285 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.261951313 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.384345453 seconds)
done (took 37.97378348 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.264291447 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.021415707 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.021719268 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.258391089 seconds)
  done (took 11.485629883 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.240780563 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.221873185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.237744855 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.3385046 seconds)
  done (took 18.223254862 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.32029628 seconds)
    (2/2) benchmarking "read"...
    done (took 1.597626502 seconds)
  done (took 5.10131503 seconds)
done (took 42.256761162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264179997 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.259893819 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.263801447 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.263992899 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.260568377 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.264417469 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.260313997 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.260880364 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.264327047 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.263289724 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.262797588 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.263919042 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.263631495 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264046268 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260384236 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261509635 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.260866304 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263735226 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.261610422 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261090657 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262248872 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264781099 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.262123884 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.262476579 seconds)
  done (took 31.485655174 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.265627363 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.262314957 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.26434645 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.265566574 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.261978994 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.264094097 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.265490057 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.262182996 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.265646454 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.266002592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264024774 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.263279962 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.264917557 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.262577638 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265303657 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.262501919 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.265560077 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262329003 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266446232 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.263916746 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.266152322 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264262076 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263238728 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266450673 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.263914688 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262737903 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.265734477 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.2653314 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267069832 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.265591486 seconds)
  done (took 39.120976578 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.271184525 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.274084214 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.26703952 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.266504128 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.266869268 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.266281363 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.266653041 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.266059979 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.266838079 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.266029576 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.266546754 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.266709958 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.266850556 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.266211652 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.266518215 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.267048955 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.267912821 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.267205994 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.266523868 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.265656742 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.267537559 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.266344952 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.268405537 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.267879927 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.267790989 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.267569277 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.267840544 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.268307633 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.267062622 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.26769204 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.268168562 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.268716595 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.267901788 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.267360258 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.268575022 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.267260607 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.272854582 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.276030302 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.268807384 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.268767965 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.268413466 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.268576668 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.2690364 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.268555987 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.268076934 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.268719658 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.268558629 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.268347611 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.269327017 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.269812901 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.269018111 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.269753591 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.270068681 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.270545343 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.26974908 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.268973595 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.269717468 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.269898148 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.270551545 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.269519462 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.270042417 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.269952366 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.270180644 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.269922446 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.271182422 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.270862388 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.269072942 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.269997214 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.269931458 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.271600938 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.271022079 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.270465142 seconds)
  done (took 92.535705844 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.269597947 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26869025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268360273 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268569281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268930381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270890274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268883623 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271902284 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273336578 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27137761 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272557887 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26878996 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269233116 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273326124 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272070626 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268848067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272102621 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26845474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.271479299 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27233255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271669436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269533611 seconds)
  done (took 29.143639081 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274115149 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274124746 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.269906444 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273170246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269054353 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27265301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.273042002 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274719698 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271928917 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270468786 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270622114 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273101104 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269672988 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270688328 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27053379 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272254279 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272237325 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272419141 seconds)
  done (took 24.088774879 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.271438061 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.270801028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.273699362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.271529566 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.270897732 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.274313641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271394046 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.27278189 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.273626033 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.272027065 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.273542836 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273602529 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.27438922 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271461621 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273801955 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.272219104 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.273466318 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272779191 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274521709 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272680983 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.272824107 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275389191 seconds)
  done (took 29.19755237 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274892938 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275483077 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271972718 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272620496 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272270918 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275665943 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.274524218 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.273022058 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27641598 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.275380038 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273352108 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.276123263 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.274284212 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272560502 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.272842796 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273386203 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27533714 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273025501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275564902 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27337919 seconds)
  done (took 26.678399904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275468216 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276522578 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276582953 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276828133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275565191 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276632911 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276460605 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276250599 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276983776 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27695283 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277365637 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277259378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276579961 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276773588 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276827001 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277285724 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276593236 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277299415 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277239409 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277997276 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27836836 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277500136 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27893806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278043275 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278132745 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277968282 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278919273 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277545888 seconds)
  done (took 36.957668148 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277803318 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276941733 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.275329526 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.275342599 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.276386638 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.275337398 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.27489157 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.275867045 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277851055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.275265881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.278470023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.278475278 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278897406 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.278793852 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278935688 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.278642433 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279352584 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.276371249 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277396245 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275892946 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.278687048 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279240747 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.278743557 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277194923 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276893852 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.27851677 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27614997 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277609612 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279516515 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276943096 seconds)
  done (took 39.521412438 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.298758545 seconds)
    (2/2) benchmarking "in"...
    done (took 1.298977562 seconds)
  done (took 3.79709511 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.27787085 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280064423 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.279796954 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.277777933 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.278198561 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.279769018 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.280739532 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278691882 seconds)
  done (took 11.433678374 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.28125559 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.280417938 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.281563287 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.280667881 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.281308472 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.280868991 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286427851 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.302903128 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.282634651 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.282379004 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.287006204 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.289231007 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.283007895 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281319601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.280594897 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282944779 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.282192683 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.282160046 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.28163043 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.282862509 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281662445 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283802188 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284437715 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.279204292 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.283339332 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.293556736 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.306548639 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.281781529 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282086146 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.286206888 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.28181757 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.280641808 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.284037083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.282788006 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.282874719 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.283315367 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290246043 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302679525 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.288210376 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303106137 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284254968 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.280242627 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.283780463 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.28376083 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284070073 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.28251985 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.283646486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.281048889 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.282627668 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.286424855 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.288973294 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282273215 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.280762605 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288273621 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.285283711 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29058322 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.304038803 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.287327231 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.292582299 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.294903082 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.316605443 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.309929449 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285594202 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.283241348 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29524152 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.308199469 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291580833 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.303479759 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.282596359 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.28663561 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.293433691 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319258795 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.312859945 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.285614515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285935974 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.287246597 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285348507 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286177992 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292384752 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.308632601 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.285197416 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285270872 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296696287 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.30920876 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.285840702 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.285621591 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28657024 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.286622796 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.287229471 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296838981 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.307548954 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.287695352 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.28576539 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.28725427 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.288502992 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.28681002 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.285533248 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287067023 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.285514639 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.286268504 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286323796 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290613325 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.295134183 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287342579 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286670854 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.293610983 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.308505795 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286718291 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.294462246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.288242213 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287456317 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.289532717 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.294090877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.284963844 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291038488 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.2963462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.287367997 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.289324914 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.287657918 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.288260106 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298703709 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.314323274 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.288712608 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.288417508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.293094952 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.299114029 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.288708482 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.291559545 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.289676216 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.286640306 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.286838115 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.28988034 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.290079031 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.289494931 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289211143 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.290518879 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.28681254 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.290746292 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.289243182 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.290978015 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.291353911 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.290475516 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.290871296 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.292108515 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.289159907 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.292042469 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.297323756 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.310994685 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.290965561 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.290394147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.287874177 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290707845 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.291784209 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.290660658 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.291172913 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291087218 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.29043999 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.291217927 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290825727 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.291267697 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292303986 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.292974418 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294642865 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.290358837 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.294095066 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.290600808 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.28855911 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.291171901 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.292000818 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.291119235 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.29273797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.290818457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.295318794 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.299201496 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.292030126 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.29142714 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.295079421 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291312327 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291403708 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291455143 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.295773754 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.298976283 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.292323405 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.298071664 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.314283143 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292345698 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.292457926 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.292437205 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.292038568 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292534109 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.295663062 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.300647466 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305780086 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320287012 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.293973983 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.296834263 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.294071007 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.29696156 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.297052027 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.293258872 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.29376098 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292884155 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292680928 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293392818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.294727544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.294236521 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.292962692 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.294623865 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.293060876 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.293642526 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295501981 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.293985339 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294188464 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.291643149 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294368791 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294880238 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.294736823 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.291916665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.293303895 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.294842056 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.294079662 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.293814433 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.30136216 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.292851219 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.296062169 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295982228 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.294435551 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.294514464 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.294953217 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297425766 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.296400362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303058169 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.314774444 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.29673466 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30141064 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.31593363 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.29596277 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.298165544 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.296197085 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.292990139 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.298743978 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.303219867 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.295384845 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.295091603 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.296358299 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295693026 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295423971 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.302942412 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.314849413 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.294980274 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.29799671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.297645227 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.2933147 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.297168558 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.297006062 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.297771902 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298378049 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297395387 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.297690351 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298119006 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.295772511 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.297276995 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.297205992 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300496242 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.304432395 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.303406673 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.298097607 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.299829839 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.299068013 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.301791784 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.299379179 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.29711704 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.298200515 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.310619994 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.324537499 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30459522 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.320439607 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.299108607 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302692661 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.320419638 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.303330784 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298822185 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29894602 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.298506307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.298340588 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.29657078 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299876884 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.298438907 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300447174 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.30067609 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.303823281 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.300408853 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.299115775 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.299645109 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.299416697 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.30056472 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.298785693 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.300055322 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.30241093 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300561127 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.299883974 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.300294504 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305638501 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321847432 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.300888521 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.299444564 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.300584521 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.299351371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.30101082 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.299505192 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.304301679 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.30730045 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.303090465 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.308782627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.301984233 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310255894 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.300340532 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.304675513 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.308477456 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.298605955 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.29999292 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.300637656 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.301135045 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.307689794 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.322571284 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.302466915 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.305216045 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301193279 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.301480231 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.301857546 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.301435673 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.302863236 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.301986207 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309836088 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.323104574 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.306002882 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303719599 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.299864525 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.301377658 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.302768261 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.30185381 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304876304 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.30144815 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.302445652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.301373238 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.302311281 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.303512131 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.301500724 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.303374956 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.299773943 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.302815249 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30842674 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.326145994 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305915217 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.304090916 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.311235834 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323893054 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309069463 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.323650829 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.304380254 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.303537908 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.305179799 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.306248263 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.304388412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.30494584 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.303902495 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.306760121 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.308616815 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.303226553 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.306726283 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.304729886 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.304361111 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.304978842 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.314365666 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327057359 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.307559628 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309988357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.303687235 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.306516649 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.310048738 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.305644292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.305232617 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.308718902 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315754692 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312957741 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.305622981 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.30577915 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.307329843 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305948055 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.305938211 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.306685134 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.306185042 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.30615571 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.307206702 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.306054479 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.310428862 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.305875126 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.306520196 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.308099094 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.307963609 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.316258663 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.327349455 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.307721833 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306015621 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.309738759 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.306278665 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.307249764 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.306816861 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307624134 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307857461 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.308191107 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313091597 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.313421932 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.309481466 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.306418189 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.307955426 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.307503906 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.30815972 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308283922 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.308610878 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307780062 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.310317634 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.308170833 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.311072524 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.307725313 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.308778013 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.308275049 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307198112 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.310585816 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.31476298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309368777 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.305947636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.309403105 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308446242 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.307643308 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.309688538 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.315799229 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332334575 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.319162866 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.317602346 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.312962507 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.309347582 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311882251 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.317924703 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.308107393 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.309959494 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.309951268 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.311673672 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.311249627 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.313173271 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310406608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.316308245 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.331041227 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.310128897 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317689016 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.331067575 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.309901726 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.311727895 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.315435771 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.310786224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.308419906 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.31074314 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.310036711 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.316730368 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.332813904 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.310470866 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312804741 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.310310304 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.31352751 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31521257 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312118942 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.312062923 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.310025073 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.312423625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310239002 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311442358 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.308416149 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.310968804 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.312349357 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.314838109 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.319129136 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.310712259 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312970254 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.311577826 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.312074613 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310752878 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311575149 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.309426388 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.309612706 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.312035779 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.31247289 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.313296493 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.3146561 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.312408546 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.313825412 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.314287107 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311212799 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.316095556 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.322963025 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.320617821 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.310303999 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.312695189 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.312155752 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.315571039 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31233371 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.313962751 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313190449 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.314373406 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.313651678 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312675259 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.31389667 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.315758534 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328855912 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.333750731 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31408264 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.313652412 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.317038335 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.314589461 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.311739656 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.314409971 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.31747673 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.318414013 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.322624379 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.314996789 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.320179217 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335832987 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.31786222 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.319422555 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.318185164 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.322805049 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.317482897 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314494073 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.315994078 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.319375169 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.330977613 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.315259152 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.324857455 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34484552 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.336040693 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.316536921 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.315937141 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.315372401 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.315140096 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.318284618 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.316377043 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.317023891 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.315658892 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.315960021 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.317418748 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32117559 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.317990258 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.317250144 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.316565431 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.316111412 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.317348382 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.313989332 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.315546586 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.316522597 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.31637323 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.317350906 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.316777732 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.316305633 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.328684747 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.344216329 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.317603261 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.316034367 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.314787977 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.320403896 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.319769357 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328123368 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.325264906 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.316843869 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.317235535 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.319122072 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316699556 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.31760428 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.318240225 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.31840316 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.317236043 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.315344918 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.330293107 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.34465024 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.322414697 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.318393738 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318712342 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.317801919 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320165178 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317861303 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318168644 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.321335584 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.321957197 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322041085 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.318328048 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.318739748 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.322896876 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.32652528 seconds)
  done (took 777.75234443 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318222988 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31762824 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316985288 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316349547 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31721424 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315862048 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316784564 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.317077685 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.317491466 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.31695032 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.317733793 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316952492 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317237465 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.317566457 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317500492 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317776224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317503008 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318303117 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317789266 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317330658 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317709304 seconds)
  done (took 28.902066163 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.321805821 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.319216186 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.318363894 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321294088 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31998336 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.321491236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.318443161 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321166489 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.322164753 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317689352 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.320484651 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320851906 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.317943835 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.318952253 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319451421 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321870335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.321244418 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319010539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.322028427 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319974394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321324404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.319396927 seconds)
  done (took 30.283347541 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.322713156 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.321860699 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.321550016 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.319439675 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.321896851 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.320295513 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.321683492 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.322533148 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.322502046 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.323511595 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.322707291 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.324501418 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.330532189 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.327509454 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.324554022 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.322645599 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.467034256 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.322581785 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.32316502 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.323237027 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.319827694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.328323018 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.341053462 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.321016117 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.322665738 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.323082753 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.323930201 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.324479072 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.323659721 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.325177415 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.327404238 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.323968776 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.323373712 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.325030369 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.322844398 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.325918393 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.328430744 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.324446707 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.323264919 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.324687913 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.335548001 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.345232408 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.32440616 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.330091534 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.344752508 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.324650527 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.32943443 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.332655987 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.322997266 seconds)
  done (took 66.33958699 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.325565338 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.324467674 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.322773075 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.324627126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.325644474 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.324701012 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.324465483 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.325903572 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.323475786 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.322271607 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.32439503 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.323446483 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.323126768 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.324859691 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.326373687 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.322721362 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.323162574 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.323915811 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.3225854 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.323846725 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.323389311 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.327023022 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.326468593 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.324061709 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.326697902 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.323165586 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.324189522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.326917418 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.324106952 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.323633496 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.325826006 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.326775661 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.325222227 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.324684048 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.324255872 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.327162825 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.326156011 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.323626506 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.327085421 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.324970198 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.326988873 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33217449 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.327613121 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.327864334 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.324739827 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.325002863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.325598822 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.326171708 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.326139243 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.327228875 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.328105837 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.325965886 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.329581653 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.325642314 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.327487406 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.328324854 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.325969028 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.325495496 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.328806916 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.325856411 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.325782192 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328424112 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.326392279 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.328292939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.328559315 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.325406272 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.326651359 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328856769 seconds)
  done (took 91.39231464 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330077911 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.329041261 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328676481 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328561598 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329513969 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.328633878 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.328716845 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.329968594 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.328669383 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327648803 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328311769 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.329827708 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.32812791 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.330511989 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.329868002 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.330057979 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.330205589 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329271368 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.329681285 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330358757 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.329191086 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.329729847 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.330583482 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.329162979 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330613444 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.329398716 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330337524 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.329962969 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331219065 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.329993794 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.331194083 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.330696834 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.33107817 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.330664058 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.332112913 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.331688098 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330639415 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330931945 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.330811296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.331703635 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.330140475 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332678125 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.331447998 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.332334274 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329880674 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.33130779 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.331367981 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.331076883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.331649643 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.330975007 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.331886521 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331485747 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332170791 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332191507 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.332081207 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.332015819 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331052399 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332145124 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332632688 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.332225742 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331911294 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.333058278 seconds)
  done (took 83.744241382 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332724341 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332777876 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.329385254 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.329232675 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332757943 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330318012 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.333260478 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.333456497 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333387365 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.334285672 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33357755 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331556843 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331357729 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33251823 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.33117764 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331917672 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331696556 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.331899532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333512985 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.332563215 seconds)
  done (took 27.892948713 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.332573678 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.333573231 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.331665201 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.332643898 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.334002413 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333457336 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.334165113 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334824549 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332919263 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334070378 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.335211428 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33528244 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333383208 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33257479 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.335633344 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.331923157 seconds)
  done (took 22.589525021 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.332621335 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.334732874 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.333974759 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.33437005 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.332693562 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.331531041 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.335220785 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.332201597 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.333152479 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.336451415 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.336073456 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.335110434 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.334926904 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.335324603 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.333519311 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.335969775 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.333448974 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.33270433 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.337238411 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.335615133 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.335057907 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.333841227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.336710114 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.335448765 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.334382868 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.334797694 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.334477778 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.334297594 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.334205508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.336944517 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.33487642 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.335062308 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.333668208 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.335897014 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.336449223 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.334987062 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.337023846 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.337724969 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.336595585 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.337451544 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.337718908 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.3350839 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.337201328 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.33757209 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.335452132 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.337680185 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.3366021 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.335967887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.334660214 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.335590526 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.338355097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.33739802 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.338738632 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.34020619 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.337802499 seconds)
  done (took 74.705553075 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338119619 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.338478169 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.334966809 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.338149641 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.339152189 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.335451671 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.338581099 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.336333367 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335465636 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.338284116 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336362402 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.339757393 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335414261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338021647 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336811441 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337580987 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.335488037 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.336692762 seconds)
  done (took 25.3248905 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.336995826 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.33716524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.338427499 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.336209324 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.335791743 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.338625593 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336828599 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.338361405 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339169305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.335907321 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336217144 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.339513548 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338400868 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.338885171 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.336329081 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335663274 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.339168534 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338738213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.33520343 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335390931 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338440971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339341227 seconds)
  done (took 30.680142065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.339467268 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.335667904 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.335434364 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.350710781 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.355849531 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.358341078 seconds)
  done (took 9.329557522 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344826599 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336379027 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334544282 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337491272 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337078114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334492086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334481485 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334449104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336250727 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333962976 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333063986 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336358738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336378754 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334267109 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336072459 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337157648 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336181905 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331999477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332821724 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335004896 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332892658 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335510452 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331269367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332762879 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331710586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331389626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335345414 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333329719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331830541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334538858 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335062107 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333607616 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334196691 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332902203 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335222858 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334828291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33198833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334100362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336226099 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331866168 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334522411 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333534417 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334429041 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332426442 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334204432 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331361687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331557022 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331817347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332481262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334777892 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334612832 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332420457 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334341155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335151888 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333312802 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334702256 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332030661 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332479393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334075641 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332320415 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331275133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333470398 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331995631 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332643151 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33409509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33239245 seconds)
  done (took 89.323482842 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331654056 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332484225 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331661424 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334320836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332450436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331653887 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333088605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333827728 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332754158 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333114753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335041712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333066026 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333115075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33426393 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333042102 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333235716 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333021065 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33297873 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333221753 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336718955 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33319401 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333247953 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33297461 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333540462 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335011912 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336919695 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333931673 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335296486 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334090655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334902273 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33462157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334914271 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335303139 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334642698 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334383705 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336235219 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334830805 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335413836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334893635 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336828282 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334048717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33726795 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334393947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334380281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336175249 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334395975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334697875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335746834 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334295879 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335442703 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335220213 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33599996 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335655524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334772078 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335913438 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33483653 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335112858 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33465059 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334977167 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338048237 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335802943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337187297 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338453018 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336140438 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335307853 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335889838 seconds)
  done (took 89.337990041 seconds)
done (took 1812.742011004 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.425003559 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.313471457 seconds)
  done (took 13.992579604 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.500564318 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.451011474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.337342797 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.387252412 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.337967307 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.357620011 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.352304185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.338422186 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.338421388 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.337313638 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.336564395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.523941861 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.384819968 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.338304971 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.338225652 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.431904235 seconds)
  done (took 43.348715094 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.364513599 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.343809516 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.464841096 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.366191586 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.366194846 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.54104963 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.401919912 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.345131624 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.52736328 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.383108504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.004585212 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.366093448 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341965952 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.524244824 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.362766231 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542487935 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.605625751 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.009632443 seconds)
  done (took 31.116121362 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.826314843 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.353683486 seconds)
  done (took 9.436763211 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.354580725 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.354735638 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.376495624 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.34218058 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.369489998 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.383233248 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.33603255 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.394704584 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.372707412 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.358381799 seconds)
  done (took 64.902901083 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.362130633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.341543854 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.340623516 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.339334082 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.331717988 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.336896318 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339403126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.335317163 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.207873443 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.479950255 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.361246656 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.347420947 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.358665567 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.341717055 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.338390637 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.376863895 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.497451969 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.357489351 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.337059979 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.344456581 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.340249056 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.434390868 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.385997596 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.339161748 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.47299347 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.229778306 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.350212706 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.347793327 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.476376622 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.358233813 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.34071659 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.341078776 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.344038307 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.944201751 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.87189559 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.351346904 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.384424193 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.350324306 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.338410028 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459363949 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.36096495 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.347248608 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.345103547 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.836829828 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.499564935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460460053 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.680468166 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348881143 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.343547197 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.404461307 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.342792627 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.343727683 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.372036198 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.128831151 seconds)
  done (took 112.609010014 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.34840769 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.822572073 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506314397 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.355471416 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.152555247 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.039087103 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.358309615 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.644421731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.380455787 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335139336 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.627233357 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869551476 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.363606225 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.339371699 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.396957677 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.41819925 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336367467 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.137111024 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.360395165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.337213401 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.76604719 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357253844 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.336801559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.524767168 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.376978543 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815364748 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.943456284 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.787395816 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.359077877 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.337373797 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.822347119 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.360316389 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.413507189 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340499105 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.623458427 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.72777265 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.711975016 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.361938361 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.377361856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.341709888 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.337149277 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813085475 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.715484371 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.355552874 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342897172 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84944896 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.361238839 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.341501108 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.337830509 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540938887 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.335322963 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.340199889 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.879681203 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.338219511 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.678776045 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.433068561 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.408289391 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.861903325 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.363196023 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.435873032 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365701093 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.339766961 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.342612093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.339652776 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.33865075 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.718957824 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892567095 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.341605635 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.718295168 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846244453 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.361441483 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87880104 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.296667624 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.345070084 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.416854607 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.338540722 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.925773546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879390572 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.364001032 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340003197 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.702988693 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.364134257 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.62712434 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.362781944 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.355161111 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779796995 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.359185351 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.365537431 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.343771406 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.345116055 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.970633892 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347760074 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.639259114 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.365076715 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.338684408 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.339189964 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.383550479 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338398562 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.363576705 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.346146033 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875828358 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.367580731 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.476519053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.364861283 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347887336 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.339722173 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.340232268 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.340296262 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55827516 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.893865393 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.341341117 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339491379 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.339826927 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.358252691 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.482369264 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.346173314 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.664979833 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.365824362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340442219 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.34509471 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05984523 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.412281347 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339441405 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.339727588 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.173656173 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.567349033 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.357637649 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.360945743 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337487967 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.355931444 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.736339034 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339674326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.434141041 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.342528081 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051717264 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.39472774 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.353305519 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.99822835 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33912622 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.338526116 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.356447661 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340286671 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.668100157 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.618680562 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.813454834 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.341184702 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.357500798 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.054794945 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.402953053 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489314633 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.361270012 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.356375371 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541238494 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826953374 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.341392903 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.91290357 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.341042706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553127319 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.341339674 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.660339425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837250316 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.365331219 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347628149 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044277561 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010038709 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.955368455 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.345307077 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.620433612 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.312355735 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.790596343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.340776142 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340870848 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.771859216 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342055888 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.342255168 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.340403552 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.342559512 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.486669781 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516652684 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.634869577 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346643202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800358321 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366044086 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340225617 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.35237635 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.343779857 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.692531317 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.43330625 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.34896286 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.354514591 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.339674087 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.343849221 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807322931 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.339992066 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.338703262 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491861667 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956338274 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.354764803 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.33847955 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.080911433 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.556235391 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836571973 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.405871148 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.635488952 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.358472962 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.375937461 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049569372 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357771565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84402371 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.355941009 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.337370025 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913161124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.352259073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682798412 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.337968278 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.337078323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869205135 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.358451941 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.343567514 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.664538244 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.337793909 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58537297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.337585941 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.354955436 seconds)
  done (took 1115.165840592 seconds)
done (took 1391.823617066 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.33891008 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.344401983 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.324506542 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345790903 seconds)
  done (took 26.612320528 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.348898994 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.345340692 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.345122319 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.344982302 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.346539637 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.345420761 seconds)
  done (took 9.335969424 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.370106711 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338424272 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.344563922 seconds)
  done (took 19.31350052 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.560239789 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.606752645 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.711306621 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.511449086 seconds)
  done (took 10.650495617 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.346502233 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.346467402 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.346595097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.347725402 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.350288047 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.351165436 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.348092943 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.349409841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351397007 seconds)
  done (took 13.397169172 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.16623248 seconds)
done (took 85.731664547 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.392002039 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.705466669 seconds)
    (3/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.38391711 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.824703155 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.661087846 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.17223595 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.34044867 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.389343932 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.76313504 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.804749559 seconds)
    (11/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.245400777 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.587546055 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.104747217 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.596950021 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.728225551 seconds)
    (16/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.367854663 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.380834667 seconds)
    (18/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367352997 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.495080758 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.385041106 seconds)
    (21/309) benchmarking ("sort", Float32, false)...
    done (took 5.331051155 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.166449314 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367972321 seconds)
    (24/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426385637 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.351483086 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368586129 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.772675717 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.60878212 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.342349662 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.423804749 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349962564 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.322666766 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470352922 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.345559483 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.342710757 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.457272865 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.354784597 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.804819552 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.968329505 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.343206505 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.439228581 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.445286821 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.627917864 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.364361074 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.205063662 seconds)
    (46/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.920380897 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.350902345 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.368215425 seconds)
    (49/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.866360115 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.426077732 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.774746528 seconds)
    (52/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.449710581 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.432186296 seconds)
    (54/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.369140133 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.428229933 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.594074016 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.730706559 seconds)
    (58/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.727364069 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.455300595 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.425448797 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.60278391 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.904056988 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.365868487 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.34388899 seconds)
    (65/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.740042905 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.386214015 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.401483032 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.352105713 seconds)
    (69/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.916105024 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.788490725 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.936524462 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.757605991 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.177386023 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.445239922 seconds)
    (75/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.346529658 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.454115266 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.820310557 seconds)
    (78/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.655851478 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.088129339 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.34619434 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.372272334 seconds)
    (82/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.106065181 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.625535319 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.63209949 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.728875186 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.431377683 seconds)
    (87/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.563825246 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.717971685 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.529283704 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.694863474 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.213303233 seconds)
    (92/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.940883211 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.342896998 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.865091566 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.46033435 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.956066536 seconds)
    (97/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.357221082 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.910014821 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.680106448 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.453745866 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.412396728 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.329244061 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.113084061 seconds)
    (104/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.787045508 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.229809054 seconds)
    (106/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.471416331 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.335548931 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.117164456 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.268150919 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.124285891 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.482649363 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.560754034 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.406635924 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.432994222 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.553790767 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.713690712 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.78423085 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.362930448 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.357229288 seconds)
    (120/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.359615537 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.376559502 seconds)
    (122/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.963409901 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.783032179 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.25649861 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.364671067 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.468075174 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.366082476 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.349093992 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.008839834 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.613926226 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.86673335 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388581249 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.626778129 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.349154448 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.093582644 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.60424508 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.355937715 seconds)
    (138/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.163208644 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.473531125 seconds)
    (140/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.348567295 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.712115745 seconds)
    (142/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.415240032 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.495949024 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.998628719 seconds)
    (145/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.43922012 seconds)
    (146/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.452009163 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.622398369 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.376473503 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.348849227 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.349993583 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.11528839 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375869625 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.368971715 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.3485852 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.696982501 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.831487848 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.200898568 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.218312993 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.329883798 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.36682621 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.939072761 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.193344934 seconds)
    (163/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360164554 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 4.357768369 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.922979062 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373633952 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.451824378 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.54221827 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.437953905 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.906968034 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.480989816 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.004923408 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.684813842 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.664866183 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.542740835 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.427022803 seconds)
    (177/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.968107016 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.330878147 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.351402826 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.411404993 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 5.614181147 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.357308275 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.379092337 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.796205577 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.991039075 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.358976297 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.393850383 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.757714063 seconds)
    (189/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.715804981 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.567108418 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.655152548 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.398356421 seconds)
    (193/309) benchmarking ("sort", BigInt, false)...
    done (took 6.352913542 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.406469564 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408276884 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.702124821 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.483445478 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.669781307 seconds)
    (199/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.389985461 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.68817886 seconds)
    (201/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.633206017 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.735118508 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.347718024 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.336585393 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.365574297 seconds)
    (206/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.538242693 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.995976895 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.58566632 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.258271892 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.372014894 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.43767624 seconds)
    (212/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.634840039 seconds)
    (213/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.553099082 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.106365507 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.418325791 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.337349267 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.354943896 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.382618777 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.768236063 seconds)
    (220/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.704316556 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.481178913 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.333674002 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.579861963 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.430247889 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.394989794 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.011757795 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.714306602 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.380593239 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.580647198 seconds)
    (230/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.481389854 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.365630689 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.761348176 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.790719415 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.370072815 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.353105821 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.610506403 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.01322241 seconds)
    (238/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.095427938 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.77484164 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.420672697 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.20878834 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.083457243 seconds)
    (243/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.400145287 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.487184178 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.339965323 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.364519905 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.362024654 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.103843442 seconds)
    (249/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.927470056 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.399538204 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.920819805 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.44741127 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.49628183 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.379095935 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.725475784 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.934246516 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.110073327 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.180177667 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462703879 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.960921051 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.259548646 seconds)
    (262/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.066699149 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.583556194 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.354225405 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.755341074 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.297966974 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.382991773 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.342412863 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.965423507 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.579102563 seconds)
    (271/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.788394447 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.784489213 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.388243248 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.73762669 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.347982774 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.94132394 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.374229119 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.480818047 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.381510908 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.356914793 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.149906371 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.381877454 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.338877932 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.338415149 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.426556088 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.341264498 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.558741372 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.348966933 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.341876056 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.352016426 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.447754005 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.439567689 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.363086097 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.505266009 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.202976119 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170445958 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.188693756 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.683399271 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.161741721 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.460445888 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.741423336 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.749179055 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.401946719 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.625283571 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.388318109 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.779464938 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239562604 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.481741468 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.358614332 seconds)
  done (took 926.480787774 seconds)
done (took 927.739959676 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.39320274 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389117241 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.370559374 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.392527665 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.482510398 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.39802157 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.380090358 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.372863923 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.419056571 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.419861892 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.369951966 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.39705496 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.373484468 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.371950463 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.370591011 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386831369 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.401108741 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371160086 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.388388558 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.381707576 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.388427442 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.370161261 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.42098668 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.399510839 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.375097927 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376306631 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.374552667 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389799842 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.483801995 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.375708414 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374766922 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382094596 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.40009218 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.370302147 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.366557294 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.392830097 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.383938603 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.381906574 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.37742623 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404788524 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.80467978 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.389490849 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.374349916 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.375001161 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373453652 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.378139849 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.374843301 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380016001 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387625162 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388083341 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.791129179 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.405065573 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.376951751 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.375346818 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.384158687 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.374302767 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.377141632 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3920926 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.393906343 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391810592 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.389638659 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.380769238 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.376679174 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.391328424 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.381555673 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.827583364 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.387243702 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379124589 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.805993932 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.395152188 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.827780014 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.400172187 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.377154795 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.389150634 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40675936 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.401300433 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.371192714 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.374368426 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.381972872 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.373227105 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.385454249 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389345117 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.380455094 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.375752169 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391496274 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.403427172 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.386585883 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.377468006 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.385644801 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.394941593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.383854589 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.388051911 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37937793 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371136827 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.385601996 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.380297537 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.380366793 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.38069636 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.383030184 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387173948 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.805020086 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411612257 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.374562417 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.37354627 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.375840097 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.391326497 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.805724472 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.395196229 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.398428784 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.425358309 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.380179297 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.39690827 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.381286762 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395419407 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.387728039 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.381541761 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37453848 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.395983337 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.832554628 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.417222324 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.381394903 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.376876464 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396609603 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.380367827 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373548685 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.411866253 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.37960409 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393566177 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.499951305 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.389581623 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.411030395 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.377499044 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382222138 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.413641049 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396689298 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41093665 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.382814303 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39699198 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.394671398 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.376485523 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.390301755 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.390018234 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.381448551 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.384786804 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.373078354 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.407444792 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393990971 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393895647 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.401450469 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.501523454 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.378149354 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.400711702 seconds)
done (took 231.920994537 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.438001314 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.368999796 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.463037499 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.376258897 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47699173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.475912704 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.375071266 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.376590731 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.373384837 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.753349885 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.375405597 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.376368853 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.372731661 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.375427493 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.460623097 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.377779407 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.375908549 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.717993845 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.378325269 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.449558896 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.370079194 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.375485621 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.378108831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.761683895 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.378401221 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.376172653 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.449301854 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377940209 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.724331894 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.375316171 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.375325835 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.724358135 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.468242806 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.395214431 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.388819178 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.384922716 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.478069127 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.39771521 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.4606561 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.460973791 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464551226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415952877 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.376363045 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.374442921 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.379921796 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.378759705 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.376925222 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406156937 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.373128709 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.378363738 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.719418922 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.388262962 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.388131334 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.378837079 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.37746448 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399186902 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.377394037 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.380087009 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.468751048 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.380873149 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.442643738 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.76181609 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.757323115 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379758722 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.378421448 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37827803 seconds)
  done (took 151.411240661 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.446763896 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.451300259 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.491850501 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.397723354 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.42917734 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.498128125 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.397669663 seconds)
  done (took 11.403265798 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.386929668 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382055995 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430303441 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431184447 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.381694571 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527831075 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381917875 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.391989142 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.379313631 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434482749 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.38273447 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.382098565 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.38947595 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.377548718 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429742265 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.392631607 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.498208243 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.382682535 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.381644928 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.532910679 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380578128 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.389017083 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.435185596 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.39369481 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383526475 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.388893453 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.954751388 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381976872 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37954556 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.381614354 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37964755 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.419238207 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382647234 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.379964396 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380968424 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498341536 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.382727816 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380571001 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.383666219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.377616799 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.38310155 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.382882998 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.383455477 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381428107 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384595585 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.40695057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.384036779 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.383939779 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.384689705 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383587413 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.433347897 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385536577 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.382573085 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.381438452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.441232605 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391732862 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385453503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381693789 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384878041 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38283399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536553648 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431721859 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.384045568 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435037382 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385123999 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385052962 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.385714305 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38501796 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438558871 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.384219021 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.432948998 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.383270117 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.539476936 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.408694197 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386413942 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.387276697 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.387624539 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385447383 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.382033509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.390468144 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.38314342 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.386019636 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.392790067 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384353733 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383244681 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.488823434 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493176753 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384870041 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.398682914 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.393166131 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.385160469 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438322199 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.38672816 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.384309464 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438670976 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.501528787 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439010254 seconds)
  done (took 158.113828604 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.391852104 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.394465517 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.388600497 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403778176 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.387361099 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.387102583 seconds)
  done (took 9.650395925 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390989552 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389502842 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.387917907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38952015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.38846399 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.388661136 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.388193925 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3889624 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.391891278 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.387832409 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.387754232 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38950209 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.38972136 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.387901239 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.387422228 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.388862398 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.388599016 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386292138 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.389705895 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388203997 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.493561892 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388379824 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388628888 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3900471 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.392657415 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.389641367 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396864048 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.389062557 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.389410431 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.39386354 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.408553372 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.390658779 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.390536593 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.395385059 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.39382004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.39106517 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393037832 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.391034224 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387199934 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.392049549 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.389514669 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389968028 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391155417 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.39158116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.391748875 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.3951145 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.394648038 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397196576 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390484647 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.390789405 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.391780561 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.391630356 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.392787215 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.391765332 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393495701 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.411099796 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.39624918 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.39035965 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.391981233 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.393725558 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.391762017 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.391416668 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394334799 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393820565 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.390518183 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.391122476 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.392176464 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394721358 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391095967 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.392697998 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.392212513 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.39125467 seconds)
  done (took 102.596457613 seconds)
done (took 434.460546033 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.750763101 seconds)
  done (took 8.05374029 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.486036732 seconds)
  done (took 7.788965469 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.275242355 seconds)
  done (took 22.584365632 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.433269897 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.425114878 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.824503983 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.394172667 seconds)
  done (took 27.381148432 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.70393402 seconds)
  done (took 8.007355372 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.38592912 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.385812141 seconds)
  done (took 14.076560289 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.436095043 seconds)
  done (took 7.739803485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.996408309 seconds)
  done (took 8.304971451 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.408842399 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.410747087 seconds)
  done (took 14.396688495 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.375835617 seconds)
  done (took 7.679843383 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.288434847 seconds)
  done (took 8.591857456 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.400254148 seconds)
  done (took 7.705624558 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.428865446 seconds)
  done (took 7.732799326 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.452437193 seconds)
  done (took 9.755483393 seconds)
done (took 161.099558741 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.386972549 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.394177118 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.395159011 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.396177898 seconds)
  done (took 26.877529206 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.426154099 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.428400748 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.428692342 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.43873091 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.430304713 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.428799763 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.419109526 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.418825845 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439115635 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.430846417 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.429346499 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429981648 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.426374494 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.419498232 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42974587 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.429843319 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.439431246 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.430145826 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.420735877 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.431214729 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.395871562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.43869659 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.432083667 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.396203348 seconds)
  done (took 35.544411786 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.917738143 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.46572007 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.547525617 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.448585601 seconds)
  done (took 7.685164592 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.447656728 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.448041499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.460489736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498905695 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.53180825 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.456787748 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.422217375 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.417277441 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402027264 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.449674143 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525458309 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.467243984 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.54843527 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.396234917 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.579442859 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.39584766 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.395694384 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.447842256 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499781412 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.514452164 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.397143716 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448316344 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.451934633 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.465660011 seconds)
  done (took 36.373895159 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.409019937 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.404513813 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.395537757 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.394776208 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.417688744 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.395100842 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.396467148 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.397410533 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.397211288 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.401637809 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.394742619 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.40863065 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.395605715 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397328216 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.403733488 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.397373404 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.402679552 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397382472 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.396651613 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.399496189 seconds)
  done (took 29.30974593 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.390397622 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.244044138 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.742842605 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648108289 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.391759724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.399698854 seconds)
  done (took 28.125318052 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.468254382 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.627721474 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.405871212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.755118398 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.849076068 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.415383478 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.397933023 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.640916786 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.961389766 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.960570466 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465014594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.47364827 seconds)
  done (took 20.729423487 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.403415667 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.39913415 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.411812354 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414817463 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.453244774 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.420680153 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.404996786 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.391106032 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.460384744 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.476308061 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.42493845 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.454893057 seconds)
  done (took 38.425940925 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481109956 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440211001 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.320211907 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218055706 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119236879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606124161 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.178982194 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.843434325 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.399075499 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668501054 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398935711 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490610215 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65254525 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395006366 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403091006 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.397854605 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645395878 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881793358 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405034944 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.3925524 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427305252 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395459841 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.522573984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.434425063 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607709363 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372835914 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656045978 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171649116 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685163315 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414543091 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405759676 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394393595 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669774316 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061140383 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510766787 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406486864 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318904548 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.943459057 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.385744971 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.506893098 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411219906 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408734884 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407776693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39558495 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32964552 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400222264 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86340402 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403042327 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.107681128 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398843269 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410236697 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492265887 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.401386737 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.386683599 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489873161 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404660791 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.396160542 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402587823 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969247801 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.918254438 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420877178 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.34043844 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.935828735 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.48649529 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050525332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.525636367 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.401338562 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403333942 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332750877 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.425398934 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423464293 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543771815 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.42317236 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049110053 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129963276 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.428398356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338366082 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9436887 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404887005 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340437046 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625567269 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175783083 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33903369 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.33852616 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332603214 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114322256 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414773451 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.773724714 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405075136 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846722761 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410680721 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414956462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423475167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62252981 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.27762308 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399237943 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.409917633 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534008807 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421445047 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853671572 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334174351 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40374795 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659319294 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611053311 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412635267 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.425925572 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643664937 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4002842 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.424100928 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.403117109 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419206002 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.984769312 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438046073 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930353335 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425479065 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177688099 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13776077 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424798824 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.509707712 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416024981 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658177868 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173079622 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.569224759 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469139569 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404075885 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401716866 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.514138266 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.261432672 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.304534905 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.397530774 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408259917 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.420967472 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.402365131 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365047947 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.399863212 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431796718 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.188741376 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626051986 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402362957 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686842836 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338595082 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549514346 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413548874 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625875517 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.617030953 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.420042161 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665467715 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41395394 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411237866 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440586366 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423183578 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501994009 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425929949 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.415782976 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669515634 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.407706978 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408020216 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.53772636 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.189173837 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407225022 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.409528958 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.334903184 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991063594 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40812349 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413539282 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292748657 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.417909328 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472987945 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409919719 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.414572115 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.247477638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318251845 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41078304 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.40521194 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628934832 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415367781 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.533170156 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494054209 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.615552622 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992628776 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443886453 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.339696743 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.115839515 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.09778348 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40587953 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.595851996 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406359809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415613598 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417218821 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.016533173 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994606212 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432512248 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.451943307 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419969886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416590382 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411765075 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405894878 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.235248728 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973512743 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419794054 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.425275161 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549711591 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.422477234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.340997247 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.924281353 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411785314 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405825735 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.183226459 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44244114 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.463834997 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910639258 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668921971 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.350524277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418227153 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.642219175 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.45191187 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.418616861 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410170247 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426071518 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.417691511 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435212164 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.420007673 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.549992787 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857503957 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978757984 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176028614 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983643375 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403823881 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.417613907 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.332297204 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869166732 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343610521 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064422005 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600863231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.889791885 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365406117 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622659707 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.628668929 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207081974 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419614492 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637818713 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359930441 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.425721558 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429508268 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620652948 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443920101 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410503397 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347092318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.689360929 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675167071 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414136375 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497021116 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869000499 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414977036 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.196789186 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.417330032 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.752359255 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607021817 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.040331772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.805088127 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411445185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426774622 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903493897 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419570756 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.940511579 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049294067 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440915605 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.635358429 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350239004 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42271893 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422298196 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406396223 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.735637864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.417080227 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677752719 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423561358 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345263965 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414852871 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958106931 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.294406155 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.418515596 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411766469 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179958233 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42083713 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713162345 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.424610582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.224733039 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44032455 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348304743 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347603457 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.107363788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416014075 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387478211 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917091273 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.9075837 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.487109368 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445740251 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265730854 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671633593 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.427815776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.004143202 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66469722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.290421257 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436146098 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.514072814 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420267632 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.401924771 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.295694358 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650788265 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343998445 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639599573 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.366321172 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.321179355 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413078382 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62560309 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296093835 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416750215 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667532463 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.150723283 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.425935102 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18823455 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465145256 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430918152 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.435276295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.952725627 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422112484 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484627501 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426571315 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.426544156 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.42609908 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591764403 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425509651 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426512228 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.43077179 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509277079 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.986682908 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.228404908 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.197581728 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015799166 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19278204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03613258 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453588016 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415884402 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416721105 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351719801 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565750698 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946059413 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690916931 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545469547 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.943396308 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439728419 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427240236 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432873308 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6378394 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693713802 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292277006 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42695839 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084959508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.316438447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427822661 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.628190953 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920139175 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986767603 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53314199 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418701216 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897269906 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692189163 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.509682299 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419268896 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012216687 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.44005925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.772278136 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.443396879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428845407 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574593702 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428184588 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083992104 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447413674 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.578425593 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.191859664 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.564609732 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684517552 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.835438983 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.438186587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010991914 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151750241 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694060529 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48900311 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430767101 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.531804903 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565549736 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.419722045 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.323352896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419773932 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263860591 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.129315364 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.429667171 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018678001 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712452958 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.417889605 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.419754951 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450830574 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.430618726 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643615671 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126101704 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653273751 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430755127 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422553275 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.410866068 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017138772 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459864954 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355739767 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.42463744 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665374327 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685375264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447543903 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.873797684 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.132255808 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97630087 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.401173991 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443418333 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434619938 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13839014 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022533556 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.262725152 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93216299 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087642654 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430693736 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705054735 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.428062949 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423311531 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706208721 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.42680556 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424394377 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442724451 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.014031842 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227159547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.453764495 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.521215317 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.367267037 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.648329969 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183146867 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35985466 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433949362 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.60584618 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424392913 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554402899 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434064494 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.426061971 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43629612 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.165134848 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703444099 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.430066967 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.406395203 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.421060679 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44607941 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437950463 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691635248 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429778359 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.100597137 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.774643541 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681501732 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433658811 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.411575548 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.428729112 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424882284 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150201743 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40228891 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.016706327 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991533384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.442318626 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.444844949 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429008231 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.641265914 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637061464 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432494337 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445856805 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430478658 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447641275 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.331134401 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193698112 seconds)
  done (took 1627.737432264 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.470282568 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.448449989 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.473607657 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.481071978 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451778894 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.530169577 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.509149995 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.562475557 seconds)
  done (took 53.266672624 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.432347813 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.588246832 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.456328217 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.428628169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.445034821 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.423677915 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.921356213 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.457410449 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.436568914 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.436653047 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.441747194 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.430854018 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.10653515 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.447179474 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.426818251 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.428083396 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.433988235 seconds)
  done (took 67.086879001 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.441420583 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.496184631 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.537216646 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.429987601 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.579480848 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.456511996 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.456033186 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.43096445 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.445065132 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.479723799 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.100416744 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.443543244 seconds)
  done (took 80.638994918 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.435622981 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435901493 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435337788 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435383101 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.435557126 seconds)
  done (took 8.520527293 seconds)
done (took 2061.623884255 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.673762893 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131474394 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.076926769 seconds)
  done (took 5.550122112 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.575468259 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.625932091 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.745982188 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.751149144 seconds)
  done (took 8.041133809 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.712427802 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.824377488 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.619628022 seconds)
  done (took 6.497963148 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.862613941 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.436865698 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.561493568 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.427339437 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.438853202 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.438855759 seconds)
  done (took 20.648168118 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.433803038 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.43745538 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.433921216 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.436056214 seconds)
  done (took 7.084090557 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.409498025 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.154432302 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.419644153 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.433757984 seconds)
  done (took 18.760044759 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.180912681 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.193481681 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.177779357 seconds)
  done (took 7.895804386 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.429715605 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.283729615 seconds)
  done (took 10.056284912 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.725576963 seconds)
  done (took 3.069572222 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.567414414 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.76055719 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.478213776 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.40256589 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.523116855 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.350325781 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.101131194 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.680698843 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.374604974 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.652775085 seconds)
  done (took 29.23652304 seconds)
done (took 130.713753235 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.29554147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.674629114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.635428099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.309071218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.664679206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.635677248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.645160312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.281680989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.849663083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.780796309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.277965649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.666345744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.805944932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.677436612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.805104047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.804802958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.66609425 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.334218501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.960050162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.193290792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.641393738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.908648245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.103560216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.000273091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.672560249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.589447253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.498704421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.810292624 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.126407178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.596445838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.598691859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.364615775 seconds)
  done (took 197.220513869 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433178339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.45105933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.43292413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451068598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.434727645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.459990367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.451306812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.451561029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434382176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.442498471 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.434400057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.454494256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.435785068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434313418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.434479649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.44107241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434864158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.465033716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434000757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434593398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.451013718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.451042634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434671709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.441102015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.456664537 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.435770837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.435752108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.45098393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436007872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.452459564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.443847502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443579827 seconds)
  done (took 207.527296521 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4351589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434562829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.456121907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435414622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.436135005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.437800404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.435943271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.44733644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446214777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.444793715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.449882604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.436640945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436129247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453276944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.454562522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.453259701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.439768204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.435739561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.454521805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435967252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437264455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.438353841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.437900535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.468560315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.439928783 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438082297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.436765032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436928775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.454338206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.454618994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445936186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.445451327 seconds)
  done (took 207.542328036 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.638801657 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.444064527 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.44538657 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.40163285 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.445700174 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.445061089 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.440736123 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.634995475 seconds)
  done (took 15.246758879 seconds)
done (took 628.877814641 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.834463627 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.551545051 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.655979346 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.475026635 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.277235689 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.494271236 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.463532695 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.641831293 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.407873385 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658567077 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.699922691 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.480649101 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.835431659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.463657399 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.720317331 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.577797436 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.394408408 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.525508292 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.792935663 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.047371699 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.737926031 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.971298052 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.670773152 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.393763144 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.87931859 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.971780928 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.19213987 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.387219472 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.491252902 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.791274592 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.190593127 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.435291354 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.537951365 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.537163748 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.594692052 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.573970102 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.422258519 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.536020132 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.67690489 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.743099203 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.042848275 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.22487315 seconds)
  done (took 97.35365588 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.430635701 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.429135018 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.429014407 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.428887152 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.430808915 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.431337701 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.429639526 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.429691187 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.43020179 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428998281 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.429523903 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.431200448 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.427821073 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.431139527 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.431099147 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.430687951 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.429847561 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.432521287 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.430138631 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.429746715 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.431179407 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.430630672 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.43239734 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.430411794 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.430917942 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.431320218 seconds)
  done (took 38.543627368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.450296868 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.70312071 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.865084721 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.465193037 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.450244583 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.453634266 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.52854916 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.460918895 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.453498991 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.455273708 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.621375892 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.461711182 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.483871855 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.897665218 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.462216805 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.451682094 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.451148532 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.450929808 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.711661058 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.467643157 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551386549 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.460418279 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.530417496 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.469007021 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.473895419 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45282047 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.456519308 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.974890064 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.481144153 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.620401555 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.273319617 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.536647992 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.94021858 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.902031225 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.281081991 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.463117367 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.452474585 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.626425399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.4651409 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.451994052 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.530398574 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.462997905 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.872325098 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.0812543 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.481190878 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.452709082 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.995477448 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.651250662 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.704216646 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470072733 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.898487384 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.464958131 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.455611684 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.454685099 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.701162911 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.464651525 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.461429177 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.986372629 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.488730036 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533710643 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.464579758 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.454546127 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.720363753 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.462714284 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.705942852 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.457856806 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.461741819 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.472794826 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.873535726 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.465483038 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.094522328 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.48292862 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.454258191 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.624032027 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.715927492 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042952317 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.485547816 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.722248956 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944476051 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.56001584 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.460064153 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.965239116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.563738605 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.468878463 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.457581232 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.457757452 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.456212281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501942921 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.532804407 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.035426521 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114405556 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.019230434 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.564929903 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.478294245 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.457018088 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.989205022 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.486556484 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.457970264 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.871330751 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105603431 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.485715721 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.464316099 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.096032221 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.48807583 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.53615047 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.472215374 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.881986676 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.467203378 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.502218845 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.458097457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.462934737 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.479494109 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.536755418 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.470130278 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.458087748 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.072157905 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.660076266 seconds)
  done (took 190.683586276 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.451842062 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.452057095 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.453699359 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.452781999 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.451104491 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460259647 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.45049087 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.452252468 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.45833016 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.451843981 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.451139494 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.454802428 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.455430381 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.464535633 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.463966071 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.459302488 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.108769383 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.451406108 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.466427196 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.450930592 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.252998038 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.462243667 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.458814136 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.452288247 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.452698232 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.451930326 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.467868095 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.456078789 seconds)
  done (took 155.582131351 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.460580762 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.037066495 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.487912916 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.594028984 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.491022849 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.457383294 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.590622728 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.519834728 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.487886842 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.458670926 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.458052875 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.767214902 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.470681291 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.97751462 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.654854798 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.612115982 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.978969294 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.480678526 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.458634898 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.460475057 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.594585098 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.471001222 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.770376233 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.049375673 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.488475503 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.04045817 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.45400623 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460889753 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.459960137 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.043687119 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.487891447 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.774031807 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.548389055 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.53197656 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.071136899 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.012741034 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00662493 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.614220172 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.461985162 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.460760613 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.460439173 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.444289876 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.042348058 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.490740925 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.463656525 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.028500959 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.490246496 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.464141414 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.469414236 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.460338473 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.523806822 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.551183819 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.801473712 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047762278 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.558354399 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.483655744 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.595607843 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.85587508 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.464537818 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.983147805 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.445935976 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.050114487 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.493084784 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.446067136 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.464566417 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.467797614 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.616888857 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.607768001 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.986552237 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.484754857 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.982814032 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.635125322 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.470729236 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.462398446 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.466608968 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.050346807 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.011399833 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.635565849 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.608264446 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.661486301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.457151639 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.462749027 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.447398649 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.542908169 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.471503841 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.05318856 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.017793548 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.491018398 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.46521496 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466454431 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.466177836 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.645272397 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.08099098 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57143827 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.9795901 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.797502227 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.789405675 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.476949651 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.528237234 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.491995887 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.781571562 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.476707041 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525612685 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.910869982 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.782407412 seconds)
  done (took 173.985110737 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.708638955 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.685369053 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.560579686 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.610715359 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.080361548 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.039007876 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.746097278 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.620773105 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.588346024 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.740729431 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.645583701 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.564595126 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.652176588 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.552040669 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.224861584 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.557038381 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.585421812 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.619241811 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.589607835 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.48258692 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.139819179 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.758485987 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.639638887 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.410412163 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.571001922 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.265350707 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.026985103 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.046822037 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.643374822 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.787633553 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.020559801 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.600672057 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.451442011 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.170678193 seconds)
  done (took 69.759775382 seconds)
done (took 727.255488387 seconds)
SAVING RESULT...
DONE!
