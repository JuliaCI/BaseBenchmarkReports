cset: moving following pidspec: 20518
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.372273138 seconds)
loading group "string"... done (took 0.558896597 seconds)
loading group "linalg"... done (took 7.136874079 seconds)
loading group "parallel"... done (took 0.155827946 seconds)
loading group "find"... done (took 1.109733412 seconds)
loading group "tuple"... done (took 1.740192644 seconds)
loading group "dates"... done (took 1.186580174 seconds)
loading group "micro"... done (took 0.215852009 seconds)
loading group "io"... done (took 0.992253964 seconds)
loading group "scalar"... done (took 37.718184264 seconds)
loading group "sparse"... done (took 11.750803514 seconds)
loading group "broadcast"... done (took 0.968892101 seconds)
loading group "union"... done (took 12.621822181 seconds)
loading group "simd"... done (took 4.521935473 seconds)
loading group "random"... done (took 9.245408718 seconds)
loading group "problem"... done (took 1.925031448 seconds)
loading group "array"... done (took 21.88810944 seconds)
loading group "misc"... done (took 1.782045496 seconds)
loading group "sort"... done (took 3.523306959 seconds)
loading group "collection"... done (took 17.926983553 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486772315 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125714755 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116848039 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120979293 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148531836 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113963303 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122853081 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085289964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.798656243 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153234623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120773521 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419475855 seconds)
done (took 5.122824015 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17433338 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083035115 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083074028 seconds)
  done (took 1.283545322 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066927657 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120751856 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066246306 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068250176 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068145778 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067428115 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067418276 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067111319 seconds)
  done (took 1.644530336 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07284896 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068140921 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070968898 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069343151 seconds)
  done (took 1.399647727 seconds)
done (took 5.69880266 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.771798689 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204620278 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181958072 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.407093943 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131920676 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157388351 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65063496 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314054667 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183872004 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080812796 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104243048 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318011633 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107091523 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.617805462 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076792241 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090018393 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137472685 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413295737 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067193216 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081691274 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08801888 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128018313 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087994441 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074405337 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14146924 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067468486 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135941837 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08281208 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06639463 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2078624 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174490018 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65305287 seconds)
  done (took 10.161311831 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09552416 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097899965 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070340617 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139148652 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099234696 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071361912 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072888966 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069401567 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089308852 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131180561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091325958 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103818537 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067508204 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070336315 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087012682 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206567357 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082201538 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083063611 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071867436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076990728 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121543815 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080588392 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079608364 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079440493 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130807246 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181581485 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098833486 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098813857 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06668474 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081413991 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116895906 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128584001 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06707813 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067848226 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126574081 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095611914 seconds)
  done (took 4.650688307 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.288898888 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139696048 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091807122 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134009822 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0657693 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107808004 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065190745 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081072663 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203495105 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.304442526 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.57722605 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11073796 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103437501 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067575255 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068272172 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067077338 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347724923 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107332236 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103206367 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081457476 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071187869 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068668271 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342163595 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069357381 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065099887 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069492175 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059643068 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126948683 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069557185 seconds)
    (29/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10312675 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.023642935 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072264304 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126271345 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066635229 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110344286 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065501049 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.221518809 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14694903 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070534958 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066310483 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153900056 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071330184 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066583935 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08511669 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104941151 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115119499 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067733449 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068971493 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165555547 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065019853 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065790687 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080893306 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.983404075 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.1540658 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078969999 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065741088 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249722636 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088306092 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071168305 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067003186 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.163271358 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136762323 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069494134 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068574215 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069447133 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070933472 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352816466 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066363293 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.791817734 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070727492 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078410313 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071082425 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071542886 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076774602 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074791081 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087145952 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067796826 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078142629 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067886781 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067570006 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068574395 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087459224 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356397855 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068493654 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069672323 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066406851 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09180083 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098617127 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068778081 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0666946 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101722915 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.170307667 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068966629 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108246938 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068724166 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087240321 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070414643 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116252712 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066754138 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086375826 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068062531 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099707296 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070104514 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099030714 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081123345 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068280629 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395511876 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065088007 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065849866 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069149792 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067621099 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069582292 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067692583 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065787249 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08164794 seconds)
  done (took 21.031137954 seconds)
done (took 38.250495998 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.277602033 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07948497 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079627583 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079526779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079352223 seconds)
  done (took 1.80627958 seconds)
done (took 2.998988601 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122265053 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100685689 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065606202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097699283 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066055354 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102297989 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101311361 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082734399 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101550948 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065661135 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098002243 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066099922 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06608733 seconds)
  done (took 2.345632958 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0825439 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085369369 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071582631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084085095 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065419766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08463216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082777057 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090063144 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082166894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07390444 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065176902 seconds)
  done (took 2.055050386 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081546436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085041566 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071447425 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084016181 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068111077 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082643283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082394335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087313447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08308704 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074799224 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065087575 seconds)
  done (took 2.046423201 seconds)
done (took 7.627772217 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07708084 seconds)
  done (took 1.249767296 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594367207 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.046975633 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081480978 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111491124 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189372734 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123102063 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.282374309 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089706854 seconds)
  done (took 8.87064326 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090619548 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07179557 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084718941 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072737858 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074167042 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073276369 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071445775 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070307323 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073694308 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070659265 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069813106 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070119939 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072350354 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070910267 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073330006 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072795344 seconds)
  done (took 2.429257941 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09212342 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093020413 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074765294 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076540613 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073957633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073781499 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076383631 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074993466 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072753405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073557652 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076746383 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075389376 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074027376 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066785149 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07560709 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077710464 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072520299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076013592 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077241406 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077396791 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076236253 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066557335 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073706721 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075675991 seconds)
  done (took 3.107232501 seconds)
done (took 16.838740623 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113378531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072213763 seconds)
  done (took 1.367234579 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081506932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083756346 seconds)
  done (took 1.352841129 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083588046 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065290505 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092203923 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079069204 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066153305 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06600243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089404784 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065989925 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066054934 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066471569 seconds)
  done (took 1.92961642 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068785658 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079672709 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071490389 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083076287 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076396683 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066957033 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075465771 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069964394 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081278138 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064749579 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073009037 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084879363 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07391817 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086489535 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075035149 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070560897 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072675667 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069304618 seconds)
  done (took 2.534926358 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065753554 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067050361 seconds)
  done (took 1.32898819 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066775223 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064080942 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068228754 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068656047 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06501385 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064573298 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06544325 seconds)
  done (took 1.6554627 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400084512 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112823558 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307321879 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072486907 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084037632 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253063518 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067559721 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071833148 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072348937 seconds)
  done (took 2.68096035 seconds)
done (took 14.047205551 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078037286 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085263674 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096653639 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.365822751 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091690385 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065616975 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114656646 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188905012 seconds)
done (took 2.293768966 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215218704 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613256472 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.392743131 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203113875 seconds)
  done (took 2.408214504 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327782568 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088436384 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060552748 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068582619 seconds)
  done (took 1.753140637 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066041518 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068935632 seconds)
  done (took 1.336451645 seconds)
done (took 6.917228069 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066314389 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086643772 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067844279 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065441202 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06511624 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067656131 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065025057 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066585961 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067230367 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067871501 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069769676 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067433212 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067491339 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067341546 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064969537 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065014095 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067423013 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065005178 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067680142 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065051391 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064976868 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06703482 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065158603 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065163604 seconds)
  done (took 2.852898052 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083310845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06693675 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073051669 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073766679 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072051694 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073391753 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072994473 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06797974 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073035364 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070247633 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071935998 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071524187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069420634 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07194553 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069527382 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07196555 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073127195 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068580165 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070209431 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072183627 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072711222 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068522469 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07155516 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072843937 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07138371 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071683848 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069622704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068679965 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073325412 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071467612 seconds)
  done (took 3.360380369 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069497474 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063046231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065893436 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071971114 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065464639 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067041878 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064796543 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065583721 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066106423 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065148904 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066529271 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065445276 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065030702 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065953926 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06619532 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069389282 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080786413 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065910868 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065403637 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066000078 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068372944 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065316291 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065421002 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.174545665 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06557077 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064861999 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065865855 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064809764 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066048404 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065128914 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067986459 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068543517 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06487209 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072273196 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068476291 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065055325 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068954843 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064703653 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068222238 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064450979 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064450544 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064625747 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06480164 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072145271 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065650419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066564389 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065171005 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065864454 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064878819 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067519365 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064248431 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064756619 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067716866 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066224462 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068919519 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064427125 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065547465 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064343594 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066062107 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064597297 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064946922 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064470142 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067461129 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065032539 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079100923 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071637072 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064845929 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066616201 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065809331 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067694462 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066608352 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077871171 seconds)
  done (took 6.133937236 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09058282 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087478639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066194309 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067296958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063790302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066113106 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069477964 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066071602 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067069038 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071588541 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065572703 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067623893 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067513276 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0787527 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066459632 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067192034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071661438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063902425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065413939 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068844336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066118319 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069343456 seconds)
  done (took 2.760276804 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154655626 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070245415 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105158823 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073019181 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067194621 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072616 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069660154 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069954361 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070831499 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068986476 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069545489 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071561282 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069515129 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069560088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069929623 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069953077 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071714524 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070073154 seconds)
  done (took 2.60483508 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077764637 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066274714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085128312 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066186603 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066231039 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0679555 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070696556 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073999918 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067915157 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065932392 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074635972 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069585112 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070074703 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067535529 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069821339 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067761796 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070574564 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067308647 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075961635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072397193 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072240736 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075909016 seconds)
  done (took 2.782752712 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07990844 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06774458 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084097709 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070852822 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063830045 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066246756 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071949061 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0676473 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071988658 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069290002 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06798578 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065796515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0711252 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067448331 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071375953 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067465698 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069299691 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067409067 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069217927 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063516044 seconds)
  done (took 2.618431451 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087083957 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068596198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069489894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078116087 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069024213 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069113324 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076706622 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068818164 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069057708 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091184663 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068930994 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068715412 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076870604 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07453114 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069366442 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077099602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076864424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076964512 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069531295 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069288393 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088555142 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068528131 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07639614 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068812284 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068770559 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068866475 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068670774 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073653606 seconds)
  done (took 3.283001142 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066841766 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0656432 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063187579 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063489315 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063130968 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06313133 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063610368 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063715233 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065462749 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063373278 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065728078 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065669717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067768528 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067923896 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067380338 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067409796 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067647872 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065327538 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065460353 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064774479 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067612569 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067348799 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067441779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065189193 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064979883 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067316711 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0652262 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064945127 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067016904 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064894285 seconds)
  done (took 3.198629817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075400155 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072462616 seconds)
  done (took 1.378835179 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063277532 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080723064 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064861874 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072764975 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072384948 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068289446 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075943966 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07153105 seconds)
  done (took 1.79485666 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081456721 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079556496 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069314746 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082553554 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079136791 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084471636 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13523966 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069294454 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074963479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066011144 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082034079 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06749142 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074245739 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068260797 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07333834 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074113324 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065489322 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074038371 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069775173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066906897 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069014935 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076567687 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070071516 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063178659 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069493908 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090384853 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078937381 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067262781 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071118246 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074940211 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07337944 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061776415 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067675041 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068232426 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065432049 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077328814 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083328195 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070897879 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076631601 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068736261 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078806348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062927517 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072410755 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073902566 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077447218 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06781633 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068791824 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063090218 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0651872 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070188838 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062564193 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068088645 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062385683 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076886182 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071125626 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078639525 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067102627 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069528628 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071260524 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071759648 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074869247 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070043578 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070679119 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068091646 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078336425 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072493892 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077422187 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062747045 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061832356 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066131152 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077913794 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091009862 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074427983 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068877344 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06924905 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065877675 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071312741 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06890112 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074622229 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074322936 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06812713 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074227689 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075620183 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069174753 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070844365 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07687113 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066521009 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071027942 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066044592 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085121945 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067457564 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066718642 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066387602 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078795176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07145746 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068090557 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066356797 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075456794 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061934934 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068130686 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067817854 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067727013 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077533626 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071286864 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071874446 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076182363 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074243546 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067166948 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06964927 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063677443 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067969839 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066025168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073769691 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06116172 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069338225 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068127007 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066922867 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.203401367 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068168235 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069313067 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077200521 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074945136 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06756305 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06632681 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072200956 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068163794 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071870139 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076656731 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067451494 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064083664 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063323397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072222953 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068600513 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072047786 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073310138 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071475185 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063324275 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067444275 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074332057 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07845971 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068979425 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069690086 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0748383 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069422214 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067992752 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07545077 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071500229 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068037535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074184606 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06994921 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064129074 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072354544 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071992056 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067435537 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072598608 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071796016 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070612556 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069201201 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067406982 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076463333 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069631476 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067365512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068587749 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067528295 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079155968 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070685077 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063451653 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065582166 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078419014 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066137378 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068040264 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067972714 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071052934 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06920757 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066753113 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067852159 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070666052 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079266886 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072666598 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069379153 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0739394 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079934979 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067705206 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071189236 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067676608 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069335877 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069554608 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077308207 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073965131 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07278079 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070711025 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064806138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073980862 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075497545 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067284058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065789441 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067400785 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072549982 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073775416 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072840229 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068978921 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066013126 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068735596 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071549766 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071132047 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067979559 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067278031 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075212894 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066317902 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075787801 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069504062 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078932669 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071764339 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063595185 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071784034 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066446946 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074212563 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063283328 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066173152 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067658436 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068621302 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066351196 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0694109 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061059583 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075033009 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074484789 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067265714 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066181678 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066312629 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073186229 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068393456 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070744871 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070147866 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073008626 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077719046 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066322879 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070727319 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.207556758 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069395194 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063495237 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074800389 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067658712 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067940529 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067409935 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066830392 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072069124 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078570249 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075369225 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062534816 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071660277 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066944164 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067686798 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06421563 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07315565 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071577295 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07046155 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075774372 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069976368 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069612768 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071992921 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068620259 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069966692 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069400717 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072689974 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069797591 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070882183 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06829108 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071673734 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067412761 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066687914 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070801043 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069141378 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068863028 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074610804 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068634496 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069040062 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072132149 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069855787 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069430326 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068898912 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068076434 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072006473 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068844539 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068911303 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070656791 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064249258 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076668814 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068353635 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075729618 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068904836 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064932282 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076094516 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071222403 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074538376 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070025366 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070504987 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070089641 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068046515 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071055437 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075528011 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06643434 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079801763 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077269469 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069570017 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070799897 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068785929 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070252018 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067165391 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068750741 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069228669 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068858559 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068043912 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073002057 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070334304 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068049044 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069831655 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068755685 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068326128 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068990545 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062852608 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067643746 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067659014 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06808672 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078088937 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068632629 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06744891 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066932111 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068824274 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067181662 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065079145 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076265406 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077458175 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068298158 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075189241 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067546097 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069382357 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078927382 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062304752 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066000987 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065692396 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065954722 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075317296 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068603787 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077046717 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067334215 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06696446 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064814547 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067726674 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06553461 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061174762 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064394811 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070503024 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066077437 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066483041 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067334423 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069477777 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068087683 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076629917 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065053685 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066421102 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066820247 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.198006548 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068657116 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068817147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072109619 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070149429 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066684968 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066298535 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068175759 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069316553 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069954073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068353975 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070554291 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078202475 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068945743 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071304366 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072572288 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063523955 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071329942 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068290242 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068982188 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067883348 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072742157 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071972365 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069907528 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077626328 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069241986 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069292965 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068678937 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066681771 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067904317 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067802204 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068334426 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066961504 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07004615 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076511106 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067143206 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07207293 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068638516 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069034646 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076283581 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069619531 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072380294 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076135735 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068694917 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070340018 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077025041 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073732979 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071813271 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070541605 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070869888 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074972788 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068026981 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07456176 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068916585 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069318344 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070333733 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066910161 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067633382 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068525106 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06816502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075085614 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069156521 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067386458 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06776696 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065863051 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069579125 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0719502 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076519558 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071350712 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072323803 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06387678 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064541198 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069790825 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066473191 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070691231 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071216789 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073907007 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070261496 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068272515 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066565508 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076968632 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073680438 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071751225 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065602753 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071513996 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068700133 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070385304 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069206818 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068503794 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069364195 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072116674 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069648716 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067540851 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07582422 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071798264 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069156153 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070363707 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069330079 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068923761 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064021619 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069411779 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070192416 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073721983 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070971763 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068625445 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079565363 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066138263 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069040819 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071068209 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067293112 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072152589 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062946961 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069735942 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068575525 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068176706 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062705096 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066554034 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065473077 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069333853 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066837888 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062619608 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07801355 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076685538 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070548028 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06635556 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.19974642 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065475536 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064463805 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06846627 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070689077 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07083625 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079576267 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068127129 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067940624 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.0642802 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068923825 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071340661 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071926667 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066317191 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064309421 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06781958 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072031779 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074291708 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068376319 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069025269 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072312157 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071693357 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066629395 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072016412 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065346334 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072917004 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0827178 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069399336 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070184994 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076326229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076978348 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070062208 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063710735 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070010855 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07199564 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069774824 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069749852 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070030364 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084986597 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071716412 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067755043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067547093 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071664394 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068568496 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077197129 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069878576 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069427939 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073789056 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070691957 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078178287 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071333357 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076343653 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071606077 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071275205 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067878933 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068591758 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066488209 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067574536 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069031871 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06906195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074179915 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077683557 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068148384 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080168281 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077292822 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069903607 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064194479 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06784376 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067982806 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063826665 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06979476 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066447075 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066593683 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066273096 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066704122 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069398312 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073689497 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069218287 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069183594 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06787977 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062328494 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070218668 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070814362 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069467392 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064743238 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067890674 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068504056 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072032667 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071142623 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065631203 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069786254 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069554811 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068679553 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063250409 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074746859 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06721915 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070373463 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067467866 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068359299 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068972904 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071593952 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072985987 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068993803 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070663909 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07170179 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070568952 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064702304 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064968127 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073116319 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06572926 seconds)
  done (took 43.717174618 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099958508 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063240225 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062538671 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062048781 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074250928 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062483704 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062483026 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063418915 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063538155 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065030039 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062927391 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06375733 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072601053 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078054228 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074919819 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06707491 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061944223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06313172 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061888913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063243568 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070997297 seconds)
  done (took 2.743968288 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073952529 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070876264 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074104148 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077146002 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069180671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072670435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075005771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072643529 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078566184 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069613548 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086899037 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072977881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068190527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067102303 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066663738 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070511149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076493892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066932727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070625736 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072962873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070393175 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073079883 seconds)
  done (took 2.894463314 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066197291 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066458122 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069456249 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063376221 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068060768 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062956448 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071366596 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065457 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070803874 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066706783 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066158517 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06709294 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069439227 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063641156 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067621499 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065559696 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111144153 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072040485 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067046519 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068462678 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063188762 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069836277 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063521316 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063963918 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066616822 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07145421 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068604583 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066120366 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06780055 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067140051 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067377783 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065201608 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069262681 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068305988 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066705915 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066949667 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067391832 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067228886 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063747465 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065686884 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068562218 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063572047 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06782208 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068884007 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065629001 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065294283 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069236372 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066955665 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06310721 seconds)
  done (took 4.623408374 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079891542 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111671077 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070084454 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090168302 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082592449 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077122787 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071515889 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091505707 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06489066 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065853764 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083024615 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081393283 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067386768 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072582771 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071673227 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067579651 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068950187 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066834218 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071467423 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066931155 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071226157 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07376014 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082091209 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08087529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073071727 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067439802 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066664055 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071954885 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080683931 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071743116 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071878057 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07373065 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082573719 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073095215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066364997 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070023082 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083328866 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067836736 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069441442 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065069933 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069237017 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07185372 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07343263 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083278847 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067577573 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072582363 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067131853 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064284939 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079916175 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069532077 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075050744 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081696649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071383255 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067579414 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071586772 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082065896 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067474519 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065406387 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069999856 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079769691 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064818568 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0711474 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080704689 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069183278 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074823002 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081885232 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072277274 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071420608 seconds)
  done (took 6.467710941 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074524106 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072578278 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080623862 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080416579 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071938831 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072385071 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072008349 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072043869 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072312471 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078118218 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074462329 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095292549 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069950942 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07684738 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074321542 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073911577 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07418039 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073476214 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071897425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072436403 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074315268 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081468342 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074398994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081002107 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099616932 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06911 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072825083 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073366212 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082032839 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073946878 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08133187 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07336834 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07353842 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082101401 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081155395 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073966975 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067085112 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073689139 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073995765 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073634126 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069169336 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082109693 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073685465 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069276516 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073911504 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073960678 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081666743 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080836826 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076572668 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078672365 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073954729 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082523479 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07359669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074186 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080978695 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106780309 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082010804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082052342 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074234704 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08157301 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081131393 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088524183 seconds)
  done (took 6.10144076 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083771185 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07447183 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076630417 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062036342 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065657531 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071615559 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066116359 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066142329 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076963593 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076319844 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079640582 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071578224 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074775245 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079189945 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071579442 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0746155 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071974645 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071524522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076529178 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07163648 seconds)
  done (took 2.784870789 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073836398 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085306619 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068962934 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07355489 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07092602 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073760098 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069947406 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070633149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069373732 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071271036 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078599893 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077781192 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069183026 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073603022 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077319752 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073391888 seconds)
  done (took 2.490350333 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075039794 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072328149 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08029169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068263086 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065729205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06407839 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067426643 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063222138 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064442961 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080139978 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067697737 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070243666 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068019536 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06638435 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064552035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070274533 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064633048 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06507285 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067230195 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080148084 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078442542 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066394308 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068927004 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067538181 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067768433 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072979044 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06707961 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065314662 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06491917 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067574439 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06824052 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071239754 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064434854 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065515208 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066470269 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064680087 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067004452 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068095953 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070038399 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067609155 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065311554 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067367083 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067372224 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068436476 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063447719 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067811873 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063943881 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069641454 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065410033 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067622018 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066986086 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06984206 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067732459 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07394711 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070509302 seconds)
  done (took 5.07489732 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0788325 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069923243 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06381588 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065676517 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070417529 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069314877 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071376456 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06956833 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069998754 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065845993 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069677598 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070474377 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069357158 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071100488 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069217147 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071475652 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063576553 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06927219 seconds)
  done (took 2.575710472 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070728512 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065841555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073428241 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065093887 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066293998 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068165747 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061955431 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064527423 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064480402 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065740483 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06548837 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067751081 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066097993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069776711 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067629535 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067342692 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069675627 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0666431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067880515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063767513 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069531567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066631184 seconds)
  done (took 2.792683708 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092023995 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081066644 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.1376156 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07797666 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082691618 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071341185 seconds)
  done (took 1.862282457 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089883625 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079042255 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066458015 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088798742 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073236183 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067586756 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067205126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067341055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076257948 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077825774 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069516703 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078035312 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077368688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077620962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075164793 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075004707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069077452 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068852241 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067504924 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086210954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069114928 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077682175 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069298644 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068691874 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069345121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080126823 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07786997 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077920389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068987457 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0776135 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074920462 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069834739 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078344391 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078037314 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071032273 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078083632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069247666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086080628 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075552838 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077219463 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070984647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075460874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078132275 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074568275 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078103907 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070220333 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074475471 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069409486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069747902 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0881013 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075015434 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077441846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075625633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078276294 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078524483 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088118833 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078716662 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077785258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075835943 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080435877 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077376819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07562526 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077606378 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078339302 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075467139 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07754691 seconds)
  done (took 6.312588549 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082469528 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086749711 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067766477 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076514811 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075565152 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067394435 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067948887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067510335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067215306 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067149249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108076098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067983165 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075528802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076051617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068078111 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068170113 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067806136 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075851148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068079766 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088291898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069678787 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077718718 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077807575 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077519951 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07835049 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074859028 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069499372 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069866823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069444517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069632784 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074741781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06957678 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078115993 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068919625 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077921965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069976469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069811511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074842131 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069755242 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075434626 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077935278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086220821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069697736 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069259198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078533465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069799663 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069622609 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069272148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069236479 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068707279 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078196392 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07788821 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078105658 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077319579 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06933022 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069963571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069395847 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069592791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069221949 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075251018 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077351678 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069283159 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088151039 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069458274 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069081415 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077299952 seconds)
  done (took 6.205515598 seconds)
done (took 130.615481778 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184998991 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165610108 seconds)
  done (took 1.665584686 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069037449 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097563723 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079399012 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130795828 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06671345 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100121598 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099372155 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077841213 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066249675 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066198735 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066186564 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068918831 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133244327 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066340395 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066301887 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068682934 seconds)
  done (took 2.650980336 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09765778 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159730831 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100319641 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06578542 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100412649 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075490633 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067045587 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07669612 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071522478 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06675244 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075261689 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073227765 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066703012 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072964007 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07341136 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075501615 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067185522 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075003858 seconds)
  done (took 2.791486591 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101282337 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091499452 seconds)
  done (took 1.527457483 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154322429 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105094589 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150516343 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346906481 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167278147 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229811618 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129367002 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130616659 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120622676 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.128578991 seconds)
  done (took 2.993109977 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098904177 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154090266 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25582198 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115559965 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072410513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095821782 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119277059 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08037618 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084086285 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083709308 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083174157 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079308767 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101852465 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07608564 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075555589 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078493763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105481985 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07456402 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076249408 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079286782 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10218209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067539311 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076217645 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07439855 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07979161 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079892364 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067586211 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067736325 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079189692 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076387374 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079511056 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09704778 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079858958 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109802572 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072516364 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111411074 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079187235 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075949639 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075763845 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076287232 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080978124 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081293898 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074686862 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078288123 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067187918 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078861635 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067813106 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067541539 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080424725 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069482421 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080562187 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079227514 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110764489 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069096261 seconds)
  done (took 6.061464927 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101169736 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104895607 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072390854 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114951953 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102765487 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073811402 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103867111 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096544497 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106057353 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072744634 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070267719 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072446615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085127301 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086413128 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111508632 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103891301 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073653743 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070442205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106325703 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105618126 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070740203 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097749055 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09221362 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104423535 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068522606 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073050411 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069940176 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072562596 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079216608 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080579745 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071956453 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083176253 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089861211 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08087786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069052156 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070349635 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070577816 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081905176 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081987869 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081150927 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080253196 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069781193 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069808465 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07130343 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07224066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0695935 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082245781 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083024427 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081660298 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071549577 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072171103 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069889985 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071395585 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082397904 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08058165 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083805124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082708628 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070332835 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070642877 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073456935 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082921625 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082086422 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081501639 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071939472 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081916295 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070296303 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082702714 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086168735 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070439766 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071686614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070767797 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071523859 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071741458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08016432 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080469954 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071965359 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071426906 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070253036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082737495 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08125474 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070036362 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079555203 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069320497 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070567974 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072046965 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07225818 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080220159 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082452465 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072342396 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070162427 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071064586 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070187556 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069178221 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078840274 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081006475 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079823395 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079912583 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07068144 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080280843 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080270472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07112941 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082387421 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068388484 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200516308 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072602439 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081980314 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080927309 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082417791 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072721595 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071155398 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081657438 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082563273 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071061843 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081989427 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084279489 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082994412 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070354621 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085416469 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072226578 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083046112 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069546299 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080913145 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069408185 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081683469 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071413641 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070680855 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071174487 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082163654 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073863589 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071447559 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071880938 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072358918 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082804184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086317228 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073188524 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083859088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080970978 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072726897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0818494 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069738771 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079710807 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069975438 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069757649 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067633697 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083123338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06856141 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069323606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069445752 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080989684 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068621227 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081037765 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078148017 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067824206 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081751288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080208759 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077147199 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080044888 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070321737 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068705456 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068741379 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069891704 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078062078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081949728 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072659278 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071043617 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080755864 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081981582 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069285299 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080558287 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080592898 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081197506 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070638315 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071665544 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083449735 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082199892 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079734401 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078434265 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078751258 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06860672 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078849404 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080691565 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07041804 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086729872 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07045795 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085218491 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082071289 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080033659 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081795883 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083498789 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083074497 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083222366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084421225 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069780296 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070720376 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082033471 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070411012 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070981343 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080226421 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071399156 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070868619 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08524556 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067444357 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078467261 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066883011 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07966557 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068153287 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070721312 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084103577 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.201643576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072848444 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082950774 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071686093 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081041222 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081413713 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078848733 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06883639 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070163574 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080417082 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079200221 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06837821 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069426416 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07182749 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081650815 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080723024 seconds)
  done (took 19.04581021 seconds)
done (took 38.075968555 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211536357 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153761412 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200849297 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119647163 seconds)
  done (took 2.120244213 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125200961 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104645744 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09905469 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067065514 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105003727 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067389841 seconds)
  done (took 1.940891928 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31247322 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210848849 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181611671 seconds)
  done (took 2.075519541 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204333363 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19208179 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398967683 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257572573 seconds)
  done (took 2.535790187 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.1469033 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092274029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068958139 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08531984 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138125664 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165356448 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104618199 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129400077 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080530771 seconds)
  done (took 2.432364798 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151733049 seconds)
done (took 12.629395559 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.240440464 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137417788 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102742373 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114002393 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083764096 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.196286521 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078730793 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.202480402 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079442569 seconds)
    (10/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.176629012 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188946411 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154750402 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07560403 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146429675 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075790862 seconds)
    (16/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091713605 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075841369 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.222684719 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.20383511 seconds)
    (20/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.130836551 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073856151 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.105116468 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097438748 seconds)
    (24/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104019839 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105461823 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134098801 seconds)
    (27/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194210109 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077591152 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.178102171 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07482634 seconds)
    (31/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141261084 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072926118 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106337682 seconds)
    (34/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.144052653 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.063730767 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075853529 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171712058 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165097714 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092029566 seconds)
    (40/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146523551 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078647661 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079969842 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110562861 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084374643 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07343455 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158884999 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103000037 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189794251 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154982735 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076427377 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066897554 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068261505 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094373738 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053635654 seconds)
    (55/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110925641 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097472332 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178248594 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074084484 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.138719845 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109173097 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.210195588 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.075303098 seconds)
    (63/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053461083 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074029058 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074267815 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088419951 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09148235 seconds)
    (68/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.220953768 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074847361 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189664007 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095446317 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053203884 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068694877 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076442987 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17568923 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.15204551 seconds)
    (77/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1002856 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.191360994 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074576746 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074269604 seconds)
    (81/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081934324 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090949976 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121814447 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.201132904 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054607516 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.264292776 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115067698 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079631139 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078520861 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095993642 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092196631 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093750679 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091059287 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0911857 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.176270095 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07228419 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077603123 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072992983 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069050071 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073442582 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190224042 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 0.068274147 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17861315 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073846367 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141436347 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101765335 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.162201777 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075271958 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070024984 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074102461 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156070178 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154198285 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19147272 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090804611 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066276556 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068534461 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151213797 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074141851 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075213194 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070857275 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188087605 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074623868 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094615496 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053571927 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073632049 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073612696 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.1375796 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073548098 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138270896 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053671117 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090231238 seconds)
    (132/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069426004 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05254071 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066852271 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066970029 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.136404631 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074892542 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066731115 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073206573 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068442612 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052822694 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10841935 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073277754 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054204956 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076240408 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072114301 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073336229 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052609809 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169334889 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065793644 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137374977 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084750621 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08994273 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052991699 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052895783 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069933435 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06737664 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153202934 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080638985 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073730317 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108399335 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054710912 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07694812 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117013261 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067039595 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074097148 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160732122 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18301329 seconds)
    (169/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067419889 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074901691 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066113992 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073517121 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05133285 seconds)
    (174/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068339704 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069316767 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102344244 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077435931 seconds)
    (178/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.15233972 seconds)
    (179/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070671399 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05574297 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066857499 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101321058 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066378635 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073297868 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054242784 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052878643 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066763727 seconds)
    (188/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053454196 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 0.129345857 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062684745 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053964723 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054133622 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053172157 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066236935 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176342884 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067361701 seconds)
    (197/309) benchmarking ("sort", Float64, false)...
    done (took 0.284492782 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052469479 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05210861 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088219543 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133779891 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090781119 seconds)
    (203/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110019863 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069158349 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070029824 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068747869 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066897707 seconds)
    (208/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072641829 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0739431 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06371959 seconds)
    (211/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073465686 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089188957 seconds)
    (213/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052210728 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.151053304 seconds)
    (215/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052833604 seconds)
    (216/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087466821 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093754654 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052663655 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093035791 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064008093 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052610968 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107356266 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073513771 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06635709 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051640939 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053812595 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06195741 seconds)
    (228/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072957862 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052098318 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117485077 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05206027 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074825515 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072131743 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065396215 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050757097 seconds)
    (236/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157617036 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121121466 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071089378 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096338053 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051694708 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066924896 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065068215 seconds)
    (243/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070168954 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051436044 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063861209 seconds)
    (246/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051926157 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167483848 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066162086 seconds)
    (249/309) benchmarking ("sort", Int8, false)...
    done (took 0.13961573 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131701271 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099004912 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052556518 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064734428 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066362303 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053440056 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066608007 seconds)
    (257/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061884715 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075892105 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080036114 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065050211 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072917044 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065939919 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065311748 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052146257 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071857774 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088794495 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05217635 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072786143 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050958627 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074186623 seconds)
    (271/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074626665 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061675542 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052195776 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054334615 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167646548 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053868034 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114523459 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066656719 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067225557 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069182357 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080031905 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074640664 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06614016 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074346414 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088409614 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066133737 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063320308 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052965995 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054250218 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074579689 seconds)
    (291/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183913095 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050974169 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050885838 seconds)
    (294/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06989072 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067363318 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052144255 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069899934 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148731108 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064876155 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088766489 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070918246 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05105365 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116477975 seconds)
    (304/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067632887 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070549926 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091929774 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08589201 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136231034 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069276415 seconds)
  done (took 30.945202612 seconds)
done (took 32.327198796 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086148793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093338433 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075259526 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093446756 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082059147 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076855201 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072684172 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078560509 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080261515 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082091899 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079076626 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055128585 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07451311 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074749309 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077107639 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095443879 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081698263 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075234945 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076051183 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06700887 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075471207 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068215334 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070137395 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057318142 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080677412 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074519547 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07507421 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076730007 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068262695 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068455876 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07220854 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076073609 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068627769 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081171215 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075255787 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075888191 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077539962 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079548594 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070188609 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068613113 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077036286 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0679392 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07377352 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073507768 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072306923 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071884202 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073070617 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078572 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091263926 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068696938 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074596523 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076012135 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076804957 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072638247 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069700741 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073309503 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070763285 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091534357 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073705448 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06787104 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07420362 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073923841 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072893048 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075423413 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075686704 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078414296 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077831574 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073582819 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077433906 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073416314 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067952992 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075731037 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071806157 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068002927 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078524045 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079207714 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066620668 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073538634 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074675859 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074350644 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067300066 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071351787 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067582851 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071391722 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067287644 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055190313 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071456243 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073545881 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066429613 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076201103 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073908223 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0740413 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069422792 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077514968 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067473568 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072503068 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067548834 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067777403 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069269344 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070989232 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067353446 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070579945 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076181513 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069061305 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073208644 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081582356 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067851565 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07352838 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066160629 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066339254 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081351872 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076575411 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067024228 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070497963 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066136682 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074348553 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06638282 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067429738 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066952539 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066867483 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072471181 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066678308 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069597446 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073894474 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079380308 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066449959 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069688587 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069417298 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066809184 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072239263 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067384254 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.203310393 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069411334 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06475882 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071276267 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068598076 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07506328 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070973346 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076007499 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069063967 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075305829 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072579039 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073445041 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073321284 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066397102 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06149996 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071608551 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071102082 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070216491 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06897473 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070105227 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068089177 seconds)
done (took 12.738195815 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067179873 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145633073 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100120117 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095418171 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086101525 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067425484 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07635181 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101780988 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067973087 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103077185 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087360871 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085211202 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112531686 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064973135 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066052642 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069922289 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06785706 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081901502 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101193422 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08701274 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116648478 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066864107 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099682734 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093866933 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089670288 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092846475 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069539773 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071581959 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072080302 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104247653 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090824353 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072334605 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069012528 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103736031 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09428792 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084247141 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066351548 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082733723 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066897777 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068194484 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070364074 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101677332 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082933122 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083636248 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072860157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071607888 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069976827 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08668108 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092875855 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08200327 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09004502 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106338794 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07170208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067876285 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06696054 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088327933 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.068008165 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070854661 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068628259 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069780238 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067167251 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070756108 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083859297 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083865419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07116852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080239994 seconds)
  done (took 6.89473163 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083407975 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091213649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085291118 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083581488 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066689036 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068332856 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068802818 seconds)
  done (took 2.027127998 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06718792 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089878569 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089966259 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089186664 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084735459 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087378666 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076169225 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066538775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080830487 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067823746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087524569 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101865066 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066869083 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072935446 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091312596 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067854326 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093676559 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068957689 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072260435 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093525666 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071359045 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085106223 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07220979 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069034864 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083838172 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069400273 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117310007 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07327106 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070594708 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07202916 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06679458 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110546852 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083487335 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078551797 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068560958 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083357403 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083321989 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06656528 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088888175 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073981443 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08235954 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069003976 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069699476 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066290137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072375083 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077217841 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068914558 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068767001 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071267926 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088584612 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069625097 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082392088 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072173723 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071651643 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07003049 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072682269 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078364783 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06905121 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089022224 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069973348 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086181899 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08607096 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082382688 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085631291 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070970333 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082459651 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082833621 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07118918 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070225728 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071887529 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085770894 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066892096 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070146464 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079544094 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070363171 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092914698 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093837006 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07049963 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077749559 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068618797 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06835199 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067558843 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090906462 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069747412 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066026953 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073056904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071631255 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066816485 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06774583 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072187437 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066749546 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069456477 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071330957 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071391346 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070696999 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08587939 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070849097 seconds)
  done (took 8.940205702 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069470852 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068550255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07021099 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068539348 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068559548 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068001339 seconds)
  done (took 1.916879744 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093492969 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069192128 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080531341 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073212686 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104387795 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086464047 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087361095 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078725362 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083881319 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079292315 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087359983 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088068186 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092676308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074136021 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089144469 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073449335 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090319167 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078877717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081308709 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074215492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086715217 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073262799 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073449255 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081753637 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075361019 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072078603 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068597942 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079867228 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079991507 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07955477 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073988918 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077340671 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071541469 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080084572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087037901 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070745968 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072051479 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077229297 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072713096 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075650454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087929432 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073071304 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074785836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077713559 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078670364 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07082732 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077923459 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076299717 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086088727 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078262409 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079778766 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074156785 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07790923 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080101704 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073405397 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080223656 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078955329 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089984565 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074656522 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073539142 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071423889 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077909536 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08100611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077919042 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081570856 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079534767 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07313034 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075000264 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075462134 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073756514 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078867843 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071337428 seconds)
  done (took 7.156926555 seconds)
done (took 28.403508821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.5459529 seconds)
  done (took 2.016819757 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603120531 seconds)
  done (took 2.097374882 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.093203662 seconds)
  done (took 8.579988224 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393004654 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473967864 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691656209 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130576125 seconds)
  done (took 3.219634626 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678236146 seconds)
  done (took 2.173827194 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207787333 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196521509 seconds)
  done (took 1.912354551 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376756294 seconds)
  done (took 1.861610783 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100539371 seconds)
  done (took 2.587026622 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261178746 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163543602 seconds)
  done (took 1.919179296 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.469835276 seconds)
  done (took 1.960570063 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.841695971 seconds)
  done (took 6.335245441 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212720507 seconds)
  done (took 1.751105457 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242259629 seconds)
  done (took 1.734833796 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.751802791 seconds)
  done (took 3.241326449 seconds)
done (took 42.890904318 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080557717 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081433269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080724648 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078427373 seconds)
  done (took 1.798590961 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076969009 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074047488 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076425044 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072314271 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076526204 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072380581 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074310815 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076990653 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07301947 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07314492 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072678765 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072977629 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074785616 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074304829 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071107014 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074994345 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076323139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072891565 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075621011 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073047878 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070838635 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075089266 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075640933 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072790254 seconds)
  done (took 3.271597536 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078468744 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073019503 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074697464 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072578502 seconds)
  done (took 1.798565576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077698605 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092423905 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089477728 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077281545 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093051023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086381033 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069429946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069605224 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073988931 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076826287 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067983092 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096150898 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087926207 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076841013 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07889521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066135547 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06822354 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088314744 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077320813 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077947775 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070091388 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077450454 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06793712 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08848889 seconds)
  done (took 3.391841853 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077609729 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103696433 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078088421 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087800702 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090229354 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065722769 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07430814 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089079611 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123268864 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065910566 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070040229 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065785259 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072151526 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065187007 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076277472 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104447657 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108850896 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069047225 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095774629 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065385141 seconds)
  done (took 3.153527127 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072438787 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069756722 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066194369 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069321733 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077402195 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073546484 seconds)
  done (took 1.935520565 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068217275 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068138533 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067277855 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066896575 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071561416 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06780888 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066877546 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067345252 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067320319 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06702374 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06677708 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065698223 seconds)
  done (took 2.309374812 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.171250434 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068544473 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069908227 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066046452 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070904085 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066973632 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082761873 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07023646 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094260003 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069108743 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069061409 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070954139 seconds)
  done (took 2.470210726 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20687705 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076168388 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237184076 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137406252 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111767539 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116065855 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105805572 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115707804 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146568493 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105535166 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172192265 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170000034 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111130323 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141361211 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091991969 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100023067 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158039022 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162443116 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106400192 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16928362 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145062648 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124585478 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150516656 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104988022 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109069278 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124362113 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071494232 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080897295 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172224092 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135035267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149374121 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111303053 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093677578 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17737563 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171825612 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143301549 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135140633 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08414355 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103382867 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13493632 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199986575 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088339406 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163351031 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249600319 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084517223 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136550793 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122615041 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12073075 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10738548 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090364246 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147492494 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184758642 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140710669 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087211321 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112712292 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117281649 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120564356 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106661883 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185961136 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163322601 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127843291 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071551404 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100068083 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154038769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13223342 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111175545 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127192991 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094563403 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133441302 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155152425 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118766187 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14471118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128674535 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088956046 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119617052 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141411311 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129025251 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17019664 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125022668 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073419068 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12598082 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104027933 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08221684 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143208602 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075867887 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175243074 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098674887 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106691441 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113561003 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111153322 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112920051 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163520302 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141904865 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24869075 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069046568 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10682298 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120944223 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149354522 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088395273 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108949902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117359397 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078321728 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140240786 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075488176 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123599436 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07550875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126777561 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134000604 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079537785 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124241619 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101779023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100353535 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133917557 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160829567 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090246854 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082930027 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168686291 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122280423 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105065536 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143921179 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156690264 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099426818 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103146499 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150364726 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1808127 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089707453 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16368402 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107982439 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08409426 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08778932 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124194832 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112967608 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122206243 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082539307 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118906873 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169596235 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075229562 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095614357 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134118881 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079781782 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08062059 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105175739 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103422423 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095676982 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100100243 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104085783 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1371829 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122517968 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103398104 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27388656 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10117304 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17131582 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088791073 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101192578 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104567673 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070145039 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137607877 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157761529 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079080764 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165927575 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12386925 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105435922 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119120449 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083125561 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14135102 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079268016 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070996399 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143971912 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111308599 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110995383 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150698477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105875696 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130527428 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123885272 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13976838 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13736856 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133946671 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109309291 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091110931 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115502545 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128869081 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072831003 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09166893 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08100529 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105258695 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097780306 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084794344 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143264263 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125175848 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100562167 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112247551 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097342588 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147818851 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076822856 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129631229 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119661321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095814856 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156425913 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156601292 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132988902 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101076164 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144614385 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069559386 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075352338 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.23954898 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127484776 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084529818 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083321119 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118593626 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148643327 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130744855 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138961795 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112340763 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123962215 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156849309 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069893783 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117315348 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151633236 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124539269 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105942784 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094656842 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103194675 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14547025 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110573078 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183529538 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114620899 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127701353 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156340638 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10038369 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080469524 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105507533 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137570079 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106939388 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147977217 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101556783 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088686629 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11130918 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074558372 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100357501 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130132288 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121122203 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136530219 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115181052 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133767619 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077248224 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117557229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120835183 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124397991 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064116068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119688662 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164431358 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093562168 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118574268 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154969927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080571856 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124327079 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323425437 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147605468 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085102798 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110316042 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119914241 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129068912 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121431926 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140290923 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109195532 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136157935 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109878925 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086610336 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087826223 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097663777 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105650556 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094895245 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108867156 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115362318 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095655095 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133317651 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103935134 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109433153 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118464542 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096734233 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09018645 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097506392 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176516 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120920303 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171308164 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099651107 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145364221 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165065812 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074835045 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079150068 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079674944 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141019811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084449512 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131559488 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099543646 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107976459 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125327409 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142460845 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095678453 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068787764 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109115676 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137860365 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115527045 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101315549 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108575025 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166171308 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101011662 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082073819 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11628304 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104318344 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101954551 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31962746 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065599242 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100428001 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076873845 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081025021 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128740403 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153668887 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081311537 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103344765 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119319944 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111029678 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128629009 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102281524 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0996242 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115093919 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150951694 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130435851 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090076772 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113426054 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130452411 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157749767 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105738995 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096002972 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19053745 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153296271 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160875964 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088946856 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114189091 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114746641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108852517 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138898611 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083745658 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166630767 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084953411 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141645434 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108287599 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093774649 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134652131 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100997492 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088657825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149058633 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118197668 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083535688 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078015233 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118267886 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120306158 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106359763 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075423487 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139173014 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073085945 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132615052 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171785499 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082686651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252648889 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10086629 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081492638 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108576542 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103709592 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089407081 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098853406 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174134867 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089575632 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152090739 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142998877 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113678411 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137754492 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100561931 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635674901 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078339675 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152268712 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11703395 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173732458 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097347506 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117767739 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109286668 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124886503 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144775769 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105687326 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179265337 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133124675 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116666247 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080255942 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103141245 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103405989 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089363091 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10565405 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113795649 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116515648 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094497786 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11641808 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124301529 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082237354 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095737164 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157212128 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118190419 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145191481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140290324 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084785542 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117530091 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138685777 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079692633 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122092633 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154006395 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106371023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243742581 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084342687 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105002191 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174306513 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075850797 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165861372 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120369225 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110032245 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114058783 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115539629 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131490686 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108798475 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122464782 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095136543 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111078243 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11328902 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08258312 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077048869 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106281227 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115166306 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097971978 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099858164 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09796456 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152286203 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071768945 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097143704 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10602186 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146197269 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174796046 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0912662 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084913051 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121226562 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112938359 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113936942 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122507687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082684736 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084718895 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084316505 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079917415 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108616836 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112720006 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104718333 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112262636 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165118841 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083064255 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226886397 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09542248 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104849334 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06994657 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078961292 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096439229 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097507382 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108847725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100249619 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168479489 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094438526 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092575186 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093634609 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072762026 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228568045 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134632162 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115554229 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124297607 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102556527 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066296742 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113012592 seconds)
  done (took 59.443123144 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110133161 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082955793 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096804187 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150480894 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123619435 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21166244 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158536204 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199965955 seconds)
  done (took 2.746530047 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07211292 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094965523 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103016912 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085272168 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066505227 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069461726 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225443904 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082339074 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066946216 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089096269 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079873473 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069513841 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428133393 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069116837 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070368866 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063960544 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068034361 seconds)
  done (took 3.405896617 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367933955 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602175141 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373590987 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073749883 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.842965419 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092995006 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.030310157 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131360153 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073869127 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537186256 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704923596 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12444246 seconds)
  done (took 18.568435157 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076091614 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071064364 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085838047 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086827519 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074997322 seconds)
  done (took 2.0032955 seconds)
done (took 107.847284058 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08065461 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400598361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055716352 seconds)
  done (took 2.094149308 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083065244 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087796023 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087586299 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087077399 seconds)
  done (took 1.964192137 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075955209 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077531537 seconds)
  done (took 1.767157596 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227712758 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138687085 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089797827 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081895719 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07854754 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079450863 seconds)
  done (took 1.853116355 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072565979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075191662 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073169192 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076309621 seconds)
  done (took 1.9057335 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076929039 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055569933 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057581875 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058561389 seconds)
  done (took 1.85735039 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08549471 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079811614 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078725073 seconds)
  done (took 1.854237493 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102179172 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085443683 seconds)
  done (took 1.79616384 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082519081 seconds)
  done (took 1.692765025 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099913768 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11294103 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129598272 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113389842 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140978725 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108653144 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085751597 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086862477 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077116727 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08734908 seconds)
  done (took 2.652105982 seconds)
done (took 21.583281098 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080072439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364389655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360529886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089415216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66745811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35616174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967095535 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094026181 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115910603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069000745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085378707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650054551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994015724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3207524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981148721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.408817326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649544642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06863352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068194022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069201178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954269262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068068512 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069181225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071257978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652639726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374648287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071276818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413864725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070925436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072871003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358210718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070805887 seconds)
  done (took 16.304957884 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071206381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118174182 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076520962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088077607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073779879 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07289675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074353005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071939726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123487286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070961988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088617988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07077968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075113842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071601055 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090908875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070771988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072384049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071898082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071201302 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071438319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09045209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070240511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070779745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071539761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071035352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083064586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07145548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071291336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071887519 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073410725 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074345328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072010826 seconds)
  done (took 4.111693617 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11473012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125492101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074646724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103588803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113837193 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071390329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143984495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093703568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128991288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070991724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087920206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071006901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105333716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072003375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091028813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07173656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072584087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071519556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07061741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070172536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087446307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068268755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068870631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069073233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068450636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081464099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069050599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068651384 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068533087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072220379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074187585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072295268 seconds)
  done (took 4.319671594 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072661307 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075825223 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084003098 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087122127 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072184315 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074439565 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07506876 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072759359 seconds)
  done (took 2.24135206 seconds)
done (took 28.594334925 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078937905 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07023112 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075224721 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083508579 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076049873 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082127932 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069720862 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077888839 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075135579 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075773125 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077903628 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070440154 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073511431 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069751099 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076572206 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070559467 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082556957 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074642107 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082470849 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082711027 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072664724 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076377399 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077024038 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082973807 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082859505 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082663889 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08042915 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075822574 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072024678 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073872149 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080734214 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090894467 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071104634 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082594225 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070755502 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07036373 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075305838 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070798193 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082875519 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079548682 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072655839 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078950892 seconds)
  done (took 4.835486367 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090088462 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094702642 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088212144 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064710797 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070339846 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067626074 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092254643 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062330237 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062511763 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091486902 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058544484 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062806986 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065412964 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057054524 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062181804 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060022228 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064828828 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058713722 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061785033 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062296311 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.060515142 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057364832 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062642154 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065534523 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061460924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065168184 seconds)
  done (took 3.409066394 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075880988 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086828228 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091401714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131390358 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106775398 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079449169 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081013166 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095301314 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088319368 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06934392 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073963526 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096893473 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090901469 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076751046 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070581894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087494948 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085857322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07179189 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076652092 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094291393 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087817969 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086699775 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095728005 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083928636 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069534445 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072305893 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074241448 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085024808 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074834006 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079480018 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074588212 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073602444 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071880952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081784016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073714142 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071473183 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093953437 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080045133 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080409199 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071020882 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073859312 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07110753 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092358926 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125734403 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069613738 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077358744 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078534665 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079533497 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070009422 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090530585 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081077563 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069874196 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073190398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069388525 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070108356 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08339396 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072062765 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088489385 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079846135 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073256314 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088389875 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0743243 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086221962 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070254982 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077820038 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069358606 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070887097 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069354242 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095761489 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072325394 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112533035 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071503833 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070901105 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07915912 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077913846 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076474358 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070675808 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086102318 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080763388 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07405145 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078686619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07406909 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073437244 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090399996 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072350188 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071645346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071157306 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076836647 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07385897 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072084209 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083691147 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070203921 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073401627 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087379004 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069588181 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071368979 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076576803 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075855796 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069894483 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082187637 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074708802 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070983611 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079520633 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070370159 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073471684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080547722 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076984153 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069324087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074882027 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076402435 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070822747 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071283066 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072920641 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071727809 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078641683 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076448652 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074404623 seconds)
  done (took 10.895886679 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16128642 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155251604 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071025875 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150533404 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079885837 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082399197 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152948617 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098684412 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070711723 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071452357 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071760571 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114739281 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109990272 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121880615 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082259684 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070588321 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086898698 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118873904 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154454051 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147661013 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086554901 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079779479 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07299962 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071981579 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073362959 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081597361 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090204119 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076955826 seconds)
  done (took 4.477313679 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084234532 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100794578 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076697483 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092510135 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094453943 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070723362 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072973323 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072467358 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082962555 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081534563 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069602077 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075141183 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074212465 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071924197 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068920202 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074852299 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074892949 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.0692152 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070815875 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073292569 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077362985 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080802578 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071741888 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068808623 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077080178 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069801164 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067278024 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088220908 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071286194 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092843047 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068446589 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077454392 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084491126 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071271383 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07048302 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070156814 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070181801 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069967782 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072009901 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06911465 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068870851 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060131713 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069443669 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082144918 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07676981 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059162988 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074911947 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075583254 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074207499 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065387025 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070703508 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070014498 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071891886 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074451435 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072543012 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072793628 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069345946 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066339251 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07754226 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07000371 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066985194 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068696348 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074417407 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067763569 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077570077 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074346566 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068134757 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069520829 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071618348 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076096273 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070127366 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073515402 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067538465 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071928543 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074784321 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07195952 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070941608 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068497154 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069465741 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070305559 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058110259 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070040078 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055978671 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073616335 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068142225 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068354048 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069858763 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074730491 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082435341 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071148083 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075778442 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070807252 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069748726 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072922591 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062784436 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072925792 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085961526 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085517816 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070209403 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068129677 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084940175 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07208525 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066812671 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057740151 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078523886 seconds)
  done (took 9.334848709 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089043096 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070033967 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083798036 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091001487 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086837364 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074380886 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076755101 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07067782 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084559718 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075551156 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077157631 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069746708 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079566317 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079312668 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071246836 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077035609 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071844019 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083114046 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082363489 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068473512 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078590587 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082569959 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092551381 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083207182 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081302161 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083163361 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092681986 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.075186082 seconds)
  done (took 3.913012212 seconds)
done (took 38.487693775 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.710625779 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.876715113 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70132723 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.044513195 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.833499572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.723266188 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.874544322 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.696076342 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.058943327 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.741759025 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.968586955 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.743731342 seconds)
done (took 64.615615001 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.784695207 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.839940769 seconds)
    (2/2) benchmarking "String"...
    done (took 1.971806018 seconds)
  done (took 5.451035681 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.000103714 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.238345233 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.942662613 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.697446204 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.701045727 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.005928884 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.500699709 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.255007463 seconds)
  done (took 29.980550504 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.777330055 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.924250245 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.361644862 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.39849701 seconds)
  done (took 15.152164872 seconds)
done (took 62.097042265 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.709380006 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.761565159 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.717394145 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.680137268 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.75327317 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.701272005 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.064356444 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.707130469 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.695301428 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.681552868 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.696724554 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.116005016 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.699494467 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.105788897 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.697877158 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.707595211 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.745947471 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.199249512 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.854960892 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.705971559 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.700488572 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.733215541 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.702769501 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.704574892 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.720316112 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.698106266 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.122370123 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.710897857 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.530641184 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.702328218 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.753861537 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.223357282 seconds)
  done (took 201.942111602 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.698511491 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.622723128 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.71955117 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.700518272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.098811979 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.880740396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.814064073 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.150835112 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.700712926 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.711767639 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.832004747 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.702673839 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.871993347 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.647791202 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.73019444 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.77529064 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.859547221 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.87096158 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.736426049 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.854735525 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.726261922 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.807994038 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.685928256 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.835586188 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.712892723 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.760036567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.70743603 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.705489076 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.893951531 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.819028193 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.713943079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.709623903 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.897434396 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.57104545 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.718348126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.717430198 seconds)
  done (took 166.604197326 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.867629997 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.700597825 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.700071129 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.699866689 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.705591722 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.698355605 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.820862703 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828168896 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.153101819 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.012667967 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752454193 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.515942119 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.699795595 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769030165 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.711633783 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.700639478 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.715734595 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.726686962 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702469391 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.703073254 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829132831 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.710570436 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.710943615 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.707127201 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.701575245 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.705667556 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.069321837 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.700458989 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.708263461 seconds)
    (29/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588255908 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.356620369 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.94926394 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.701885226 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.701215833 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.701037889 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.699932124 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784701049 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.702284563 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.707729219 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.700839798 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.923351286 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.702227218 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.702359496 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.705026601 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878700547 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.700522081 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.824838077 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.701130335 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.204272941 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.70251335 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.701667658 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.700783003 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.312018011 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.355965576 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.704024442 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.70290511 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.703676706 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.702171409 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.700822747 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.708764395 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.36256685 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.777065678 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.701529684 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.704992709 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.706760485 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.700738921 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.887078151 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702696919 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.110226303 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.761327626 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.821611378 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830087338 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705087583 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770040515 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.794428736 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.701339869 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.70171046 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.706285847 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.702468512 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.782654388 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.700652787 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.819641095 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.709645289 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.702365051 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753593252 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.77062819 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.702143073 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586338615 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.705870231 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.702328363 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014190564 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.770260335 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.702925854 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.705155824 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.705153227 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.82519768 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.825969545 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490319173 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.707275965 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.540269165 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.713159121 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.845016458 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.707068309 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.882691555 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.705081169 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79357569 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.710848579 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.709649132 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.707035522 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739978169 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.709825689 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.766206432 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.707052776 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.708473857 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.080283108 seconds)
  done (took 393.603543211 seconds)
done (took 765.713815759 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.41028288 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.359186241 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.467585733 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.384727327 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.359682334 seconds)
  done (took 13.630655545 seconds)
done (took 15.276967258 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.793449328 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.798350942 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734197785 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.797022248 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.727386347 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.798333461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.776924815 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.733832811 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.769565332 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.732580668 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.76601216 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733106586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72265431 seconds)
  done (took 24.532163503 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.945710482 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.950517055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783731012 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940875036 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.760644689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.945288141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879424158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.86260844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.867967229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728341656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.724389873 seconds)
  done (took 22.040239724 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.946664494 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.955269995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786983114 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950008279 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.760203656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.95338153 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.875835193 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866690353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.864423407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.729502263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723862796 seconds)
  done (took 22.063763008 seconds)
done (took 70.284466188 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.718925927 seconds)
  done (took 3.369241642 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.739640265 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.879237872 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.722423033 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.721832153 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.721157041 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.720653195 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.722941727 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.719929551 seconds)
  done (took 15.599377909 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.715051421 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.71602744 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.719040026 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.719420909 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.72047076 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.718679644 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.715745489 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.717459061 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.721020084 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.714672431 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.714070401 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.715447004 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.719046951 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.71559264 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.722678532 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.719308989 seconds)
  done (took 29.135202235 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.718268688 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.717209553 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.716995275 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.719826368 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.718430352 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.718387824 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.717734571 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.71756213 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.717487265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.718491086 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.718167317 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.718058872 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.718178722 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.718056787 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.718664462 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.721057032 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.715369357 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.718483496 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.722435638 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.718435453 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.718758788 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.721571968 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.720964597 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.720389422 seconds)
  done (took 42.90409717 seconds)
done (took 92.657003824 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.49341654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.374872727 seconds)
  done (took 9.519863915 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.72491537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.722307467 seconds)
  done (took 5.144568009 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.721412573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.720660073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.721063226 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.722403037 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.72247977 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.721516002 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.723939949 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.721125934 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.721494976 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.720317457 seconds)
  done (took 18.86859948 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.723248699 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.720459419 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.720160745 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.720977819 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.722242911 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.720035212 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.722897392 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.722821512 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.724235491 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.720862674 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.722579947 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.721069275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.721740789 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.720283607 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.722169022 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.721020472 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.721690522 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.719887849 seconds)
  done (took 32.642103783 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.723683708 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.723321728 seconds)
  done (took 5.10116071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.719917631 seconds)
    (2/7) benchmarking "second"...
    done (took 1.721463372 seconds)
    (3/7) benchmarking "month"...
    done (took 1.721400551 seconds)
    (4/7) benchmarking "year"...
    done (took 1.721237642 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.719136221 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.720341402 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.722867366 seconds)
  done (took 13.702119594 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.725169824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.896864354 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.96395402 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.390575529 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.724957348 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.729194248 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.656436337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.730711995 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.732087333 seconds)
  done (took 19.205073403 seconds)
done (took 105.837004306 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.557917053 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.722039803 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.070901949 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.78153416 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.767200245 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.059445047 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.744418567 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.946982859 seconds)
done (took 42.307017668 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.750478301 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.263149267 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.295586225 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.878363633 seconds)
  done (took 12.093249423 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.704634065 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.247091812 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.762388501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.314997036 seconds)
  done (took 19.700251019 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.088015639 seconds)
    (2/2) benchmarking "read"...
    done (took 2.089015156 seconds)
  done (took 5.839448497 seconds)
done (took 46.039974767 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725407247 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.725364179 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.7238042 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.722851245 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.724222791 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.726040065 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.722817434 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.724124416 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.725661905 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.725183111 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.726787103 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.724882809 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.726862628 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724605012 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724210381 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723200809 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7258276 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.723387814 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72362014 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.7234135 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724329843 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72741627 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.72362866 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.723796412 seconds)
  done (took 43.049464678 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.727129484 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.721898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.728318318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.725665119 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.725470204 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.727778232 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.725445767 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.723813538 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.726997635 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.728706626 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724569448 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.724311737 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.727032852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.726279929 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727305661 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.7253338 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.727988108 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725036073 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727250563 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.723906892 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.726830092 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723847795 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.724475517 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726276654 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.724710617 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725908055 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.72803802 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.725255812 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72658549 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.725835794 seconds)
  done (took 53.437683125 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.733393419 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.734324889 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.725817048 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.727320987 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.729305346 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.729427542 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.728835127 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.728177531 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.72756272 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.726567698 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.728693023 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.727006016 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.730307618 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.729261739 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.727423374 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.728972683 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.728092061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.729767015 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.726455131 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.726979534 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.727821684 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.726818247 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.727435868 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.727728317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.72828609 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.728373156 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.72766019 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.728739618 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.728008534 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.730214737 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.73017719 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.730300855 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.728570583 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.728132917 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.728809957 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.730306444 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.732306078 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.736814425 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.72944616 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.729119937 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.731011747 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.731388913 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.728561487 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.730185498 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.729530294 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.729170524 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.730622094 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.728724436 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.730145719 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.730237079 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.731263981 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.728453042 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.731782765 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.732747775 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.731047631 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.730544111 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.731879191 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.732063276 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.731721995 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.731588247 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.728999346 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.731132425 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.73057526 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.72891879 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.731531719 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.730019762 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.73237436 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.730618387 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.730299602 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.731432663 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.729403628 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.730985639 seconds)
  done (took 126.199766929 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.731683875 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.728223045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.730997645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.728999354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728900088 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.731687713 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.726635729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733005052 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730313416 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.732387916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731720642 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.731647002 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728739743 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.732842037 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731943697 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7300191 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.731656457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729738496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.732810737 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.733746844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733023794 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.729078323 seconds)
  done (took 39.744070059 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732368022 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.732670806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.730028186 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.732068361 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.730289127 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.734895703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.733588218 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.734389415 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734311857 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730987236 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731591003 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733615328 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.730096841 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730701758 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731997829 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.729058779 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.733563642 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.730462627 seconds)
  done (took 32.841138303 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.731420479 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.733311673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.732156882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.730809243 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.731173771 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.733202283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731939593 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73485309 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.734512604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.729639109 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.735039369 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733773644 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.7334986 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729605248 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73365373 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.733592596 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.734909193 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732570775 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736134547 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.732256846 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.731851005 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.734531985 seconds)
  done (took 39.790307039 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.735763727 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737316919 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.733930606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.732427694 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.732173241 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.734958536 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.733805217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.733864164 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.735619729 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.735777826 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734060634 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.735566675 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.733053943 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.732068298 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.733257452 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733977636 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.735023944 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.733899606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737271023 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.732951768 seconds)
  done (took 36.354148626 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736216418 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738841851 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.738092704 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.737152584 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.737434807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.737370566 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738769441 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.73546966 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.736638263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.738820876 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.735711914 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.737873479 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736801016 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.736122451 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.737274374 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738395805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.737517621 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.738354322 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.738148415 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.737699469 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.737855693 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736238454 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738369164 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.737059649 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.736760385 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.738283276 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738258234 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.739000488 seconds)
  done (took 50.318700362 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737846063 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.737177983 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.733900771 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.735211945 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.735293692 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.734635749 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.736106222 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.735612278 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.737742528 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.735729162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.738448154 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.736600222 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.739672168 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.737276736 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737359659 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.737281127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736417835 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.736219076 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736181417 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733672884 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.738907331 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736942525 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.736899279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.734673518 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736375674 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.7386797 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737110143 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736321618 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738793764 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738052587 seconds)
  done (took 53.769986548 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.755553375 seconds)
    (2/2) benchmarking "in"...
    done (took 1.758575684 seconds)
  done (took 5.184475221 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.736702317 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739610853 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.740321038 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.737067546 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.734050512 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.739047714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740245626 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735424396 seconds)
  done (took 15.573491441 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.740580387 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.740484558 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.738546367 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.739413369 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.740624726 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.740867899 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748035903 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.741784394 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.740057257 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.740822327 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.748892497 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.749452551 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.742238564 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742225941 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.740941666 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741670792 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.740563155 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.741790377 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.738663225 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.741959564 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740980565 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74196037 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743766503 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.740144954 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.74204869 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.748032177 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.744072802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.741953337 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.73985314 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.744581824 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.742876737 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.73841819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.740716874 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.742963852 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.741441916 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.742079243 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749967049 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743378711 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.74687785 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744056038 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743976447 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.73897865 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.74152737 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.743317498 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743716391 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.744737723 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.742733086 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.739220283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.739838996 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.744318667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.749113088 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743118133 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.740548075 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744570633 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.74463722 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748158172 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.744610228 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.745444513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.753007272 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.749519021 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.755316305 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.751105855 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745626708 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.743954982 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753412498 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.768030596 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748581361 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.741824906 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.741134498 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.743538051 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.749994958 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756673642 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.752793472 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.744013115 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744473754 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.745852898 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.742448148 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.74405003 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750330795 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.746603383 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.74590195 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744886111 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754275946 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768141288 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.744464675 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.745591643 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.746842011 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.746596351 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.746150444 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.755632287 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.745263384 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.745476292 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.746950346 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.744932117 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.746704237 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.746503703 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.745222251 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746941724 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743514199 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.745191144 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744970774 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747495986 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.755440672 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746339231 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745945585 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.750299082 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.747457216 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744393499 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.75053974 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.747346463 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747150598 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.746434805 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.749904061 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.740597092 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746973741 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.755521369 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.74614801 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.747603785 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.745981815 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.746970996 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756784302 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.77510314 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.748495639 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.746798829 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.749932655 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.758554554 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74684173 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.7506865 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.747895267 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.745050082 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.743309847 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.747395169 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.747503838 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.748260067 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747296025 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747110355 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.744012157 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.744593705 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.748078499 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.749254281 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.748468549 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.745963718 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.748238144 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.74916935 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.746810167 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.749839702 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.751923112 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.748423921 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.749565169 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.749506805 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.744091576 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746188614 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.748964205 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.747377032 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.749185065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750289144 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749917146 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.749462783 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748478587 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.748524831 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.747179383 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.74851236 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752175772 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.748808452 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.74939786 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.748214584 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.749526116 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.750687238 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.74911293 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.750017577 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.750789656 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.748217028 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.7541193 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.758722091 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.74908914 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.750191175 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.750751761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750921032 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.749781422 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747815379 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.7518036 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.757909822 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.750324769 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.756283737 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.751233283 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749339841 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.749709161 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.749499215 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.75102557 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748720713 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.754021747 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.756932872 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761629735 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761148735 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.749436435 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.753763017 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.750655155 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.753861422 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.753885112 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.750195557 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.750688459 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.750749491 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750356417 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751266231 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.753263627 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.751541511 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.75327176 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.748837564 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.749807543 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.751141201 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752063885 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.751382917 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755132721 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.749071873 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751116693 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753569273 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.751510987 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.749599197 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.752871079 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.752319777 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.75235121 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.750889052 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.756710992 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.749508246 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750760167 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751110679 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.75356579 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.752093456 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.752127734 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753736423 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.75395747 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758145458 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.753152878 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.752060431 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.758768121 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.753464595 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.749810553 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.754345318 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.755150932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.748656562 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.755648642 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.758342186 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.753006185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.754535261 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.756608293 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754027714 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.756043306 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.759948105 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.750912154 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.751896243 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.754185424 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.753305058 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.749148876 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.752148622 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.751257613 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.749976174 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752725128 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754916875 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.754367312 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.752311058 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.75374571 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.752762164 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.752975629 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755286222 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.759311389 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.756919703 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.753621871 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.754554416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.753115846 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.758273544 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.752704265 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.750862032 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.753001826 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.764609464 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.762931745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.75939378 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.757149002 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.754883555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756873735 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.757903588 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.758148472 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752354379 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755078797 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.752602268 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.754284626 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.751563734 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753335824 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.755236317 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75432827 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.756718045 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.757933585 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.754992443 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.75457078 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.755794292 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.755280673 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.75510328 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.755899012 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.756372851 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.754135354 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756364089 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.752853194 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.754034981 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761045229 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758190692 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.757011617 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.755617177 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.755270634 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.753784292 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.754322207 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.755422369 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.7574635 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.763228528 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.757322888 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.764233492 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.756155488 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763913827 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.757710224 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.758946556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.763782364 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.753682015 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.756034476 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.7561522 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.755224247 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762133284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.759722183 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.758176416 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.762588939 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756663286 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.756930849 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.756985133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.758137991 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.757482404 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.757331672 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763423505 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.758589055 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.761989018 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757374334 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.757127675 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.758009321 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.757788012 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.75649053 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76124755 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.75942507 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.757638977 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.760075667 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.759633387 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.759384679 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.759131274 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.758219227 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.756191076 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.758975653 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.763005037 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.760886643 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763163411 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.757716671 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.764704554 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760009037 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762935024 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.76047399 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.757463382 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.759884999 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.757886428 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.760361374 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.758415208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.758991711 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.759797164 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.760233679 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.762553735 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.758241977 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.760511108 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.759068828 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.759824519 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.760042127 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768426674 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783418874 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.762114959 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.76217252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.756665537 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.759435245 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.765097364 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.760451289 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.759700378 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.762175671 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770742272 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7676971 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.757932048 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.760535259 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759613943 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762849751 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.760353636 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.759567625 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.76222317 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.762592879 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.761428713 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.759534307 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76327668 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.761203361 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.761497096 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762983695 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.761435686 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.771980533 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.762782963 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.761212032 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761080724 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.76025907 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.760023362 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.759039227 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.760905367 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.760796383 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760378438 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.760437019 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768902176 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.767773747 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.761834953 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.7616376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.76314019 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.761491783 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.76212009 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761872722 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.76107446 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762077647 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.761690944 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.761937398 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.760362996 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.760799521 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.763139745 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.76422982 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762022848 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765384875 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.770719033 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764912563 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.759783398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.763118521 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762963843 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.760138469 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.76174757 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.770504552 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76739096 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.772788249 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.772306577 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.767168994 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.763701451 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766143043 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.772652248 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.76108548 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.763460278 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.763838708 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.765197321 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.762150219 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.767950079 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764100375 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.768516511 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.763844987 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.762452798 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769214016 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.766434597 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763784996 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.763590796 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.767255651 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.76331205 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.761182994 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.761301437 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.762027912 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768198112 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.765316449 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763112102 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764593021 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.762884809 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.764488434 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767250566 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763848286 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.764940039 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.762962982 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.764916682 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.763930584 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763179922 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.761506882 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.763722708 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.765407835 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.768739741 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.772628087 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.76341087 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766280218 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.767233675 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.764999045 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.766785838 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765376842 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.761249945 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.76226722 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.764962641 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766089582 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.764496402 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.767559135 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.765955989 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.765441519 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.76607878 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764502675 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76727329 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.774099011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.7728977 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.763948539 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.765030436 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.765343021 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.767668386 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766641973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.765315057 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764208579 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.768615828 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.76436578 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76500338 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.765943074 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.769282995 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780262153 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.764992452 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766289577 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.764449532 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768323739 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.768657791 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.764464383 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.766159381 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.767680342 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.768645042 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.775189664 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.767539793 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771926936 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768296953 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.767188922 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.772403269 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.769735047 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.776703626 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.771262246 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.769458071 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.766776297 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.772612075 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.783845959 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769244447 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778258205 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798010909 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.76954897 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.771086526 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.77122317 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768665997 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.767940064 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.769202046 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.76894321 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.7691916 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767033956 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.770406018 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.769889216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774354028 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.770810018 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.770174003 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.768598128 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.771303641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.770227916 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.767370075 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.767055602 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.769640561 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.767284678 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.768341584 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.769197653 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.768752395 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780834126 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.781431812 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.770510223 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.769597374 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.766420818 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.773104323 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.774682305 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779599632 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.777514503 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.769604772 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.7686626 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.771953086 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768559921 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.768054169 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.771626229 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.76744976 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769605174 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.767316184 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.782466893 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781592408 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.773901075 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.770606235 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77118763 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.771557991 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772795345 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770638255 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.770471748 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.772159587 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.771412325 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77487961 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.771166726 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.770690012 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.773718037 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.781409992 seconds)
  done (took 1049.0133912 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.76875166 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770008922 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769207479 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767761337 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768600622 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768201649 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772401265 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768907754 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.767279527 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768421755 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.768187815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76693287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769804731 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769210228 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768742048 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.769399249 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77102802 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.77016034 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.76848161 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768081918 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770731547 seconds)
  done (took 38.853066214 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.772960346 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.770676813 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.76897058 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772467456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768705643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.77402275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.768439042 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773133437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772312913 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769747214 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.771600709 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775897224 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.769836837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.770024521 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771180515 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77355068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774773869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770279234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.772026438 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.769504979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774028733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770422006 seconds)
  done (took 40.676931344 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.773864047 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.775149791 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.771460248 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.772265382 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.77101601 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.771765328 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.773762068 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.774070824 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.771223193 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.77181286 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.773230636 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.776064422 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.780253775 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.778034255 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.774052234 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.773365759 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.917164084 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.77627029 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.776210605 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.774642937 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.769513156 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.777272023 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.772574154 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.771241719 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.770973092 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.775332434 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.777375273 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.775017647 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.77613172 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.776756297 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.778229283 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.774767122 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.772220473 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.776072593 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.774798163 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.775279812 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.778928665 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.774920836 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.774371574 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.776439492 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.786135568 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.796546684 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.777773571 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.78205725 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.777924937 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.777074238 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.780839912 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.785483819 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.773456238 seconds)
  done (took 88.866592916 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.77741437 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.775529646 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.773438666 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.779046128 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.774923302 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.776345993 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.775470637 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.775378644 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.775843696 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.773869291 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.775486656 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.774790514 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775546441 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.778186323 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.77684837 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.773934225 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771523035 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.772680341 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.773977355 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.776228816 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.774114647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.776025359 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.777850481 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.777610855 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.778956354 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.776039962 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.776123046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.778000612 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.77555275 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.776654447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.778333352 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.776326713 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.779996369 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.777682731 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776513357 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.774429779 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.779628624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.777086657 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.779770929 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.77720139 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.779137504 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.777116393 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.778699008 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.778952318 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.775412738 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.778436319 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.776399998 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.775462008 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.776099426 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.780527099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.77951647 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.777760177 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779935044 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.777575263 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779236137 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.777866415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.774935426 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.776431198 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.775805958 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.775533139 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.776760979 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.778937882 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.774690329 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.777126511 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.77885124 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.777735152 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.775128693 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.780198823 seconds)
  done (took 122.528469069 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.779692941 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.780073141 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778123013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780449371 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780608318 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.778243056 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.779242611 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.779461332 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.780344654 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.779877013 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780607289 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781779865 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.777974343 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.779438147 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78032317 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781169884 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781510415 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782942729 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779613867 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781343522 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.779915562 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778495045 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781731529 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.782830962 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.78322359 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.779685944 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781403769 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781319851 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780074684 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.779990193 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781693083 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.783413186 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.783329939 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781103469 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.78437959 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.782937324 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.782173285 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781714225 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.78105729 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.779693156 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.782686521 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780659659 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782191956 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.781261487 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782092049 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.782859708 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.783635083 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.783325723 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782994907 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783309796 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.782882235 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782666054 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782565171 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783173696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.78478762 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.781234302 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78300714 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783540228 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780974643 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.784418164 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781519664 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.78450889 seconds)
  done (took 112.163459065 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781733617 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782794759 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.777950628 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.781009731 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781625665 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780383091 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782808497 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.78039788 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781138719 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.781248083 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783244216 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782178108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780000749 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78561756 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782993861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784093612 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783555745 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779687687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7824577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780049628 seconds)
  done (took 37.34721051 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.779080602 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.781535646 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.78028724 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.780436042 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.780932438 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.781359568 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.783901229 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784312614 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780449759 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78482575 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786224675 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784262721 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78286528 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7809124 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.784095052 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.78174969 seconds)
  done (took 30.230246319 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.781896234 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.782965753 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.78388138 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.785161207 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.783423945 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.781818545 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.786864619 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.783078167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.782146641 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.78415033 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.784099271 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.788734899 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.787226444 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.785339102 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.78232928 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.785693732 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.781841023 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.784365866 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.785093822 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.788368527 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.784353905 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.783852168 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.786459829 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.786350916 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.783389451 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.784183728 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.784142973 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.784270593 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.78217845 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.783631499 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.783853598 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.783253811 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.783318525 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.782767177 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.787459326 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.785050964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.786603345 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.787192152 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.782977946 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.787710407 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.788225838 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.786266226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.787512835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.784506208 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.782962098 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.789948543 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.784037165 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.78597286 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.784894155 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.786567231 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.790304741 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.790272201 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.789645457 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.788210563 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.787817875 seconds)
  done (took 99.903647173 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787840945 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787383181 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.785668097 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.785739527 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.789049367 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.785158922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.790494776 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.784386652 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785422641 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.78803239 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787662221 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79024131 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787030913 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.788945591 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788011233 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789184697 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787866597 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.786892145 seconds)
  done (took 33.892468051 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786034023 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787340129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.791363793 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.787288709 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.787934892 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789742031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788463728 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.79054725 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788435889 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787381304 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783123774 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.789857768 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789271608 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.79169734 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788207929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788943961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.790532609 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788407263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.787733834 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787103057 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790709583 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789327522 seconds)
  done (took 41.067760691 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.789718698 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789937789 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.807319454 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.81184344 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.812224334 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.819433833 seconds)
  done (took 12.549916624 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789241522 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790483182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788593825 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792102055 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791897241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789099498 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79047507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788885415 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790087483 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790048212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788422109 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79304278 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792577935 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788400181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79172199 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791685631 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790830799 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79132853 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790115893 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793335774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790042082 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79221536 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789464506 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786752068 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792020919 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789297764 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790779985 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788977897 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788787421 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793503998 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793620911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790111483 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795174538 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791990656 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793909416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792895998 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792908304 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792694448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792734145 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791165335 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794714708 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792289619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794201603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793576568 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794784153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793168248 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790494079 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791101955 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79240867 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795768931 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79615118 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791892713 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796502697 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795501044 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793965023 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79622139 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792343123 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790746162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793247616 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791163242 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791922526 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795343334 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789539473 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79105705 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795945184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792079114 seconds)
  done (took 119.987661689 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792807421 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788902157 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789938502 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792775457 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792337546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791581507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792947897 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791873081 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789796073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789014196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793874897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79003376 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789440958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792238144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791861812 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793311642 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791905617 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793387934 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793691721 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795272393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79059769 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791329247 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793091721 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793093139 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79489109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797010695 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793361854 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794066131 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792330932 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791301521 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793111172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792092224 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793845631 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.792195611 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791146506 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793030877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792285475 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792991858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792718725 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796670362 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792679133 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795587919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793782878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794325527 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796003977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794166493 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794058367 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79389419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793800036 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793451447 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795022392 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794574652 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795842971 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794172914 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79333975 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794698871 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793126455 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792349817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793744847 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797493009 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794881945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793265997 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796252637 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794620949 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795000417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795115588 seconds)
  done (took 120.076715094 seconds)
done (took 2445.076642224 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.857542401 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.795134531 seconds)
  done (took 15.376556337 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.956237158 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.911880186 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.794879709 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.83348658 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.792674308 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.812389021 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.797175927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.793792225 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.794531444 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796922839 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.795896664 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.98065047 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.815262478 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.794626934 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.796798918 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889524143 seconds)
  done (took 51.087608873 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.798194435 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.80138147 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.811442048 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.799200173 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.798719353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.811533342 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.833010923 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.801083441 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.832955748 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.810096864 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.869710248 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.807915037 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.796928704 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.850114955 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.810994474 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.81683001 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.886930138 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.873692385 seconds)
  done (took 34.537977963 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.879093856 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.803212515 seconds)
  done (took 10.417890087 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.796373776 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.828072009 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.822418513 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.803452839 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814153435 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.844467113 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.797245394 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.83355609 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.831210204 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.799687874 seconds)
  done (took 69.902034639 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.804104603 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.799386202 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.799470236 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.797533743 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.791734408 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.795519719 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.79882247 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.791261597 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.480014596 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.834113097 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.805669618 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.803578084 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.799205398 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.799824492 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.79689813 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.82213763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.915175663 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.796690081 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.796559741 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.804647678 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.799098015 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.872749792 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.812412895 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.800259451 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.829787882 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.484355961 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.807817231 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.805461894 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.935977236 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.797617028 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.799420043 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.80075166 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.80244687 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.197797286 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.123020137 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.799166732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.807280397 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.807055546 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.797065176 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.934111952 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.799857893 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.804649909 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.792666869 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.114694428 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.894325124 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.843773842 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.139532056 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.803303443 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.801770628 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.832906043 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.802198185 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.801405109 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.813107058 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.322193783 seconds)
  done (took 128.946643648 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.797240909 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.083325171 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.94998579 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.797191652 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069851096 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009116781 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.74189673 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.845836503 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.797408031 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.998207571 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016627906 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907189294 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796099992 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.79586298 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.797479565 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.794357546 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.956320119 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.864662577 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.798461265 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.793878642 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82381723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007745587 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.920311915 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.797844124 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.817491864 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010797107 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.919582564 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90410343 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.248467676 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.79466145 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862493328 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.797935815 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.795599317 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795008485 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956951456 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.89785763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88755474 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.797792693 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795507889 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.796211405 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.460312277 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995369181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.89638588 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.943082836 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.949229798 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0017647 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.444438061 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.795361513 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.43497251 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962072026 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.010945646 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.00421509 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.924277889 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.801071838 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.154827843 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796763393 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795828036 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034940455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948147584 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.905283385 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802191105 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.797981945 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796308646 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041967419 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.801266194 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.894944019 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800566452 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.797334728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.895739111 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907982081 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.940071968 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016649685 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.832192478 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.524753131 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.015220773 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013559814 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.868690931 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039592235 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801376217 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.797337271 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885938466 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.55398677 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998974896 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050789344 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.021356994 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834668901 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.391893455 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.797939467 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993433355 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.985070227 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.993757965 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.94937279 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.956060575 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.13326818 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.798255131 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.799682732 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.030117913 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.937357218 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806056811 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162015619 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.034510234 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.431611077 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.823900734 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100433508 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934400603 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.121067876 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.425318245 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.801594109 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968513212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.84071366 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.801822376 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799392034 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.99178776 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.60638987 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800440837 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.592540032 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.865306119 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.804387098 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004474102 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.802640129 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010632135 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803778912 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037804206 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.82928524 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835864029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.024260793 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.949232007 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.602651772 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.048855079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.047229321 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.920791996 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095155947 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.530405105 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.802138455 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0760682 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.801398757 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.800236061 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.967219436 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.801283315 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949239759 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.806602034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.030069148 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82971538 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960935575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807240409 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.036294106 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.839853034 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85525024 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.805405785 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925928069 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.801677003 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685482631 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957970283 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802880653 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803215742 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.422211676 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.803043938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949424841 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03601898 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829023605 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876870349 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.330053937 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802606397 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891553909 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833196807 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.210174818 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.802542857 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.019968422 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.777262837 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.234248045 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.803658121 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044795552 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.056406209 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.805615812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.804162626 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.54725867 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.512048549 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.80398073 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963969539 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.106376389 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.450021322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007818244 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810029802 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932826726 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.811058023 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.879866311 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.158170101 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804037374 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.804546189 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.805254099 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.803327443 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80424209 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063154861 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.838459968 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.300800586 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.941467604 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022110604 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.118673727 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.026804626 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.849255959 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.808196507 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067760759 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805975538 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.871925055 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.805807 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828285194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040024239 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809438349 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040290514 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.064121465 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.707693983 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857666962 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.811785421 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805626278 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.805209261 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954023262 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901500679 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811734233 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.807465089 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918823974 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.933004036 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003652848 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.399187654 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.88224819 seconds)
  done (took 883.382446671 seconds)
done (took 1195.37494488 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.807834486 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.805860001 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.794352898 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.810322048 seconds)
  done (took 28.962962026 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.81539399 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.811734636 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.816297828 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811961863 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.815674245 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.811849732 seconds)
  done (took 12.626500309 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.838061325 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.811056205 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.810993425 seconds)
  done (took 21.205005172 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.882085964 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.218873862 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.917553766 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.256751554 seconds)
  done (took 10.02002528 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.815282843 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.815518837 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.814769357 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.817085711 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.815177213 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.816982473 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.816273557 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.816470638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.817335454 seconds)
  done (took 18.090490851 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.18308469 seconds)
done (took 96.831248759 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.446403411 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.881730643 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.807352279 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.66865343 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.958146184 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.881802901 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.898561881 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310579056 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.851044494 seconds)
    (10/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.086052417 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.183147272 seconds)
    (12/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.869194842 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.841516715 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.928325542 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.43100192 seconds)
    (16/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.91172087 seconds)
    (17/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.928549215 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.795110776 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.572191979 seconds)
    (20/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.977293734 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.845307571 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.943797807 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.150597898 seconds)
    (24/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.617630254 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.195993207 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.918674682 seconds)
    (27/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000993685 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.829459947 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.240201405 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.89228411 seconds)
    (31/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.942750398 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.981426761 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.812812924 seconds)
    (34/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.477124205 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.701643536 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.941673159 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.901200345 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.903495265 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.599772526 seconds)
    (40/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.80048928 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.376967703 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.978307711 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.725842241 seconds)
    (44/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.716141249 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.918283383 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.812114073 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.722958558 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.135736125 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.909486793 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.863364145 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.13395554 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.90032801 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.32509801 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.958559955 seconds)
    (55/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.055314142 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.841206885 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.817304963 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.058027713 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.798173714 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.230438257 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.796383146 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.056713802 seconds)
    (63/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.03701173 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.835002731 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.924568808 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.072884463 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.837200632 seconds)
    (68/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.405084879 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.018158454 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.162593043 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.859021669 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.107994413 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.869699287 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.837702809 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.813345472 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.798384824 seconds)
    (77/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.146993743 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.111490915 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.846476776 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.009964384 seconds)
    (81/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.37703722 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.086746538 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.890730739 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.800736811 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.102613222 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.114960503 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.802951786 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.558622679 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.121018727 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.869147631 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.185831139 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.406545982 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.190175728 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.113822169 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.186737157 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.052089243 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.961561758 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.832347647 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.925454823 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.947272168 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.42066363 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 5.528960755 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.815807096 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.922289598 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.81621241 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.969575476 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.324015071 seconds)
    (108/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.846642078 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.815030534 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.382142398 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.064939207 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.838202121 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.801747433 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.005403751 seconds)
    (115/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.980003642 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.814512847 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.975376851 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.028291811 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.825109334 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.880463662 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.800102436 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.80934973 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.464412385 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.210588851 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.843772362 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.841274715 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.814750685 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.845410845 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.914425611 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.801168451 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.705428929 seconds)
    (132/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.721784346 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.90995616 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.480715149 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.031919115 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.264681134 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.840746771 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.136027778 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.21939492 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.816812122 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.205270131 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.067264493 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.171124695 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.026404655 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.818003709 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.094276636 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.074148477 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.094865403 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.817351332 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.937781743 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.81896593 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.657669856 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.71169163 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.419875702 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.97932402 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.204939654 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.818232742 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.487861659 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.96582996 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.949848759 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.987396138 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.809462166 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.351673389 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.393549994 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04105762 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.846008705 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.016372264 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.993369377 seconds)
    (169/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.907690199 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.904999595 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.819464182 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.61316314 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.016755689 seconds)
    (174/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.818888821 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.987349352 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.963021126 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.923902204 seconds)
    (178/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.278290906 seconds)
    (179/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.299143332 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.80835283 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.881830274 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.962598038 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.161780246 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.847272191 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.181002213 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.930122387 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.208831618 seconds)
    (188/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.951931994 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 5.585577638 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.328572728 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.23998905 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.888182482 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.782220193 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.11941417 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.819630049 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.821540616 seconds)
    (197/309) benchmarking ("sort", Float64, false)...
    done (took 5.681249078 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.060241588 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.11975455 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.773282588 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.825655102 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512294083 seconds)
    (203/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.147264432 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.886423027 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.294120844 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.891451696 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.489339202 seconds)
    (208/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.845792547 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.946647939 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.88928251 seconds)
    (211/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.945174145 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.823206506 seconds)
    (213/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.21773497 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.978587544 seconds)
    (215/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.430732683 seconds)
    (216/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.904018391 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.468615811 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.963736391 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.860744173 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.888926956 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.308128158 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.700499189 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.949460401 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.821519622 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.875322698 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.356725033 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.029189729 seconds)
    (228/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855408796 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.042325968 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.808808564 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.358749835 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.6210697 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.036203881 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.095404584 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.036570241 seconds)
    (236/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.405796574 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.823814378 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.890086606 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.809741345 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.053753227 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.064696576 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.969619292 seconds)
    (243/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.849251256 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.132728896 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.871857816 seconds)
    (246/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.953936212 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.785910374 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.930116057 seconds)
    (249/309) benchmarking ("sort", Int8, false)...
    done (took 4.82397718 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.822519484 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.903034622 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.204864676 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.124153878 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.97728726 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.892341604 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.010330073 seconds)
    (257/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.105558247 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.851599642 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.332608652 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.930210931 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.853957707 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.55128373 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.254386611 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.996763801 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.855261011 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.790805647 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.817827205 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.244609805 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.185157393 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.415501676 seconds)
    (271/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.089267985 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.053568529 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.020787035 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.41536029 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826257131 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205303417 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.92136999 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.922384929 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.603482016 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.173043938 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.511530251 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.947505672 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.911435771 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.837271379 seconds)
    (285/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.844256329 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.966329206 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.116393842 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.024686443 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.230833196 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.550947763 seconds)
    (291/309) benchmarking ("sort", BigInt, false)...
    done (took 6.82541724 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.136597904 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.940316486 seconds)
    (294/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.955838028 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.742693486 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.914186823 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.870482131 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.012433256 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.108301999 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.105863522 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.914793693 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.907329048 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.857494462 seconds)
    (304/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.90789262 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.848785667 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.877451376 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.79166689 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.833812395 seconds)
    (309/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.916626424 seconds)
  done (took 1004.256648405 seconds)
done (took 1006.071813835 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.858219687 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85438939 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.837934834 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.857986578 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.949232279 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.869377975 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.849250564 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.839064501 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.885832929 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.888058415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.838544477 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.869702149 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.840941805 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838344963 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.836548735 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851775783 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.158196431 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.863630827 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.854255998 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.848512651 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.855322054 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.838533881 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.891632226 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.873106035 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.844484091 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.841402105 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.841777362 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.85940786 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.950587506 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.843222736 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.844098186 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.848418361 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.156553331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.861814382 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.83338962 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.860166373 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.850667023 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.847635023 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.842868132 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.873028529 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295474749 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.846243192 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.83972436 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.840904442 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.838684332 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.843850511 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.84113481 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.848625274 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853544262 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857803968 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.29445157 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.86116453 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.844322288 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.843358142 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.851011155 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.841002138 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.844176856 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857115512 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.860828024 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857488222 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.149334708 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.869211514 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.843112126 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.858877194 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.850879502 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.332329376 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.841933958 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.846599702 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299483023 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.852756806 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.330802268 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.854850199 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.844967949 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.85451943 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.872539452 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.158838787 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.86042144 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.839656223 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.848929348 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.839344519 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.85058652 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853911195 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.847248195 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843504161 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855583115 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.876411493 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.849872512 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.844677608 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.852170147 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862756232 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.849470514 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.852034434 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.845509939 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.837904664 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.851383595 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.847233663 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.846518469 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.84858871 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.84789047 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.853127676 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.295810013 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863939306 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.840989638 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.837215505 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.841816138 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.854927674 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.296066917 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.847627088 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.862606082 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.889913206 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.845408099 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.151458701 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.871246782 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859030166 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.851975991 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.847357425 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.837295313 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.151278158 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321957777 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.864232463 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.844576221 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.843684428 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.859954523 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.846787238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.842008294 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.162765906 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.870841904 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858797649 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.966589027 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.855533495 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.877594834 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.84151907 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.844757356 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.87760776 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859180967 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.87545183 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.847397289 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86004035 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.860104253 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.843354192 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.854422827 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.857008842 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.84550388 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.84983055 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.838216371 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.876816846 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856725066 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856813444 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.865600413 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.965088754 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.842490851 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.153479513 seconds)
done (took 289.876211536 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.912486683 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.836006327 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.940625426 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.840263465 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.926692683 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.934741944 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.838226133 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.8379334 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.838475621 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.219229363 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.840176454 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.838865416 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.839044781 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.840979547 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.927264798 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.843642379 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.83916727 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182439006 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.841861096 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.912796698 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.835214516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.841539444 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.843320184 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.225763072 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.834588202 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.83706466 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.913633341 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.842359827 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.193772181 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.840158488 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.835772047 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.190930799 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.932786189 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.86053887 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.854441652 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.850566134 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.930301815 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.850865355 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.926851916 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.927737134 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.94439798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.884626721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.845905094 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.834775856 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.851413879 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.847782492 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.841480101 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.873412022 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.837181023 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.841218994 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.185487713 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.855219416 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.852891272 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.841774644 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.842235553 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.865560875 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.842225019 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.84602973 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.936007653 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.847624018 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.912059631 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.231596922 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.223277904 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.846444286 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.837791746 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.842543584 seconds)
  done (took 182.58127564 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.91151622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.918517188 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.915178827 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.849084489 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.336635463 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.91909672 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.848777086 seconds)
  done (took 15.473425743 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.850324919 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.84700441 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.896211353 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897227717 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.846777757 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.996944805 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846196917 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.858083792 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.844807951 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.901797838 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.848511331 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846187404 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.853611103 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.846034793 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.896262293 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.857491941 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.963555447 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.848059053 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.848606937 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.99688065 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844410358 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.853547948 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.902631579 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.85844503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849765265 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.853466719 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.429411544 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848445093 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.847247771 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.847691278 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847461044 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895029572 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849458519 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.838031556 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84373061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.963478358 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.846671632 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844262839 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.851724437 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.847613127 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.849422896 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.848979048 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.849440366 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.84664008 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.849715778 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.873503049 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.84852645 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.850169807 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849228748 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.84979449 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.899794716 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.848087247 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.845716299 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.846928457 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.906475101 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855333583 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.849234796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.846969521 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.849508439 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846739772 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.001260368 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.898482411 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.850065558 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89735524 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848578771 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.849500897 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.849170827 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.848707702 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.902017075 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.848255799 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896494438 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.845434714 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.007508079 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.872075484 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.850644423 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.851534883 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.851634517 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.84850225 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.841538809 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.855773313 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.846976589 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.851020509 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.854939097 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847421632 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846662246 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.960602954 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.955625691 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.847660726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.861058419 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.855774006 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.847384899 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.901758874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.849219119 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.846395669 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901522382 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.965401407 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.906375575 seconds)
  done (took 203.701237188 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.854073579 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.857325448 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.852372704 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.865535774 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.849372186 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.850092021 seconds)
  done (took 12.907891904 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.852280192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.852576771 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.850055957 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.84976301 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.850073813 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.851483303 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.851525172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851683942 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.85512588 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.849733395 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.851377579 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.851628972 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.852336511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.851932946 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.852505927 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.849948142 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.852333378 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.848768194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.8507223 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.852012237 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.003329274 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.851705609 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853414814 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.852791992 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858693746 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.851765431 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.85899098 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.852484054 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.851742938 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.860479175 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.858939663 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.855436295 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.852754676 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860359761 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.857750117 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.854506629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856748874 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.85378251 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.849852435 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.853147579 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.853677186 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852964507 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.853516209 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.852598615 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.853677969 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.858140953 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.858281615 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.861456372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.854428021 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.855434114 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.853193492 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.85306342 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.853488861 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.853545072 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.85406142 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857637932 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.857809777 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.854003988 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.855666015 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.853685092 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.856137149 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.85473466 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.855802591 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859723087 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.853650672 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.854786188 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.856520885 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860375981 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857205825 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.854418036 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.853795428 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.852082154 seconds)
  done (took 136.428528479 seconds)
done (took 552.876618267 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.102766372 seconds)
  done (took 8.885362579 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.912308629 seconds)
  done (took 8.788893034 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.771610194 seconds)
  done (took 10.554557735 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.856131329 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.867289737 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.860153726 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.849891259 seconds)
  done (took 29.225948449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.910454826 seconds)
  done (took 8.69370673 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.861825746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.846868202 seconds)
  done (took 15.529999169 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.907310408 seconds)
  done (took 8.692040306 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.994959362 seconds)
  done (took 8.781375853 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.869119388 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.860164814 seconds)
  done (took 15.528444279 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.834912 seconds)
  done (took 8.618786744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.604716481 seconds)
  done (took 11.399541758 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.857237176 seconds)
  done (took 8.656001411 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.904638678 seconds)
  done (took 8.689045449 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.938887193 seconds)
  done (took 8.721991015 seconds)
done (took 162.548191546 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.854754504 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.848486773 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.848891481 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.848199291 seconds)
  done (took 29.184081335 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.889197047 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.888681056 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.891993458 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.899373087 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.891387329 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.892692684 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.880899521 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.880220501 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.899384666 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.891220911 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.890853404 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.89176303 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.890260668 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.88283722 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.891631275 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.891398055 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.901200626 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.890687851 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.882249918 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.892648697 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.856795014 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.900793356 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.892774048 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.857666036 seconds)
  done (took 47.103997052 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.056011009 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.927612899 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.010343141 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.909528398 seconds)
  done (took 9.688159527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.910001305 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.909890051 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.922990253 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.959740549 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.988436104 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.921278586 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.884001342 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.879064049 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.8644392 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.909488901 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.985956289 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.926822004 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.993590523 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.857341507 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.04509342 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.857895159 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.857241916 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.909867601 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.960625983 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.97455753 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.857438844 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.909078656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.912802597 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.92612233 seconds)
  done (took 47.910039431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.856383749 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.865708218 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.862991165 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858366168 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.858727838 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.858430805 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.863883216 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.85957452 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.88026242 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.859694883 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857457953 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.859481652 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.85801893 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.858970787 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.857295603 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.869742189 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.871962402 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.85820009 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.861386199 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.865703926 seconds)
  done (took 39.029521181 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.851571442 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.777530094 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.204043441 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.108459935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.853765708 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.855854963 seconds)
  done (took 32.439943943 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.871086399 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.864311834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.858899576 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.916007748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.997034671 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.866591818 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.859153458 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.868731241 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.903657999 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923445418 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.881611097 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.886951956 seconds)
  done (took 24.486641641 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.853658202 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.856911413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.856667868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.871996027 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.870759317 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.867236967 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.867176323 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.85325735 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.87454879 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.878188504 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.867716008 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.872311896 seconds)
  done (took 44.183534293 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942954451 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.898772969 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.914124609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545036219 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233606101 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066893476 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.460051856 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187217589 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.860008164 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128018467 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002614754 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964114648 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111721524 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346655555 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887508192 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.332144317 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156176714 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073175433 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887057254 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566738142 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920467857 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.043058597 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.636207889 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919500735 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068152762 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989798891 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.116593745 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856061972 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9945815 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899266225 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86724441 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857879992 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130864523 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245166349 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960937115 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866564716 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474303906 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.576160793 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.84154919 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.640718163 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.620348163 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.988916044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867359746 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857321332 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791171179 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.012413122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232985178 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.865757285 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.569230787 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857776453 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869025073 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952005952 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.862272129 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674494883 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776217913 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.860846242 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.857187444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863580643 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427281332 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010166548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.054460188 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.830645404 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.950016464 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657561192 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304597427 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.011911378 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.86204547 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862052067 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7930687 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.633189402 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916041473 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187991762 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.879353943 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509512139 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188658615 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.070541139 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803483568 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140811188 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.388930737 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.832544447 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088136277 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859464592 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795322384 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.804358 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793999558 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154725808 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90311486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.642304515 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90450786 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189806869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872568424 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877451485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883633877 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083972185 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.746990391 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860500472 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.7526296 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007857763 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881800553 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195694531 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796382104 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.863643478 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117353493 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.072656991 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.931090977 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359944376 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023993114 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423692995 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.911679184 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.012681248 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908235687 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.135021004 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924436008 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.999386334 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917988074 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860972935 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168121014 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459588882 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.997586201 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.031518795 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991812488 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.190223954 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894849281 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944040179 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864488078 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.861066418 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659738508 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415983717 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.861201042 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.863557322 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933543783 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907860211 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.863536067 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809464528 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.488585086 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02693422 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.880847386 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086195541 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.432288069 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174666358 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796776792 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192057891 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955360618 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.086073803 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.508335029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.943217667 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125571115 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930420189 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.980313242 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909962636 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881421898 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96126084 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884432553 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.014421149 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15628008 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.867197054 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.86751086 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685659121 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900205352 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870656331 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.869187487 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615068346 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150113922 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894055347 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.873099508 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.753754751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.878422212 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929508141 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87015403 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874587829 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404588534 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.577403306 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.871428592 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.454794061 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08936668 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87514887 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.685820799 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980939381 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.946691888 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151404798 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932071798 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.800418461 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.576149262 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.558814661 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864963227 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800568802 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.865038697 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874394747 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876350531 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.061434281 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145716691 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916863983 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.591629234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.909936334 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876977382 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.870333371 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865856581 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.376097953 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040965988 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062009274 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911887762 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010457985 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.880179919 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801205739 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.870463337 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87192066 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867626846 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.866523716 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899728728 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.579687994 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24995526 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1303996 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.47597358 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882488384 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.627042167 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.930930241 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.865298868 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.638002857 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187485779 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.905835144 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882610894 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.877653775 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.598029598 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.564079917 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434810007 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196186217 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190274725 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316281963 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.092473259 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896497163 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20526019 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805860774 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.425711405 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927300349 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214619581 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815585863 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952334414 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.517945229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216472895 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882395425 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096147031 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259094201 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.694912201 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019184323 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080575576 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904667675 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.031994611 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831521131 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.155359741 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010656171 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.602293951 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084218291 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204833193 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.635509139 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.001754818 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.868629579 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571282483 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963911534 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.589584303 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045080705 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.063932001 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.945451697 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353397417 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882728639 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096440058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225892411 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.038532035 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.991900652 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809250385 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881068474 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.88131631 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.872615253 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.871865176 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.746516513 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.124059282 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881505337 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806484273 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.996356637 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167048252 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.780169934 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.876669234 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872130984 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198970261 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415939447 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042926874 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.985496898 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389186209 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879618748 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807035938 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806703833 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.564518281 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878831059 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.847504651 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087437697 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.979028463 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782761078 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95089067 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953445137 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129427941 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.887097085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154562799 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152982801 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.566874303 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900182364 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.974557261 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628445321 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.990089073 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874802139 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109749897 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628162569 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103669014 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.938508766 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.833085038 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871632828 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089575876 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874653369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.891461197 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114966711 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.597327274 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.906657228 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196923158 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952379383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.91699554 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.928129081 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.967609833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883448444 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953515769 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887455444 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.887413634 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887784771 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923747133 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903168459 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.005023995 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.888469922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968667004 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.019445521 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399671677 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.880197454 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158686269 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266347869 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210569781 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939954674 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875650036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874843141 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809725928 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024783366 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101653231 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15004519 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008159051 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.991570632 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900235527 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.638771718 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093674474 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116952668 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150803888 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.772018385 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380499114 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.916161111 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.875474802 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885926061 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.087754488 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10805415 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204796815 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024579968 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.954637446 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236093805 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154601589 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.878843602 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877532377 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467031292 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.916071301 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580212206 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.926788002 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8942571 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160532624 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886506173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262129662 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.903813853 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.033585067 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.650010633 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.664118518 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17050987 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.869212223 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945647486 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163744337 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282302294 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194636329 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945945743 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88832162 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.97757784 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025205096 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.745201342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880546786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877795791 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927994697 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.588549457 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888098752 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160161948 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192671962 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.876048774 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.756960681 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902317085 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.890221533 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103919519 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152523341 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138494534 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889484822 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887813161 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.694294145 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159076497 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944227986 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81419853 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.881506146 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981281751 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128266839 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902494314 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.332851655 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.591310201 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163695228 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.885975796 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901194696 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.044855647 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255669735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21595862 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.429239739 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0946555 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471658054 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.459436111 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181096566 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.885190349 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.042931303 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182961545 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.886570366 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.963566022 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919655799 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.163065628 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203683769 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.908299962 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617843838 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.852407802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220964216 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443901039 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824183613 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891494165 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.942563943 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.884944926 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.012834634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893057594 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.768610423 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039531014 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.660576504 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162338027 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.887067843 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.876087667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.688552365 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183325587 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914460052 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025323576 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894521997 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.558999439 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.236859558 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140776647 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.968100689 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.888663604 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.887062417 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885685343 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872322187 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08290057 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.078020245 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183472522 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.001876344 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.919706768 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88796785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.102769846 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097323979 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.883804915 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031826082 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969016737 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926349935 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.796345703 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.388932387 seconds)
  done (took 1677.492033347 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888844938 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.913590677 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.952061212 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.886522968 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923009779 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986069036 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.985401299 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942028962 seconds)
  done (took 57.294359951 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.884138252 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.083221825 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.897382139 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887501348 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.89347897 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.888460762 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.062934563 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.895044574 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.89390797 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.896130139 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.889553097 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.884824672 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.214857518 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.908435759 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.888073252 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.872839771 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.892914928 seconds)
  done (took 74.67309692 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.888205102 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.980888816 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.921731966 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901909958 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.844784647 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.892326831 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.685159999 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.914854719 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.882978523 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.114729868 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.521255716 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.898838875 seconds)
  done (took 90.267536128 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.898898146 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.896786441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.895918948 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.897357141 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.895531801 seconds)
  done (took 11.308172388 seconds)
done (took 2186.903518214 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.140366061 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.105796481 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.124084548 seconds)
  done (took 6.049065804 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.040230301 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.090307152 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.211310504 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.216655345 seconds)
  done (took 10.383213259 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.183267444 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.26512613 seconds)
  done (took 6.272880787 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.291624091 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.902989193 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.272168178 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.894256015 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.892293004 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.891357376 seconds)
  done (took 22.504166221 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.895372616 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.899155051 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.897570556 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.899213601 seconds)
  done (took 9.415146064 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.87572085 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.603223975 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.879668888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.891890283 seconds)
  done (took 21.073254588 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.648365919 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.667337669 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.64187951 seconds)
  done (took 9.781504549 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.359071281 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.778859382 seconds)
  done (took 8.961066841 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.15251947 seconds)
  done (took 3.97600311 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.028718451 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.206831037 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.363784845 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.399818919 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.488044168 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.587067011 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.211319491 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.13705556 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.295663891 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.334361007 seconds)
  done (took 24.878541291 seconds)
done (took 138.720546173 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.271445421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899967946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.095110009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.267126723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.116410138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.097477645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.09387265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.247013346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.734759896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.732674785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.227992502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.116632815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.24914106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.143250759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.253002434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.268542234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.116299461 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.287513627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.921595071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.160046993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.097832453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.865559534 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.067857511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.881912497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.118802002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.048403708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.444924079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.271919175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.083483531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.457410748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.051732003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.31647592 seconds)
  done (took 170.830178059 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.662004965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892115081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.892760902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892619999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.335488107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.894615984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.894085297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.89251956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.059845589 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.042262411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.894109464 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.318461153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893489481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.893703911 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894093525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893115515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.207505559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.681595843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892111854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896376869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.898900971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.249589033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.902826217 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.285302192 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.22923474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910421946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893044406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.912863752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.901942189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900143141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.907697398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.89436796 seconds)
  done (took 208.637857106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.897821124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896060406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896202305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.893937355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.895328614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900019189 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.896801999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.896387555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.579638806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.573210547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.902937735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901845399 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905471855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.89707012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.905353095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.895400933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.906274801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.907101794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905840491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.908746971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.909620135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.822813302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913447511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.809678621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.903763527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.907807795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.897668717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.902806521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.905267839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.907315865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.904379731 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896552894 seconds)
  done (took 221.886753523 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.096596967 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.907236479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.90691859 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.839261144 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.908745074 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.908654735 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.906626134 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.101918504 seconds)
  done (took 19.421125198 seconds)
done (took 622.611999013 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.353898996 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.193420251 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.079782564 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.928840655 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.171775806 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.959259881 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.927419321 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.989573516 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.667991783 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.989493542 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.569368509 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.94050816 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.661762888 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.947172056 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.056625471 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.982440633 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.460718652 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.546213765 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104716803 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.987976469 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.091282389 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.855613868 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.99908404 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.683923886 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.676422053 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.899874835 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.092450364 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465534537 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93734134 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.096192974 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.642379007 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.308460169 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.934784848 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.925372402 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.975867693 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.959213842 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.256409989 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.933266231 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.051045183 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.658384722 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98901341 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.55197255 seconds)
  done (took 104.332859532 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.898479642 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.896429619 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.895641696 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.897869631 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.897062256 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.897564628 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.895741826 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.896496852 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.898383473 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.897043556 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.896444369 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.902153512 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.900476527 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.900803876 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.900476637 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.900539694 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.898372915 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.899707204 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.900029682 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.898889994 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.899262473 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.897506893 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.898802776 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.900120548 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.898678466 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.899682357 seconds)
  done (took 51.203388567 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.912753302 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.055435566 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.133916382 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.92805347 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.91305672 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.916995369 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.930731297 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.914474792 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.914546371 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.915713144 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.005646987 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.915784323 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.932972898 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.134504496 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.923610446 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.913417961 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.91367099 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.913233525 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.059674824 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926145502 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.931011964 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.914445952 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.931408237 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.9278552 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.915838253 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913427481 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.916617101 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.349499967 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.919078599 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.00809109 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.957541515 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.934803569 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.308603247 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144157086 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962284848 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.916094737 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.9153618 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.013300004 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.919620097 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.915427306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.933799727 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.918286645 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.142030533 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.410097807 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.924745518 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.91494391 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.356695062 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.017698316 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.955149996 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922723145 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.142990319 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.927925366 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.91725737 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.918028277 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.952264747 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.92079314 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.914973167 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.233605347 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.922465971 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.933630633 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.917186301 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.916743175 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.069355842 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.921571483 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.059902896 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.920420674 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.924991764 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.916761647 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.14012782 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.927508196 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.412791305 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.925026745 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.917878049 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.012022712 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.062048796 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.380811761 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.924935265 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073406629 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.320213967 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.940545679 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.922982123 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.34045508 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.939974578 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.925918116 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.920320777 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.920840439 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.920739849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.964876163 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.933776203 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.355710225 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.416347773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.234268687 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.940972537 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.929864547 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.921016082 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.228107169 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.92448984 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.920791665 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.139875822 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.427831284 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.927472708 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.926744078 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.405139958 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.928608533 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.938806157 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.923918608 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.147218054 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.929967271 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.962813864 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.921315429 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.928194608 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.921802604 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.936957193 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.921851322 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.921122448 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.392944736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.025727953 seconds)
  done (took 236.983089027 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.915717795 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.910590852 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.914549719 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.911400616 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.914164179 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.918959315 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.913961301 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.91377819 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.919780444 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.911897061 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.913575268 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.915834875 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.916207539 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.923948682 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.404672677 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.922336761 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.570254762 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.917440134 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.916107427 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.912366884 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.596156233 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.92356423 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.916322243 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.919682397 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.918609366 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.91869799 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.921306788 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.951921184 seconds)
  done (took 169.369360476 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.924542408 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.104380435 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.935843703 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.958155881 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.933682181 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.92049054 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.946749376 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.938191464 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.923235076 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.921576787 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.923347988 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.983676185 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.937554986 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.061883501 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.952225726 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.949927176 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.028529339 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.928703291 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.921451815 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.921135279 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.951236188 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.919077867 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.984405017 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.053795637 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.943301522 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.040311159 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.926335206 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.926038988 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.923338518 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.042029143 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.93934133 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.984740029 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.952209824 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.941410024 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.040633934 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.04253936 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.028963966 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.950342596 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.928375071 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.923412575 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.9231509 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.912953433 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.044335907 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.942652302 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.925572058 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035702934 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.94133514 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.925313823 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.934669972 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.923232684 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.937153149 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.939787157 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.986931423 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.052590798 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.958703186 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.945876399 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.949352429 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.219140428 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.934237881 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.023373288 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.914807973 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.044318868 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.941098418 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.913200845 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.925772398 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.93112478 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.953165356 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.957367322 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.028792373 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.930083496 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.02714032 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.956562025 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.933163287 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.925788347 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.928422566 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.04075769 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.040746537 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.958742611 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.963103435 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.956813369 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.916418275 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.925139189 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.91558861 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.943609619 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.927729666 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042693806 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.039383538 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.932495087 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.927479374 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.927955505 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.926109654 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.950676526 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.05209965 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.956209213 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.02051576 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.991523141 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.998235765 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.93696353 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.940079599 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.925731022 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.990480029 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.937309227 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.939286944 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.273070117 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.999197398 seconds)
  done (took 208.470796802 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.394250555 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.978400369 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.978720298 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.217584847 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.355183453 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.735334862 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.969148741 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.973004059 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.997510962 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.136876885 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.030558968 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.995891768 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.964778745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.94526488 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.972354555 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.993398974 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.973830739 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.260496164 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.102327678 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.125484843 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.952627806 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243100771 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.296916217 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.349590425 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.006257287 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.286154017 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.663386228 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.222276664 seconds)
  done (took 62.977328146 seconds)
done (took 835.168022823 seconds)
SAVING RESULT...
DONE!
