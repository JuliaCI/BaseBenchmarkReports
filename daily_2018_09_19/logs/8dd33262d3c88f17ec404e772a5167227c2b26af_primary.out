cset: moving following pidspec: 13457
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.361473834 seconds)
loading group "string"... done (took 0.508459799 seconds)
loading group "linalg"... done (took 7.931941616 seconds)
loading group "parallel"... done (took 0.178320908 seconds)
loading group "find"... done (took 1.215559036 seconds)
loading group "tuple"... done (took 1.940451826 seconds)
loading group "dates"... done (took 1.311259027 seconds)
loading group "micro"... done (took 0.242623193 seconds)
loading group "io"... done (took 0.80107769 seconds)
loading group "scalar"... done (took 42.981200886 seconds)
loading group "sparse"... done (took 13.113750523 seconds)
loading group "broadcast"... done (took 1.151034969 seconds)
loading group "union"... done (took 15.245231749 seconds)
loading group "simd"... done (took 4.993401937 seconds)
loading group "random"... done (took 10.332590646 seconds)
loading group "problem"... done (took 2.110915853 seconds)
loading group "array"... done (took 24.542498295 seconds)
loading group "misc"... done (took 1.546182091 seconds)
loading group "sort"... done (took 3.728400834 seconds)
loading group "collection"... done (took 20.419063114 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.585984267 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154768288 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.161739915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.16433885 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202953774 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161481496 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.169841965 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.119054777 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.053631218 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200505641 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.163758337 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.536784589 seconds)
done (took 5.488444606 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.319635442 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.098645409 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113484383 seconds)
  done (took 0.974909518 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082418946 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152518104 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.101083204 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099173409 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.084211537 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.102955007 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084007759 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.099508519 seconds)
  done (took 1.476940074 seconds)
done (took 3.617988964 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.751996071 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.297955468 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.227744538 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.490513619 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190800577 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.224645961 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.692633665 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35177025 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.273599075 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.105501091 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.156597221 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.425389118 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142751844 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674682471 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.094116522 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.136183365 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.186970687 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452894058 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086736236 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.116544528 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123257819 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14704561 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.137888962 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097298912 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.195830523 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.101624547 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194898136 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.114311546 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084711299 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.299027077 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.207963984 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700357981 seconds)
  done (took 11.276836118 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.122318565 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.145832144 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10428485 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162851154 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143980505 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.090115459 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.107702298 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08634523 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13074706 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.187086534 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141745734 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150429721 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09953914 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088837548 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127042826 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255139291 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127696436 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.112514078 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.106999938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111346644 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129447591 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.122568442 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.117497667 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.116999205 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174019805 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21447459 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117419093 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.13302022 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.105298335 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.121422007 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148821381 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150996155 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.101793932 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085005734 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18257991 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.131335985 seconds)
  done (took 5.526878979 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.136079726 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201763015 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.128821957 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.181754617 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.171365001 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151137293 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167301024 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12567017 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26269084 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.145336935 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189696613 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155990949 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.125076237 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087859514 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.107319662 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084202131 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.784103745 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.173782942 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14280649 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12426003 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110247702 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.092964973 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374377135 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109540711 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084521154 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105772401 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0684222 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171909129 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110869717 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.335539333 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.088943108 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124943456 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087380715 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140581437 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134248907 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142403372 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101951332 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085132154 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.187306839 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112668284 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083709035 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132198743 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141202238 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.145978874 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102648405 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087083029 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.237112417 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085231047 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1208845 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.015918381 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.186513671 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.148882705 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084031762 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.350742954 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122956328 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084525751 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101932984 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.284451273 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143510515 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086244975 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.10220997 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084423684 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.104988631 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359274446 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10368143 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.75564855 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087495618 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.112201474 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103484705 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086640465 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100542213 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093165677 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111147868 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102054833 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.103900081 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.104743335 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085359788 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.102014141 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.088061434 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115424788 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109813935 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084818113 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172217441 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084967535 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120165546 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134187431 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106980547 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084410871 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137725736 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107434076 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089305478 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.144726004 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104777763 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096480562 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107192577 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.150075634 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.103908049 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.131034383 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177102655 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099193696 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130304874 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106527828 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120378139 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117018884 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10585314 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106491438 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084182449 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.100364811 seconds)
    (109/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085689809 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100453794 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081776389 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101873875 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086055531 seconds)
    (114/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.172677736 seconds)
  done (took 23.858397516 seconds)
done (took 41.415154387 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.357998058 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110973201 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111245543 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110720425 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108130978 seconds)
  done (took 1.628753797 seconds)
done (took 2.428740072 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.307327238 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188990494 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102799133 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.183251632 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100642392 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191118888 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.193651445 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102109973 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219775151 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081770997 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197526915 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082654875 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10029856 seconds)
  done (took 2.876801198 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101765335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124466735 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087284632 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119657655 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.098965867 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101406133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117379061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106289658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119037097 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109190659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082283523 seconds)
  done (took 1.965674783 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101142739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121499071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087796416 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118598066 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081616611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11966668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117644418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105260704 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.118655069 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108966742 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083581624 seconds)
  done (took 1.963757429 seconds)
done (took 7.597824091 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.101395529 seconds)
  done (took 0.895311833 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.083547442 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.533307932 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121889988 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165277253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348066723 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194876906 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.617365652 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138227918 seconds)
  done (took 16.223167331 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.141062074 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107848279 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110381735 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091451915 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.11122401 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106597022 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09274863 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110502656 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106834936 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091705405 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108731521 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.1082898 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089748233 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111458799 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090578149 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.107383649 seconds)
  done (took 2.547767128 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145858473 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.144962033 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095983318 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117486223 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113208019 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.094585428 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.116528493 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114924102 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092495702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.112369126 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115527332 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114187974 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093031623 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10478169 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113542287 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096906515 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110418713 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114199966 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114406537 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097507384 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115215758 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103440168 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093148185 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115089823 seconds)
  done (took 3.544299061 seconds)
done (took 24.012304225 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173429705 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117248987 seconds)
  done (took 1.094210185 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.107753164 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.129754175 seconds)
  done (took 1.047125348 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113704766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.103563105 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145861546 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.126104315 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.10438652 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086553167 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.14200214 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105378263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085993164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.104586439 seconds)
  done (took 1.928257734 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092704059 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.124513884 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.115796144 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.127527137 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100487422 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109724564 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.120413571 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093506478 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.127321999 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.104615978 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.097630402 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123687454 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.115196414 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125751871 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.118831625 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095656621 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116253166 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.111023585 seconds)
  done (took 2.832496702 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08505659 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.109273762 seconds)
  done (took 1.002063147 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090992737 seconds)
    (2/7) benchmarking "second"...
    done (took 0.104807499 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090059659 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110120506 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.104762996 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085538175 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105977048 seconds)
  done (took 1.500079337 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.507190524 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.145079379 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.271585773 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110492128 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.133008239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.345555111 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08439968 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112024698 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110954411 seconds)
  done (took 2.669740346 seconds)
done (took 12.881845913 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.097364405 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.126687787 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.141985601 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.497412949 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.132464272 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084489456 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.171715784 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.277451754 seconds)
done (took 2.34441861 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.157639094 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338235405 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.126438836 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089083046 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087700282 seconds)
  done (took 1.459157577 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084744621 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10711469 seconds)
  done (took 1.010139186 seconds)
done (took 3.443323003 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085783511 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.138779175 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102804988 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087471625 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.103760487 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086386326 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103680758 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083437224 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.104185111 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085456625 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.106436611 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.102919469 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087138234 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103374917 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0835842 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102758572 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085709224 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.101808399 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082878506 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.105240518 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082038051 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105395847 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.101033997 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084674152 seconds)
  done (took 3.168709936 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115517274 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.107128375 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110721831 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094682766 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.110439659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112227233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093229182 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.105768311 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111042113 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089092278 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109845847 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109177335 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088869842 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.110368158 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106887185 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09137731 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.111158256 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104911313 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090116679 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.110370145 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.110500355 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087738837 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.110185518 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110290697 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09182274 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109759422 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.107056204 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.088042684 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111341866 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.109744994 seconds)
  done (took 3.940630308 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09057038 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.101678783 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0853631 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.109981043 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083767431 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.108563885 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101429797 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086014239 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.103406911 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083984579 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104469656 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083240106 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.103544199 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084876022 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.10558167 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.106095491 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09886731 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104196899 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083483567 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.104526628 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086540495 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.104582943 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.104994377 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084797148 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.102341933 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084695149 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.103549355 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0836104 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.104056714 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.101384929 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088220426 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106509819 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084694782 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109806176 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087491172 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.102721431 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087319885 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10291313 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.102322459 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084916338 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.101717378 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084613185 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.101994995 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090440444 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10660152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085338986 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.103457878 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.104438026 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086147904 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.106036105 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083091479 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102972977 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085232418 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.106034794 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.106568197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084871998 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.10377479 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083398935 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104920842 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082657228 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.102901139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.100854517 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.087300307 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103592789 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100895238 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110387055 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083070021 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.105306764 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10605139 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08746528 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.104893124 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099188948 seconds)
  done (took 7.779210879 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087664444 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115266067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085640916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105836874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101424282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085404932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108019183 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084285755 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105825469 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122064497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084484919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105673328 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104233862 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089848542 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10373015 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086514636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115408853 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100518496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085550864 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107400237 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085071351 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108004774 seconds)
  done (took 3.005405864 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224990485 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114339546 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.151693694 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.131583878 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.12306189 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101551456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110274169 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111487639 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092221002 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108968685 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108061866 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09263008 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113468903 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10817694 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089971828 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110440339 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110377282 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092300449 seconds)
  done (took 2.920448432 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099007271 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10783583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130057705 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087508042 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.107891283 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089666036 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113790684 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123298485 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10900882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087682217 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.118167725 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10877302 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091153023 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106887936 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089316135 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107720811 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.108465321 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088036937 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117314359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114376395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094401906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118483939 seconds)
  done (took 3.148652788 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103871584 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109036402 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127998127 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091360967 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106622181 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.087474511 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115083469 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.106489142 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095321613 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109113698 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106429098 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08865771 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.114185478 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105496982 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094378086 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107228057 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08889077 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108686512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108142359 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086052557 seconds)
  done (took 2.88850064 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.237163372 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109150453 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107890654 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113484672 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110808477 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10833301 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131330079 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09044578 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109022267 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136283409 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089193713 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109871602 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133359054 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128569561 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090229021 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132731469 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132497876 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132580006 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089542767 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109399021 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135231832 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108264345 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113510656 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108741614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108047213 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089622757 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108916488 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128642511 seconds)
  done (took 4.132682098 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086193605 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105875724 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084843029 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104206619 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085155219 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.104917811 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083776864 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103932182 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086223972 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105336235 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105391967 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087835251 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105806864 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087554098 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105934358 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086507267 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109383472 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083791551 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105143234 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103949616 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088394046 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106601946 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08762314 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104104675 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084306113 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108119481 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084103569 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105088169 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105188465 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086590235 seconds)
  done (took 3.722404586 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096652047 seconds)
    (2/2) benchmarking "in"...
    done (took 0.115574104 seconds)
  done (took 1.046205617 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.084349548 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123399482 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084177061 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111457078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113421567 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088714734 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117256689 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112485093 seconds)
  done (took 1.66693486 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105606249 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.127028463 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092753912 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.126926649 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.122407276 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.124300189 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171089951 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09567735 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.11433193 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084992767 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.125757131 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.105672669 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094787389 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108026549 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095070717 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115405921 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.107434948 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104922418 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116249539 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086217317 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110435202 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120143042 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090001051 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106398992 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108847159 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10059856 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118113555 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108036525 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092599152 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.118704408 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093452606 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102127386 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107418621 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094676812 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109662857 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101519895 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121296655 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110578573 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097229082 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115076767 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.134891845 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085685201 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114412239 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112542535 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099857316 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.113137877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.093291638 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.107396279 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104768907 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091257992 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.106454543 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087896662 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.103466102 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114711309 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093896753 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122104514 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089120807 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.111029317 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.111143401 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090866561 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114743321 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089907381 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111204876 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108009075 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095653078 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113711664 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115031464 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087323078 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.102160124 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.089501663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.116815428 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.13171274 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.097296331 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11397575 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113282031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.090524003 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111331907 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09384109 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116642217 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116141564 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093436976 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130276052 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115704501 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088464129 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110936282 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.121511265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086738409 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110732504 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085610348 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124568176 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.106240371 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089635744 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106031019 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116351006 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.093279195 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10767271 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08534693 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116220333 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081365863 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.114333402 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112814679 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089157004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118388257 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118659247 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100096872 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11694987 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.118628671 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088708882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.112818169 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084882096 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114010567 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109501366 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.096107052 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.101827663 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091485595 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110342818 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112793005 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097176407 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.106768477 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09278305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117495988 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11544867 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088572814 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10481637 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090737052 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.112776751 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117018956 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096181066 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108237032 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085487985 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.107538071 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113006265 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.093218228 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.114283736 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119823527 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092952541 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.103558153 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.089901393 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.118846233 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.117842479 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089365689 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109669554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114588671 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090251559 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.107921538 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095398233 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.111075439 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086783952 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114940727 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109908664 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087259239 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117703221 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110579449 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089048729 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.112173644 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098133845 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.111937032 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113976493 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088173401 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.115128234 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094168899 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.109096938 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10761961 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087991235 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.119416731 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090476073 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.108463881 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.105195951 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102634611 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106789571 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.092336609 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10863322 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110639621 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094596692 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110399441 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088512992 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.110089534 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.141460196 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102042076 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115935408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.114169037 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099198909 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113468296 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109412106 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093573001 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114732668 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093565095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.116605244 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114544199 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100708747 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.112551201 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084982671 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115781158 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117715558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087387972 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.110483459 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087253192 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11490947 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116862071 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093543407 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.114732753 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10654188 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089451857 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118162676 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.11038559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.094127542 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10762125 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095001194 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109837671 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120797455 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095400512 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.119855072 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11149621 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088040111 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118303752 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085975635 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116464994 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.106869409 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08784919 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107530994 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09505827 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10883092 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090874466 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.104312571 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11724057 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098432298 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109500574 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087394557 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115153611 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118682441 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09048804 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113131237 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11153273 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095753761 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123984481 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087672934 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.113260491 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119363779 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.093956395 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.104524361 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113904589 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089486129 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.108926244 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088711777 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.107524269 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091507271 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125501911 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.1148623 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082924521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112937294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107337545 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089199938 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.108157343 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.097104143 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.114282216 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.1112617 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100350438 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116138346 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.093998807 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114532279 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.112719524 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095476405 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.116108264 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111733373 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096003628 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111899503 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08851501 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112577489 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087814032 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111480945 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111728249 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.094206797 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110180696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094668651 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112628393 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109432905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092763263 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116395481 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090300934 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.112015113 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10852404 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092800646 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111300395 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089076601 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112970167 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.107333986 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097852234 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113847253 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096622488 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111916563 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.105245366 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.096011753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.112997671 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120094908 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095584625 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1154913 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090291462 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113989511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112748757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099518298 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107455575 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098579292 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117153118 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110757071 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092835592 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111031271 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09108554 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109731677 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111902775 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.095316938 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109851811 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088842464 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.116628883 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112213701 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091186135 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111684981 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09435917 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109940456 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.111847936 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.084700326 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.108705713 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089507822 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115455933 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117126476 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09536085 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.113089772 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088247585 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116554405 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.108756746 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.086688143 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.125812892 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125408891 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.095816084 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119844691 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088334383 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113012452 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119660943 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.084166061 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.109460479 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08934582 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108629871 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118156015 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.095001203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.120608458 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089040448 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110975463 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.107004895 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096139419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.108752911 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093116578 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.111743934 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112836 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09257378 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10906341 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.095305258 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113918712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114392128 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098823249 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.110261235 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091240389 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11651392 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105578397 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088935125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109502785 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093679579 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.115671149 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086962461 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.108801309 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.113566116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093543805 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111864878 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090330385 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.113935834 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117997769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091036046 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.114125812 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099341179 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.104779296 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113750101 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090209425 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114486679 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088518204 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.114898924 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113773064 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096042857 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118689909 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092568761 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112442632 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111503389 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091702158 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11593845 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.093206636 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11557646 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10881158 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.096186509 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11984557 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089321279 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114077455 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109027202 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090754744 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115528523 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09514868 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113654523 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125353182 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09199197 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112819284 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117524759 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094734505 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114332363 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094159039 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113133998 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118265668 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089011575 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120690534 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109527068 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.097051203 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112901028 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087099164 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111568617 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089857426 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110971827 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115627001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.095697087 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110047104 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08954893 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113449922 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112269056 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099319105 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120310019 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111663774 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094448612 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.109696085 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087621067 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116977609 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086050041 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113375156 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113243142 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096927605 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114329475 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0899577 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.111106288 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117847201 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096888732 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.117181112 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.107328371 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096206231 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116132526 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091577366 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112245976 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10978288 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092998593 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.116900774 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091705772 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.11075238 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118977738 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09472907 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117152428 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091142855 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113336908 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111531532 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089414109 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.117239549 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093235238 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119084503 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113130493 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09104827 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121997987 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109727105 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091870625 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119463742 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089781761 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119508348 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.108452669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091661546 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116346213 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095315098 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.110620877 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109652541 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089203735 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11396065 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090794673 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.110740002 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121059287 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.099311603 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113472016 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088590415 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111664938 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087660637 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.110865093 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109996975 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096538647 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11437358 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121315805 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090843615 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110309617 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089793158 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112544565 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09373773 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115125276 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10848649 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089788646 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110122949 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093072774 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120230274 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110306846 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095947999 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115235264 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093103808 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.113937094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12073579 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.088364215 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116131345 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101407106 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.117661012 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112172623 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097084936 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120716478 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.116441145 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09043597 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.117318544 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09285832 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113305129 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.116825058 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094015818 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127385437 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11504406 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091147409 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.11218556 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094502834 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111968868 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119158468 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097840955 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117715251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096582951 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114944226 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127531171 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093853478 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119605987 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114112985 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094532975 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11126531 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091004234 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.1116024 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088704409 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114920183 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116721398 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097493055 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126854469 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.11156194 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101281671 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.12187798 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116634195 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087547037 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112098266 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090437451 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.111112256 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095949528 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.112072757 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.109618172 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.090318905 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.11157216 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091424237 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118809473 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114088582 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.09759661 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.112736655 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.085876977 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114176148 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093757447 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114247824 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.109643136 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.095626758 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118591256 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096431543 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125531032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112644835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093787085 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115276013 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091562052 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.112025488 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118859171 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090752586 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115506682 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09056608 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113881075 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.118423398 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09579658 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123826768 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114659816 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095282777 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.122186329 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098291117 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110767713 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10860038 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09890196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.114406704 seconds)
  done (took 63.809479118 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155539529 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096007564 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108248656 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085759302 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127429718 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112748731 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086405023 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11275529 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111959122 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094121864 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108288862 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08608672 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123100767 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136419836 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127756069 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118278264 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086841348 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114200345 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085578739 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113514858 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12248965 seconds)
  done (took 3.197151432 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111604092 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124668655 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125477757 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131917386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118071513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105489512 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125323813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127086738 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129592831 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119529694 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109413711 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126710647 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122353025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120816729 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100158302 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123514989 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.130234224 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119272222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.105176574 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.125413241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12367152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.126055331 seconds)
  done (took 3.535945585 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098371654 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.116611052 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095599878 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.108160205 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.0909214 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.108856303 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121227922 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.089909599 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117197937 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.089526417 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.112335842 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.089310835 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119027127 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.107576179 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.091097347 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.111059436 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.16672069 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.117465842 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.095494264 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.114703568 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0887696 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11561811 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.110567685 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.091453925 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.111033709 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104304604 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114359929 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.091881277 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.114702038 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.111634244 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.096124427 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.110498551 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093098544 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114085314 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.089192802 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.113266224 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.112398315 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.095733826 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.111671458 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.092002085 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114223836 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.089078332 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.118904128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113585591 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.092149193 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.111456969 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09259512 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114692886 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.085745863 seconds)
  done (took 6.063282535 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12299681 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168573566 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0928654 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135607078 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132895944 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.127411001 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.11842717 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157067501 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.089335057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.11764183 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.134414846 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.131784534 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.094956656 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.123292317 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.121347536 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.094816453 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.119303998 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113425545 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121617189 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092897873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123020114 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120538572 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108909712 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130717522 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122346844 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.116171396 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091930062 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.123470631 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128776445 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122215709 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.101309304 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124661848 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132508047 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115055942 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092401049 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120748619 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.133839431 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.095471218 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121377562 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.112276251 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.096956406 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123390702 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120934288 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13451581 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095552996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.119247686 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117043122 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089486354 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13000895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120366421 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126316683 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1093957 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12252502 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118528466 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123180026 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11012732 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.118244806 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.116053488 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09883871 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127860404 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.112673871 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12102072 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109658612 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120073878 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126346158 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131059801 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.097043581 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12193896 seconds)
  done (took 9.07079077 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121060701 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.125572552 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135991816 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135839593 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124151942 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.103534143 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.125808427 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.124513319 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124446391 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110388356 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126493872 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.172954935 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120679794 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128804651 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103633828 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127378318 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.124635196 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122360144 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099857459 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121829868 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124257402 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133230476 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.121784503 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132362874 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109788506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116357509 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125064624 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12590478 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136333085 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103842607 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136454183 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125564763 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126593794 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136361104 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134915093 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104029691 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117161225 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125889901 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103410024 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125469131 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120180142 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136666764 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100964743 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.11733322 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123582835 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120204928 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131738108 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.110535709 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12453691 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127440422 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123508824 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132452012 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122243625 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101571482 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136055254 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140427925 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134422907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133992996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123355865 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131488142 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131367628 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137672551 seconds)
  done (took 8.604083691 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.142460691 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103470351 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.133476666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109361457 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089711022 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.12360355 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112059635 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.091475774 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1289227 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.12792627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130734338 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101693478 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127222439 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132017236 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122060744 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122908271 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097901395 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121175315 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126322376 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11704257 seconds)
  done (took 3.259226364 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099551114 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.135776886 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.114781922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099130645 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.12007164 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122346817 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.095768579 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119895344 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114756019 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097655821 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127583341 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126764315 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094277353 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122933122 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127295271 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.12149422 seconds)
  done (took 2.739718937 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102293495 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13240949 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131057336 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.113022216 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087312849 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108763153 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.091242419 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107399056 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107097398 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105996933 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112705623 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116208352 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092738415 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.109125581 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084895507 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.120896889 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109334607 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087673342 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114267887 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132800926 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101265036 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.113019849 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.117629869 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093249171 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.11455352 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12007066 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092728823 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.113415232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.112570912 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.094120247 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.114255004 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099051824 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108896282 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113667463 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.088844999 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111691776 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091198362 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114169033 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116364699 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.092017394 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110345437 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111323733 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.093005741 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.115540238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086356051 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11993844 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.110122391 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.100514757 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.11454366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.115172315 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.096262745 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11858711 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.09305697 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129228396 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119181959 seconds)
  done (took 6.825145167 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1050567 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115407074 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084080905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109386294 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113433031 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.091336037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115080628 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092107184 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1139257 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.108937339 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092162509 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116228584 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113358993 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094643499 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117043353 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097005921 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112206649 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116146368 seconds)
  done (took 2.814284488 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097301636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115528702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100598576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.116552558 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.115228963 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095810194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111563088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091705933 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114885037 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092911272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117471343 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.118246391 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092258042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118052207 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092766076 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117607057 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117463586 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091622703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11467996 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087563273 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119397031 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113474152 seconds)
  done (took 3.260788725 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12706611 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.137566054 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.123456124 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232878484 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.135177083 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.120552482 seconds)
  done (took 1.785380575 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11629356 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155096343 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116190275 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096635616 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130874062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121372711 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098838413 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120257335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132390699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130677506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116786259 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105651921 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129518405 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128731909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125028245 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1242849 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095427455 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118539191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112671718 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136145111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095052492 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128115969 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11810347 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116468101 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095339662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129571297 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129323978 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130554754 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116191021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128699824 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103374415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118150506 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128536079 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130241345 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092919083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131262721 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118894359 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136313575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123638688 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126846718 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09434109 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127632947 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130438459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126789421 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107372044 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121083193 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126759073 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118749013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095955214 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14670206 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125195193 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13015363 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125913057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127832101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106558536 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164771062 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128840769 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105805365 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125930138 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130624633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129242017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124372497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126775022 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128751782 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104375418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128554279 seconds)
  done (took 8.937248072 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131021359 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114122285 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117257169 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131457385 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127762519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095478252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118050321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116604954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094655197 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114134232 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162002613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118319113 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12760206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128580052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095407008 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117344564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117069879 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127562124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091824276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146038482 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118089752 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129119568 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128975606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128137539 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12857284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102625027 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119427724 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119839149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094773175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121650265 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128014403 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12085247 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130841695 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092674069 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129997265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117380613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09480002 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125285634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117255357 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124880748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127843503 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136738524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096723837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121489753 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132377782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117421432 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096421628 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113862874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116962859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091862485 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129773399 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130797772 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130175679 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128508893 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116428428 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095948829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118313423 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117484607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095412111 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125898329 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127460569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117088846 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145482503 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116784169 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097997185 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12813254 seconds)
  done (took 8.755421603 seconds)
done (took 170.893641996 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107352172 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.151225584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.130980196 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157120792 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.112909417 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122822486 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145094417 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.125824082 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091361477 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116840838 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094595655 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120892318 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158635043 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.112843946 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.11461709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094582144 seconds)
  done (took 2.873626548 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.208928791 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281823918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134524023 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090468499 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.122184165 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094114733 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116839095 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.123137354 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091704245 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110132462 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090544954 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112852362 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089034482 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112814715 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111596449 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090822372 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113916235 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089928108 seconds)
  done (took 3.114440846 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118624862 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.171958021 seconds)
  done (took 1.21640861 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125278073 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189292633 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310370647 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.161566921 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.146777997 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137569976 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160968415 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.116000011 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.228599859 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107534516 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129819347 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.124626037 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149501083 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121491513 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099875894 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.125373906 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.151488547 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.096938237 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122014688 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.12286798 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145647159 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089745027 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.124358593 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09683395 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.211489788 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.103768869 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112029328 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088825435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123918611 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120944542 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095526211 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133744923 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125635446 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164413295 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130761345 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186053997 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103165143 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11869577 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120812131 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095477934 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126544212 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125198507 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131641607 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103098097 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114238315 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123093877 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090831237 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.111827647 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097895645 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1259194 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11966067 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.096861563 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.18606152 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12324838 seconds)
  done (took 8.020073067 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.831237626 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160720838 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118636228 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.929673859 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120441664 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133095617 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.820723016 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139283952 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242124099 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.816727343 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136489686 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10228779 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241655331 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.267440227 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975635799 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321735126 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698370248 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131632066 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1438866 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162713017 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099778466 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14248667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135077444 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437526602 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.12058433 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115391853 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099807441 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125485206 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167590815 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.117392411 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095369889 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210963278 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.255401218 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215356346 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121068176 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093024542 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117875187 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177445849 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279200158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227046323 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185457112 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112740411 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092101534 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12669316 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135077277 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089332319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196022134 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183330423 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.203279145 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097078216 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124974379 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123423681 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103520737 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.197059544 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126435247 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326057266 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325078476 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093311855 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12438245 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131105437 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251344864 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129036254 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236952286 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142888446 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224372958 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092613461 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804322055 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19955705 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093358449 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123284028 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121729903 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09906864 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126634699 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175089952 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400913728 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129360215 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117836775 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094200892 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235769616 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092834208 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117033432 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170453677 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121395767 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123704499 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106314191 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127245631 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17793907 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.262144749 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126902632 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101379503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121675733 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127699218 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097869764 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.24309911 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231871621 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171626893 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.219579018 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126524763 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196336847 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.177826263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124259524 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182131058 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122452636 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129768555 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10496524 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228571441 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152755015 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.130095849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119807223 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100142492 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.176701507 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097140644 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123081578 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.179608742 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.490650167 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.177245824 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113060634 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096957448 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125241033 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169704833 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122890965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269946304 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123484101 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179166504 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122007726 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090957847 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123940551 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173608139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128566343 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124926788 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125170171 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103441374 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.262542448 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205902928 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128653674 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250087844 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188901386 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122685162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182747321 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12416553 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176698628 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125871665 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124694652 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098155954 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791007575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129164101 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121362617 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099539729 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195306969 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116962867 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129206148 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094173342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112847834 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761535217 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119691649 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.127774997 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.129622404 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10109879 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123468706 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121980127 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097703824 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194618043 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243361411 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102588647 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122802484 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.116095787 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.169102704 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121593839 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093954876 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.117025342 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093748417 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124609537 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119707174 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130135748 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18001016 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17481372 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232940969 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571606129 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116096756 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094489515 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241244153 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115769687 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299824369 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10112482 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238091312 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196199286 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104317176 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320674722 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.198096068 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195917323 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095581677 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.206354126 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090879531 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123905778 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173533607 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117329141 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122907925 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172026132 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13073004 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126733705 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970753407 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095569138 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232359855 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.114139186 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.179216154 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121663584 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126324533 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305432042 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093970608 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134422471 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.194735317 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097842803 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116983015 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720762375 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.117492229 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126284983 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10030243 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234927011 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.195972304 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100814027 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124760505 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126230149 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172969578 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.219151149 seconds)
  done (took 45.629280477 seconds)
done (took 61.772666902 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291177597 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222536737 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268697484 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174116705 seconds)
  done (took 1.986274704 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.188865645 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154895717 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.152476553 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089783452 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160434702 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111558338 seconds)
  done (took 1.812278897 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.388938787 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290525566 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.252705352 seconds)
  done (took 1.886418298 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257949852 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.278949022 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334705298 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.435668586 seconds)
  done (took 2.360150057 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213754208 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131761247 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.103799538 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.146378663 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.176206161 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.218901146 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14880008 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160492135 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136819895 seconds)
  done (took 2.432616119 seconds)
done (took 11.434174146 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.260620717 seconds)
    (2/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.169231257 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.261189074 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.160258258 seconds)
    (5/286) benchmarking ("sort", Float32, true)...
    done (took 0.250711157 seconds)
    (6/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.144425355 seconds)
    (7/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.258258953 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.197218885 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.137426666 seconds)
    (10/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.245397108 seconds)
    (11/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.280156267 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.134225599 seconds)
    (13/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.23662689 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098239206 seconds)
    (15/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.142619282 seconds)
    (16/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11533949 seconds)
    (17/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.223872802 seconds)
    (18/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.162369506 seconds)
    (19/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.221408918 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147235736 seconds)
    (21/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128284366 seconds)
    (22/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099093099 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.184701223 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203777284 seconds)
    (25/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161991882 seconds)
    (26/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.172918594 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.145316737 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178133768 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.158730941 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.240083772 seconds)
    (31/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196428992 seconds)
    (32/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134934991 seconds)
    (33/286) benchmarking ("sort", Float64, true)...
    done (took 0.246886828 seconds)
    (34/286) benchmarking ("sort", BigInt, false)...
    done (took 0.235736166 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122791592 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174720257 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108846557 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.146719202 seconds)
    (39/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.170377196 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.122448214 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.185414042 seconds)
    (42/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.254778099 seconds)
    (43/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.209625016 seconds)
    (44/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094493775 seconds)
    (45/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.134209684 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.202181862 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115771612 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09682706 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.202891676 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139329961 seconds)
    (51/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.127917217 seconds)
    (52/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.251829254 seconds)
    (53/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098510559 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118928313 seconds)
    (55/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140240298 seconds)
    (56/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.139930141 seconds)
    (57/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.129726054 seconds)
    (58/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.210429977 seconds)
    (59/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096139959 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.13305122 seconds)
    (61/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127862017 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.152975757 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.123365783 seconds)
    (64/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.179777906 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.103827237 seconds)
    (66/286) benchmarking ("sort", Float64, false)...
    done (took 0.187684517 seconds)
    (67/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.09428962 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 0.091207503 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.121701203 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10090524 seconds)
    (71/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.106156344 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090046417 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096932878 seconds)
    (74/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097731642 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120532867 seconds)
    (76/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.126033484 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.128129575 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.144081059 seconds)
    (79/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099792602 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.095602766 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142435211 seconds)
    (82/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.104567465 seconds)
    (83/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.127572438 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089713946 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.187099253 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.099089657 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076995404 seconds)
    (88/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.178108996 seconds)
    (89/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176205152 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.124077228 seconds)
    (91/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1400581 seconds)
    (92/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073006287 seconds)
    (93/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176411169 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100990611 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174500815 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207423603 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070030152 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.128317564 seconds)
    (99/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.12614476 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.071970775 seconds)
    (101/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160758131 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10096013 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 0.194567375 seconds)
    (104/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126956744 seconds)
    (105/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122665256 seconds)
    (106/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103982684 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121958968 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091071987 seconds)
    (109/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.140054603 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077781415 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114338129 seconds)
    (112/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.195355961 seconds)
    (113/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07036297 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144453823 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095562884 seconds)
    (116/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178778008 seconds)
    (117/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095257653 seconds)
    (118/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097680959 seconds)
    (119/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176213017 seconds)
    (120/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.069070743 seconds)
    (121/286) benchmarking ("sort", BigInt, true)...
    done (took 0.251117002 seconds)
    (122/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.125817317 seconds)
    (123/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.160283272 seconds)
    (124/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.153596195 seconds)
    (125/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.117920779 seconds)
    (126/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069744591 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115181983 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097811359 seconds)
    (129/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.102970188 seconds)
    (130/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.127920685 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091307299 seconds)
    (132/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115843636 seconds)
    (133/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10130145 seconds)
    (134/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.144615581 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069553656 seconds)
    (136/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.152052354 seconds)
    (137/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.173088027 seconds)
    (138/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.072038842 seconds)
    (139/286) benchmarking ("sort", Float32, false)...
    done (took 0.187694737 seconds)
    (140/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.131637157 seconds)
    (141/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09848814 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.114298169 seconds)
    (143/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095321863 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.099177944 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073718404 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113848206 seconds)
    (147/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.173607635 seconds)
    (148/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105721067 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096886621 seconds)
    (150/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.095092208 seconds)
    (151/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131793649 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189100075 seconds)
    (153/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.069092778 seconds)
    (154/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.128362683 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.143188947 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089798746 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115996253 seconds)
    (158/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.127002352 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208655376 seconds)
    (160/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.082078704 seconds)
    (161/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096355876 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143214328 seconds)
    (163/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119012629 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093571707 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126986471 seconds)
    (166/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.071844423 seconds)
    (167/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124449337 seconds)
    (168/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.178255162 seconds)
    (169/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.1381071 seconds)
    (170/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.121329472 seconds)
    (171/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099303052 seconds)
    (172/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118833433 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170578567 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 0.461493303 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087836229 seconds)
    (176/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.154597822 seconds)
    (177/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12228046 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103797618 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124938107 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089717995 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115301064 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.143141981 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073781277 seconds)
    (184/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124399278 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091627725 seconds)
    (186/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124263591 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072793905 seconds)
    (188/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119796938 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.118922227 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115232263 seconds)
    (191/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.114862694 seconds)
    (192/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.072047038 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069388103 seconds)
    (194/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.095230215 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104055352 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.116856596 seconds)
    (197/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.069150539 seconds)
    (198/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.129121269 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096216951 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116293 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124829955 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073769069 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088979881 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173710297 seconds)
    (205/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.117683212 seconds)
    (206/286) benchmarking ("sort", Int8, true)...
    done (took 0.238716662 seconds)
    (207/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.079445991 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12929957 seconds)
    (209/286) benchmarking ("sort", Int8, false)...
    done (took 0.203517342 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114890802 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093085861 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.095436615 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115604976 seconds)
    (214/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.125013336 seconds)
    (215/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070581876 seconds)
    (216/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.151438165 seconds)
    (217/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071976503 seconds)
    (218/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.103937132 seconds)
    (219/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07246615 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072136842 seconds)
    (221/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.095828568 seconds)
    (222/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.071384875 seconds)
    (223/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176754219 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071843218 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173026834 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11457038 seconds)
    (227/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094253873 seconds)
    (228/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069679983 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115337584 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114622687 seconds)
    (231/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.160268836 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098039553 seconds)
    (233/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086380306 seconds)
    (234/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115997625 seconds)
    (235/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10187434 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.124150954 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089195114 seconds)
    (238/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.114145054 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123826468 seconds)
    (240/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099790074 seconds)
    (241/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11519669 seconds)
    (242/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.071381086 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070039132 seconds)
    (244/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121309682 seconds)
    (245/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070124465 seconds)
    (246/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095573591 seconds)
    (247/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099644947 seconds)
    (248/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.094959055 seconds)
    (249/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.151853582 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098671107 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.189565033 seconds)
    (252/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120005643 seconds)
    (253/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.106942872 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073425651 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070295919 seconds)
    (256/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095622295 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096867641 seconds)
    (258/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134973762 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121226462 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.162707719 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.129859909 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071695986 seconds)
    (263/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.095928997 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089090295 seconds)
    (265/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.115493153 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088443132 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.123228592 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123131311 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100305769 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116574418 seconds)
    (271/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081182404 seconds)
    (272/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119286795 seconds)
    (273/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076146524 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.125033166 seconds)
    (275/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09428988 seconds)
    (276/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.144432635 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089756608 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117743654 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070371987 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.099863062 seconds)
    (281/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091019329 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.116389153 seconds)
    (283/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11359852 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097959231 seconds)
    (285/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073896313 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.130381572 seconds)
  done (took 38.166111506 seconds)
done (took 39.122185066 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105264467 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157894813 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.124566209 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120210137 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130353935 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118714898 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100390855 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.127591351 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103065556 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.13189551 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.127648551 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072546921 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125818947 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100558082 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.126570269 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147237426 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104175141 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.123553864 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.123664129 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.09091521 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.123713635 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089677928 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.1170428 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07250139 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126986533 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098056949 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.122385589 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125043235 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091001177 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115801454 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094538991 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123641638 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089231091 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129598188 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.121831705 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.1003694 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127028056 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100069083 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.12028139 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114773639 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099550785 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.114856739 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098339707 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.124888877 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097093042 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.121910643 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.123245887 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104552561 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.149073327 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11992446 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100366583 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12643377 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101440656 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.124444699 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093288779 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126322597 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.12045868 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122937121 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.125880253 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120393614 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099151163 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.123728329 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095820627 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.124752062 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122863311 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103335533 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127615172 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096793562 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127284904 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119848858 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093247898 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123768445 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094440086 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.115305838 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099818626 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12781822 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088747361 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.122260835 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122522825 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097195465 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114868966 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092907291 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118155347 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097373497 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119314208 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072257443 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.120620062 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096265519 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115750145 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.123866863 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098086353 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.1224489 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093539279 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128172095 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089599207 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.122717517 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115244528 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.091642044 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118166989 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095125279 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.115864872 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093922158 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125723154 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091963965 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.123070064 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128200647 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091453256 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.12216065 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089956028 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115732062 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.13088062 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103373971 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115522108 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096227509 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115240699 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098322679 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115941833 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089829954 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11673537 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114283141 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098683954 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.115502491 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094590136 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.123823925 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105153429 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.116665231 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093487514 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119878606 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.115230796 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098072055 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116514292 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091990201 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.118477846 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08132959 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118809664 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090722224 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.124160898 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093444369 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.125639402 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117124499 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100976495 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121163207 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097554525 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.12196596 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089080969 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.102988321 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095644248 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119286256 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091884294 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.117661573 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117676083 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091808013 seconds)
done (took 17.885908176 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092781787 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191919244 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.161063251 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.152451026 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.138266975 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.091737565 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128907072 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149951767 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093850304 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.151430239 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142087636 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13664385 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.131090862 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117396653 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115410181 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097165313 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117526722 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108635197 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156597893 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138572012 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.172867299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114698665 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128633137 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142155173 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127156107 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.144235324 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.09350745 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120855926 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095196913 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133479645 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136678757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.096371854 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.116910736 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114222976 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135876932 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124674824 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092363128 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123722777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090958956 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.118596546 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.148847779 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137788428 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098210384 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123167676 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095729361 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.126206236 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092422544 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126936285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.128755879 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095740774 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133371523 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16484402 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120037372 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10845862 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11672968 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126739085 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108103353 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.125987045 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090763989 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.126761228 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.116490614 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.095536625 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.134086578 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147004857 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095549733 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.133376959 seconds)
  done (took 9.161021275 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110761075 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.148369847 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135778223 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111584071 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117816059 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091227863 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118640486 seconds)
  done (took 1.854913412 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094558311 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144621613 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135989998 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14437903 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142461918 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.118854246 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125001476 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117780751 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11217586 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120130268 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142190961 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135517053 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120377793 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124829348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.121497974 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118463386 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145094777 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093099693 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122485966 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120599341 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123517972 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136871145 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095969349 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118355189 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110408839 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11978587 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169084361 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096955404 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118071448 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121525622 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092826559 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.158800255 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136741676 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101944622 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119475818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111894028 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137875603 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115957196 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.110217671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.125403568 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135477219 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095405163 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119295522 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.092553134 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.123494234 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107068181 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124220185 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093329334 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122126768 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143545602 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094142241 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138472017 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092383899 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.124412638 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119829531 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097728741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128418401 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093961328 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143464548 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116913706 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114155947 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142257763 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136197201 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113724334 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123875567 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110911662 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14231015 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12093719 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096143146 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122715536 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113113753 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121698323 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.094659024 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.134338189 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120706025 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120534413 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.150454994 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119794502 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104882772 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.120021512 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094452173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121779449 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147323711 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097352612 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121600823 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096889078 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123492436 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091412485 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119267663 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122164684 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093155001 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.120055251 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096310449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120071175 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095535833 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140282041 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.1197995 seconds)
  done (took 12.600435274 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095114612 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11912768 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099642811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12082189 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094342153 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120730024 seconds)
  done (took 1.682951385 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123661331 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123732339 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13513986 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100885412 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162470092 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139214275 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.11278118 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130460043 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.141586231 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106377593 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138939875 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.140523798 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144566494 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10032508 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.139509906 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.1245872 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.114163902 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132335488 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131952319 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102281342 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143931762 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125987933 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100862241 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141645703 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.123038074 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100619327 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133754275 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133066034 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106307225 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129709747 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125660519 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.098418919 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126335203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.1279954 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.114093763 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130669543 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124985407 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.099462495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131963683 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122409693 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.115860243 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128216571 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131770689 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099514771 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130869854 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125398766 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099387809 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132475882 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.139873688 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099429077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126304607 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099217486 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.124647485 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125343614 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10025076 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128949216 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.125738796 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113052625 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12772062 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127428421 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097294851 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125718398 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128518705 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097510782 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.136752046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.125326444 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100535818 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128374678 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12745302 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100886091 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125436278 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122071716 seconds)
  done (took 9.842887914 seconds)
done (took 36.158710096 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.708267995 seconds)
  done (took 1.74176346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.862113784 seconds)
  done (took 1.896818245 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.433719233 seconds)
  done (took 18.496583825 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499513149 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.569464641 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.023479588 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174732203 seconds)
  done (took 3.296328269 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.99138649 seconds)
  done (took 2.042579699 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.292178678 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265289589 seconds)
  done (took 1.59434382 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811682345 seconds)
  done (took 1.853970721 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.507848928 seconds)
  done (took 2.547109436 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339675607 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196039511 seconds)
  done (took 1.592095112 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.577951329 seconds)
  done (took 1.628201962 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.50368617 seconds)
  done (took 11.557905491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.276218287 seconds)
  done (took 1.333990282 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312529669 seconds)
  done (took 1.363110729 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.644087291 seconds)
  done (took 4.693614992 seconds)
done (took 56.678168166 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105050437 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133081059 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106839856 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130671543 seconds)
  done (took 1.518813854 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110874503 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1274604 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108751506 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126824379 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1364359 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100614378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.130206078 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132804284 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100307765 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128605251 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125771982 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10105033 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131159284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101912409 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125035745 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12958395 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108848673 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127186775 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130270716 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10179226 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124398908 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102975478 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131435631 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123887495 seconds)
  done (took 3.921286052 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10544808 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124174911 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100699266 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124797328 seconds)
  done (took 1.507280117 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105397099 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137711154 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.110116699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132517939 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.137681453 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110001808 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124591757 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095970587 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126084726 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129855009 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095789666 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147259428 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137168583 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103822692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133051486 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092716186 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122932368 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136983913 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104750366 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13264226 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096996458 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131596258 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120398825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.115077025 seconds)
  done (took 3.935988671 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178599688 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13427187 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146119145 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09903506 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16774841 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14743011 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091444966 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.147977345 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.119328773 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109459628 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.124725343 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166331163 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.10755063 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120616137 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118319301 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.09370109 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132663988 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.10732786 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.123557305 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.132383381 seconds)
  done (took 3.629960192 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103853446 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12278394 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093039778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12246238 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103618588 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.127441806 seconds)
  done (took 1.730655955 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102950875 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119797623 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098220039 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122948176 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099004736 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.120112096 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092127699 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.122272255 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.12058055 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093015172 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12134518 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092808834 seconds)
  done (took 2.364892996 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.528453322 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.127079467 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125497445 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093997048 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.131748331 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.118611237 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109992934 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.124326551 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146973031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09365068 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.120243435 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096436121 seconds)
  done (took 2.881238503 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213766837 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102742977 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274443639 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.413404353 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177538719 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170032502 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293786941 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194802365 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.185876366 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146209154 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201332432 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169741849 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160264436 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188017026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146248463 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14809157 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185325661 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206062073 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158343232 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21328086 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198423791 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172119736 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186661585 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157277278 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118570738 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176041366 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127740186 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136343835 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183820536 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176885154 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185788287 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161887302 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157903785 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.460745103 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211990932 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216565654 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294671171 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144214957 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171185518 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172758185 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233685513 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147380517 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20019917 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16210795 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137898357 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191213013 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.347298182 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.192742217 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142629338 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119667354 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21699512 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189354881 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.181206867 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145653943 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335759819 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162494505 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.129427132 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22748733 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215973603 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227054916 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175474612 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100180351 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223131754 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196795899 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193729827 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151718322 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.171372816 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138832168 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17784458 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197830089 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209158028 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174287081 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.19018153 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147020693 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175637065 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176714778 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163926614 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189209933 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168268152 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128153794 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160733674 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152829056 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111755932 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200675274 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131002451 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210979466 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147161715 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166012448 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244763103 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137261694 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165063694 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202418924 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179060399 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152547237 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.088041908 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155733328 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158412742 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167475536 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141869355 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161881598 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126573032 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136443669 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163206538 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129503477 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169430036 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094378836 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360806902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173406194 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132601797 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168410416 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127406865 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156577942 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202675601 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197309535 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147056222 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111644588 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235731249 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169362518 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144095361 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18120734 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206359089 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148307019 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151896332 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185140838 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216417718 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147177323 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199116432 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152032115 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141648989 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138535294 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173763302 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164639907 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165154022 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139199054 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159867751 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202471948 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102212051 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14709361 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181666189 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139795574 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137900206 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149638192 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149957187 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114452199 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147602402 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147734747 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166019092 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168945154 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16076493 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161146214 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151731349 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199542342 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147264338 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155287208 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15259152 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099368141 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.178189815 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227147533 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10812814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234686219 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171820575 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239138152 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176362302 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111471691 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181690407 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137848759 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125494106 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178899074 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17038734 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16717202 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190700369 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234022374 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17315933 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161763148 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159468448 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173420614 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171249655 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156721073 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113976882 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166041547 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16170847 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12987863 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.136115954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.139278524 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122320703 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145158132 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141350943 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189894603 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171632659 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226384582 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169042534 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149508736 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187241494 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106791453 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197505133 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.408217007 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122438213 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.221775227 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192863664 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177592969 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148529899 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183862097 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124771278 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102709121 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.148146098 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169806503 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141859381 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140539846 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160973535 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186813082 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.330273839 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161425909 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24598203 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17690041 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196724252 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128343556 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174455656 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177427326 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169785124 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157738563 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143384434 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155997273 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183266559 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156171225 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239734798 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174854344 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181416814 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201528981 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155808167 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139194761 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154680517 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173377713 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154661481 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169313938 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151057658 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116329388 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.342397686 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10424412 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13999033 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180583952 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154526086 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213937576 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124884116 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203654513 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106073516 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161407876 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164967011 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158317324 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112613476 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332590945 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190346212 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151315664 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345001383 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181272139 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135247523 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319786756 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202847927 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.363262767 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116824231 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156465697 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16607638 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167307412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.348622661 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184999971 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163321287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194273307 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162896576 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141555011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116310883 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154633208 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157305031 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138758817 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144264786 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164174686 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113242478 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210090999 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120791994 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163033269 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209774281 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128435119 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151848396 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152403076 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215393217 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169743861 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213332725 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127162473 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173220145 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236257671 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102445794 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138302695 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139859079 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185906189 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142581619 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173289976 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197057392 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23748601 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176416055 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176147252 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144895401 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097618935 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165477103 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159521586 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241079823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154290967 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.118760691 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2249339 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11272503 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139316582 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166921122 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300705431 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151230328 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186025963 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112061168 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.292910057 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134316483 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110584675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16791174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182727843 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144610128 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181702476 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178102273 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155192993 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168444975 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152727726 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200940026 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250641428 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187194812 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178491935 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140049906 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164122647 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320028055 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184301014 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157910128 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142408396 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176627491 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19471626 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.187870986 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.148657317 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174947794 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174742795 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165917333 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176774922 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144190402 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234257615 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113653979 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178453171 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154375315 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140762025 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168687589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197388264 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146359419 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180545417 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169359193 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141548073 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139834505 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162191679 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1697745 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154736854 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103564238 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20839937 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101943644 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177301374 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191775395 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142908266 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161340188 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153007302 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14088116 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156959286 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15638069 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117302944 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172832352 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195244388 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139390802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184671761 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18443661 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171659697 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.34564627 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14863216 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.713677866 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107827576 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222017143 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125125849 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21308297 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127006058 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208130284 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13754301 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160694731 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208001567 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130250516 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237621521 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205133959 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169286525 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110924975 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157227862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150844013 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14637961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157580734 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175207577 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151534468 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142986749 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166972214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160470448 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112095701 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145950806 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197966449 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15418765 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186217485 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186669245 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145857916 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178972072 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178223883 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139911474 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168160195 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184697876 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149450005 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156226466 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142686832 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145460661 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193858763 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102723404 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173315072 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171913436 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166845372 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175348407 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14311131 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176696151 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15908871 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171605143 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141240506 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161991023 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164198043 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147433534 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107620874 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160867463 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162188211 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.157399987 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141643123 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145673594 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219134826 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101181434 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149043568 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297392685 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167111004 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247498259 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141404404 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113317934 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154025708 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153126155 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165040644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172028539 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.143414717 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112445974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142612605 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162236915 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141330452 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163732745 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205347311 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320704916 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23661931 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115399687 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287710832 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147603367 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162307171 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092576956 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.140519544 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153313948 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147719061 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155253194 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20248453 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196579825 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.154402556 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140445521 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111708037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131939007 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141721147 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167834674 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161267913 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168628571 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119273352 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114316383 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158012872 seconds)
  done (took 84.139224286 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156538184 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142369523 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156212275 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.210130766 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186758658 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.301861072 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.218137166 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262243377 seconds)
  done (took 2.786302741 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098811846 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.151856216 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162914142 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13905764 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096610995 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.126265134 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341501931 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.139967439 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.124236833 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.154810544 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.139497171 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.12517442 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.648858225 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.094404226 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.124097244 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.187349013 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.097110055 seconds)
  done (took 4.100890433 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.267531929 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.514114692 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.154106226 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.203181414 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166353632 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.123401175 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.738164611 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.126487628 seconds)
  done (took 12.451235341 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.128863914 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151693336 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.168394277 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.140980146 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1580617 seconds)
  done (took 1.907602282 seconds)
done (took 127.920332919 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10228897 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133411825 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101760657 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137090475 seconds)
  done (took 1.6222544 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101365223 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078803843 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105262834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078059639 seconds)
  done (took 1.522658607 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.2003476 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.182837034 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.410115494 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074714688 seconds)
  done (took 1.672701992 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120808923 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138651486 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.13811871 seconds)
  done (took 1.561606653 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111367603 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.135249746 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107493684 seconds)
  done (took 1.506993308 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111724464 seconds)
  done (took 1.273104767 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115839262 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.146210241 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116003539 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.145514906 seconds)
  done (took 1.684568796 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103704223 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132445783 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116545835 seconds)
  done (took 1.514558954 seconds)
done (took 13.901848378 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111037416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434817746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423686086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114473963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.734241377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412923869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02507017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152241736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175811874 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125933532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115705907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.706721011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044391897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349868204 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.03199379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.468398758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679592625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124277218 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095450343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126430741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007424442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125218673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126153213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096065629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707650395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.43023818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099944643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.469976563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096498938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134892863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382781385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128070886 seconds)
  done (took 17.411446979 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102716491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18673029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136384139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098458478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133799233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097888191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.130227617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12585056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191006535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098571903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14554255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094843375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132068964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127252891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119070555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126207758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126193362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098196596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125794567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099138123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146103906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095536972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12839887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124749077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099947886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141108576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126007675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098028899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125500181 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.106040022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129723795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098221953 seconds)
  done (took 5.083918942 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149852606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195123809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138550798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.160145324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180935022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100041558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.207216111 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152875945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193814369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12646347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116731585 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126871049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.162656424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10082237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149024515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097075708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128504535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12530395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098317142 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128819677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116473947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127018596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127431812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098000229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127732958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141728078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101339561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125641426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096592161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135154826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128182554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100146517 seconds)
  done (took 5.436148912 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102444657 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130866669 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11381568 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14484364 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127959089 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101744559 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.130593354 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09954448 seconds)
  done (took 2.126168559 seconds)
done (took 31.222658085 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116186611 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132407573 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110815212 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.140026231 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.135210281 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110528078 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125514118 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107910542 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.140606057 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104882491 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.143704587 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124576315 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099200897 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124620207 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.110224101 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131847759 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.138522265 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107967698 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.141087269 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.11054915 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128166221 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.137121769 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108680713 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.140686347 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.11155873 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.141679832 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143544535 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104294538 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128765922 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097731097 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13205362 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114949547 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13549816 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140818968 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103020149 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.131367673 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098120077 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131402113 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.139319891 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109886542 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133551879 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108000718 seconds)
  done (took 6.338622832 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115503563 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.153495051 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112194329 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.115068948 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09157133 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083793762 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.145256102 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087913809 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114485463 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113492904 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.108845849 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080191133 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110601727 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076922254 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079069839 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.108655014 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083099833 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077463435 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.109289051 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080231543 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.111945712 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076375851 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081041531 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.11210218 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078050507 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112424096 seconds)
  done (took 3.801575804 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105806914 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141744418 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117642965 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181694982 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162161234 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.134006614 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106575674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.146116329 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11392054 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.127343976 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097506159 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15784849 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144821198 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103347535 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.13095946 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141342758 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.112138837 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128541097 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10261436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147437471 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142190208 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.108324212 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146612544 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107957533 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.127445072 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127484814 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103524968 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138607647 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104523252 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136007408 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132767637 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102714137 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128656818 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109106841 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133864592 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126508014 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117829637 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136634212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106081092 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.128803264 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.103445905 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131452243 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148091836 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135742718 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.12779739 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13404566 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100367053 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137122295 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097594381 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14548382 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136080872 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097488499 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.129706261 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097644954 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128640748 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111886645 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12911965 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127839029 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110518864 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132595425 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.109444425 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132027233 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140490951 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099121815 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13250345 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098411629 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127748582 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095576235 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150802417 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132407916 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139025542 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.132181514 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127447688 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106182335 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133696015 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103241294 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.128219181 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140614048 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10749073 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.130051941 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107920386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.131050364 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099596176 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.146555772 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.129478817 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.099723797 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127845175 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.105154187 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.130288113 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098604527 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142245392 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127531409 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100465452 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141742906 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096896157 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129125269 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133177281 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103058978 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126645957 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110085739 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133870614 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12704481 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.108309033 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128399212 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09939646 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13743114 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.131422168 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097906568 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132605334 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104036296 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12822058 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099814313 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130837954 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128203231 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.107993755 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.134540798 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099269159 seconds)
  done (took 15.595742823 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.238962615 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.223672725 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.196172075 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308225762 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141585521 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.1529364 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.221249878 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.132853897 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129231248 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.167081189 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179022938 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.191859695 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.178548903 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188999218 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.180414728 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.127111374 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117644083 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.175940678 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.223643309 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.302364836 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14943328 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.105819889 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168844239 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.167150692 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.142139632 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137608108 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114144645 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.141413617 seconds)
  done (took 6.099241517 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114956275 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161022351 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.133035621 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.12051096 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156218338 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128195117 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102342523 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.129776558 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110650384 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142411987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.127823154 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103471842 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.137377585 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.137020468 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0987919 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.137918708 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107522964 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.130636911 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129288424 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103967564 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.138602134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106923965 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.133911816 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096121568 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138669838 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126441585 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0915876 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150669534 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127890545 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119673325 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127039906 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104895406 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.14256197 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12873408 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09733305 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.130242411 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099663764 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.130392331 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098521333 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127089814 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124459037 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081893476 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095206367 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143710116 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.135603505 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083241737 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.135408162 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102963843 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129651927 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.124702412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102358348 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129810994 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100833353 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.135771297 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099904712 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130292093 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099426171 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12058141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102862065 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.130232804 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086698078 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126708841 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.131309183 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094905903 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136754569 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102490272 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127496208 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099978339 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.133661805 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133761168 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.101516753 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134575127 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096056965 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.131422008 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100088884 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.134903371 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100110896 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127551332 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.127219122 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098357427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107759975 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09926675 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076434041 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131356732 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.125034753 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09759577 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.130326817 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104629397 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145033224 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128862673 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107000294 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128839378 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096303357 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131216392 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085766783 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.131549902 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.144482725 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117439624 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.128790967 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125115276 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113488127 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131468332 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097368748 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.110088775 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106531582 seconds)
  done (took 13.667306278 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135755121 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.159478978 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129359122 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116298889 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163349976 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.164096421 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104183792 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.136562324 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12768307 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118296089 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129137941 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10724949 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128951398 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.110579351 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162528761 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139444769 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099766793 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144200587 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132260763 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174921054 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117429779 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.148718884 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.115336851 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129561149 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133374585 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.116233213 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.166632736 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.142471991 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111771222 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147977086 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111743501 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165927075 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.15005943 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102139918 seconds)
  done (took 5.7476295 seconds)
done (took 52.424570078 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.276635242 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.5320618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.266130842 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.194754732 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.293510772 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.268544471 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.285291266 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.265941001 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.667010914 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.272551669 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.54925359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.823927564 seconds)
done (took 59.891675646 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.318049617 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.427319901 seconds)
    (2/2) benchmarking "String"...
    done (took 1.568784609 seconds)
  done (took 4.188840963 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.963747872 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.2345597 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.534453329 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.289012031 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.267094917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.554743787 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.101356271 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.696340504 seconds)
  done (took 28.868851374 seconds)
done (took 43.533211658 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.28297224 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.329985009 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.306931363 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.245069079 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.384287538 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.305264094 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.597475285 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.298659863 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.289196557 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.253740643 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.291205994 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.270528724 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.270405153 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.663469321 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.273235091 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.289261159 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.331074796 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.777022262 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.689399693 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.283447494 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.295799994 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.326368015 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.306974989 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.283217699 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.321100632 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.271506603 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.272616179 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.275360001 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.953698755 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.271970792 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.293810762 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.787242346 seconds)
  done (took 193.285306701 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.2708942 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.278753958 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.413333644 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.325352395 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.814799864 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.474866732 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.414191688 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.890544475 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.297772245 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.289904907 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.525302757 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.276872242 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.595838216 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.303053152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.300180421 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.350339917 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.492317227 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.646640801 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.309727554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.398562409 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.275508045 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.550607321 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.460713062 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.538593814 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.288280883 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.344309062 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.316947105 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.293972527 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.465471882 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.428902593 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.317065364 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.337017512 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.92009138 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.128867019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.280932305 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.296965386 seconds)
  done (took 153.106744556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.670691277 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.271029533 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.272223723 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272105097 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.306004356 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.272352418 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.860086493 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862921446 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.784643907 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.380368416 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.762698547 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560086956 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.272422091 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368154595 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.285342104 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.274301806 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.287776792 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.31908492 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.273326177 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273953898 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860504241 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.286421006 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.265372472 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.452465718 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.291694403 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307043289 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.663225111 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.273744327 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30700867 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.898762609 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.610574103 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.327548525 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.274661386 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.69416287 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394027422 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.275996998 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30712497 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.273768524 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.557656269 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27401207 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.274422622 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.277582481 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.988507453 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.277341706 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.862682821 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275379162 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.261648945 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.275844221 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.274541373 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.520410516 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.024179394 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.296185076 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.275101833 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.275152035 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.273997399 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.273342433 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.306563377 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.431918781 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.368327807 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.290748866 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.274514152 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301979885 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.268860669 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.370508754 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.286945699 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.257581148 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.331750051 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.377504562 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835338623 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267112183 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.266434413 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365505315 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388518172 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.267155289 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.267232015 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.26705406 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.267354189 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.379692114 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.267205502 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.672140922 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.445008837 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.286968627 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.67239428 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.370247746 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.268859536 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.690160354 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.273813966 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.267508451 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028038797 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.365841978 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.267744555 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.268086067 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268223709 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.672860435 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840818125 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542013938 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272413896 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.268461313 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.42481078 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273964964 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.693725667 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.829561578 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.961632653 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.275970827 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381897848 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446077268 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289005701 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.269662197 seconds)
    (109/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.324748256 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.269675944 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.269136296 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.269307722 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.269139839 seconds)
    (114/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.638709567 seconds)
  done (took 373.468196681 seconds)
done (took 721.052682443 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.894293567 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.886142335 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.000045235 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.880621856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.840905832 seconds)
  done (took 10.695511278 seconds)
done (took 11.88836828 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.46726839 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.466146561 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.333039775 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.468570075 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.302559051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.484849541 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.447060658 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.290713668 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.374832788 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.35581897 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.376263792 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.32677054 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306096467 seconds)
  done (took 19.193024484 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601949668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.616542214 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.337224025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.608605451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314896105 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.603646093 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479781924 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.501219276 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.503952287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309532931 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283396947 seconds)
  done (took 17.355296451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612873868 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.610742757 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341395701 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.610238319 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314418096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607175353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.485182596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.500756646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.500406993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309657056 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.28361344 seconds)
  done (took 17.371295288 seconds)
done (took 55.112431531 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.280872751 seconds)
  done (took 2.476107473 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.317828421 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.480002296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.302969705 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.285617546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.280896262 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.282169051 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.28677706 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.282854695 seconds)
  done (took 11.715225747 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.277692802 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.282007956 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.27794418 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.280236543 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.276537767 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278115605 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.280386065 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.281053814 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277733691 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.28018043 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.279480288 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.281167463 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.278915762 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.282504606 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.280434315 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.278690528 seconds)
  done (took 21.66933078 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.279933544 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.278556454 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.277740864 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.27923365 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.278559224 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.277543761 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.280668313 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.27881254 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.278399302 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27961987 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.279410278 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.278100169 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.279079205 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.278175923 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.277564662 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.27852905 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.277483006 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.278430099 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.283199589 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.277483464 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.279194544 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.277665949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.277908115 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.279223173 seconds)
  done (took 31.889109857 seconds)
done (took 68.944352651 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.897222046 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.877378849 seconds)
  done (took 6.97042527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.336561302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.340944434 seconds)
  done (took 3.873123905 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281084587 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.282420866 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280600841 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.280891954 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.280217064 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.279407682 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.280545799 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.279555503 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.279809954 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.28170111 seconds)
  done (took 14.001537676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.279638294 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.278206549 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.277394773 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.278747709 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.279113512 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.276004216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.279861567 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.278139658 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.277956091 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.276032206 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.278645304 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.27623375 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.278885283 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.276665579 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.280450228 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.276007607 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.276359503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.277360543 seconds)
  done (took 24.197181344 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.280151502 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.299978268 seconds)
  done (took 3.774108992 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.409486422 seconds)
    (2/7) benchmarking "second"...
    done (took 1.318561447 seconds)
    (3/7) benchmarking "month"...
    done (took 1.386655329 seconds)
    (4/7) benchmarking "year"...
    done (took 1.37408399 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.31919536 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.297943764 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.318998684 seconds)
  done (took 10.62040329 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.28003434 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.472309683 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.579704757 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.88555213 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.280173265 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.283267269 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.145415376 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.284102134 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.284259278 seconds)
  done (took 14.692372802 seconds)
done (took 79.324405903 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.282113959 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.291905389 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.552635428 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.295113585 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.291222965 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.572983267 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.312818973 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.426041928 seconds)
done (took 38.220289879 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.283651425 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.259559967 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.080702288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.273454045 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.363518471 seconds)
  done (took 19.175778708 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.325582891 seconds)
    (2/2) benchmarking "read"...
    done (took 1.610943073 seconds)
  done (took 5.131940742 seconds)
done (took 31.786676596 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280602151 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.277684045 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.277842639 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.280567255 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.278541535 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.280548736 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.277655257 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.277614338 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.28084972 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.281261723 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.282001831 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.28026445 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.280590416 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281109046 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278308649 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278949125 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281553045 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.278170913 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278470085 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.280943413 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279034153 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281774484 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.278726281 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.279438733 seconds)
  done (took 31.909479782 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.282045826 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.279829058 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.280975123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.282391041 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.27891723 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.281175588 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.282560126 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.278385776 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.282754541 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.281619505 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280608899 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.281488132 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.281690828 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.279842124 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282902464 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.279490573 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.283320998 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278938956 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283062815 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.279196369 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.281308796 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279484467 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.279999897 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283758782 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.28129269 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278960359 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.28218777 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.280309916 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282123077 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.279284144 seconds)
  done (took 39.627910657 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.287506272 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.290079219 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.282394011 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.28218572 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.283080438 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.28275632 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.283092108 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.282497622 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.282915834 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.282948525 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.282422338 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.282458204 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.283053217 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.284114624 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.28279218 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.283362067 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.284335205 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.283945609 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.283566397 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.283989927 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.283380062 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.283339555 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.284147708 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.28465671 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.284607791 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.284065246 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.285000681 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.284837562 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.28385275 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.283821131 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.285462276 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.284932064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.284171002 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.284393932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.28496553 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.285536473 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.289556903 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.29234477 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.284874513 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.284882879 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.285415007 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.285038023 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.285767282 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.28581562 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.286280997 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.284775684 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.283564364 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.285119228 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.286097319 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.285229526 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.284775066 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.284453727 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.284990445 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.285996947 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.286350129 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.286285948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.286331259 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.285548633 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.286629048 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.286077279 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.285954497 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.286034885 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.285903893 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.286652587 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.286955842 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.28595393 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.285701073 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.286957746 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.286092782 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.286867193 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.286800617 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.286675428 seconds)
  done (took 93.723348039 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.287957199 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284537719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284023582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.283819206 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284476238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.286997581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284173136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287533111 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284959555 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288107526 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287822303 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28504616 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284399792 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287546661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288114285 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284743468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288109718 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28591245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.287678466 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288908215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288548203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.285213852 seconds)
  done (took 29.501106584 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289672527 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291199162 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.286367064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289410659 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288046729 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289367603 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289023314 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291207383 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288981226 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285444609 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286152446 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28922595 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287787776 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286684832 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286817944 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288155645 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287973847 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287985185 seconds)
  done (took 24.392534551 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.292268314 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.287370313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.290447333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.287266058 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.287626219 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.289580294 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287350481 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.290733477 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.290112521 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.28813494 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.29058939 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289865284 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.290239737 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287458059 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291463461 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28915801 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.291400895 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288117368 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290408125 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288387812 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.288392108 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291526087 seconds)
  done (took 29.572827165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29143026 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290723277 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.288950218 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288791299 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.287995426 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292261182 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.29378993 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.289816309 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.291997585 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.290993902 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288337238 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291254234 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.290536875 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28963067 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.289497105 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289417859 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292849086 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291482821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292446801 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29010275 seconds)
  done (took 27.01740011 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293428051 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293286592 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292836191 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293501771 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293021292 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294610528 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293935345 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294114091 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294148632 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293609383 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29424088 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293500407 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294007623 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295442149 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294107225 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294898729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29465574 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294800576 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294857854 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293699027 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294296721 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295193561 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294512092 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293083527 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294966275 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294804021 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294949121 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295140194 seconds)
  done (took 37.444998276 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294437228 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295387701 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.292630177 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.292163873 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.292272852 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.292553073 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.292690441 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.293068384 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295262501 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292726211 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.296013139 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.295369578 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29508258 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.295233772 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295391069 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.294533896 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295693831 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.293795856 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293601145 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292467002 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.296575607 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295337247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.2963156 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293493119 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294053799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.296562384 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293702074 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293390938 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296615082 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293950552 seconds)
  done (took 40.040544063 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.315222496 seconds)
    (2/2) benchmarking "in"...
    done (took 1.315184962 seconds)
  done (took 3.839950924 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.294868518 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296724622 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.297035608 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.294274041 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.294323207 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.296906042 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.297648304 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294465393 seconds)
  done (took 11.577350834 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.29815159 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.297652867 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.298932325 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.297485546 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.298047112 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.297021074 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.305039809 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.318232056 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.297381412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.29906068 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.306090914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.305297813 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.300710292 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298879237 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.297880798 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.300092737 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.298440113 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.298299263 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.299352991 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.299554642 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299393485 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.300568685 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302176988 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.296102225 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.301116303 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.310333116 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.3226998 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.299889514 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299574579 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.302921786 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.299386008 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.296785285 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.300451032 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.300913131 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.300507719 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.302105753 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308619848 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3226729 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.306509308 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321598754 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.301099534 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.298086743 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.301695127 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.302025429 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302479583 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.300238221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.300070287 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.298915202 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.300555432 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.304727072 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.305847734 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301383438 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.298485721 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304336865 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.30167272 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308458721 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.320872542 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.304289558 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.310398687 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.311456738 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.334285622 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.326887551 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304095991 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.301900326 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.312849204 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.325246533 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308914719 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.317812016 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.299163271 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.301769614 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.309108096 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.334045279 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.330535757 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.301543416 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302927858 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.302156178 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302116633 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30184366 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309425335 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.325523987 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.302048292 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30399219 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313186746 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.32622405 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.302819556 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.302934494 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.303215364 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.303929032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.304894831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313179354 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.323437928 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.304513943 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.30224563 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.303991892 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.304035332 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.304908514 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.30317417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303934733 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.300672692 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.305251054 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.304135646 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308035912 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.313162964 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303308065 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.30473949 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.311820541 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.324455376 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303646955 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.310520814 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.32374751 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305059268 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.307655807 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.310497171 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.302126876 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308533061 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.314872737 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.304984548 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.307041572 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.306294655 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.305594698 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316105827 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.331999368 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.306790699 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.305102289 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.310594974 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.31742391 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306416164 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.308254735 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.306277792 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.303398147 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.303788311 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.307249681 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.306775998 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.305296883 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306345043 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.308167592 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.304006676 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.305952155 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.306860935 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.307508049 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.30697358 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.307884147 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.307642779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.308638385 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.30704489 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.307944847 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.312886875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.326804878 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.307077602 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.307489039 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.304705207 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306951774 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.30767161 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.306724481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.306934806 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307807017 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.30793887 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.306641681 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308243698 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308619227 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308675262 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.308289853 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.312596387 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.307897513 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.311808515 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.307099516 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.30544732 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.307669498 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.308639961 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.308093939 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.308430657 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.307452926 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.312072382 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.316218892 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.308863913 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.309320686 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.310611881 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308900913 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30800092 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309294662 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.312446701 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.31740827 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.309209296 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.315708201 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.329284131 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309166854 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.310059839 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.309746313 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.309184082 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309909166 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.313111444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.317318661 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.322147951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.337024154 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.311781654 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.313802974 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.312377408 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.314218601 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.313316053 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.310408847 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.310289582 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.309633443 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.310379515 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310458877 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.31263408 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.309613499 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.310076956 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.31102079 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.309381645 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.310849874 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310677262 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.311129433 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.311438885 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.30725277 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311256223 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.310650425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.311078267 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.308671835 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.309436665 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.310498808 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.311523117 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.311054068 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.317776488 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.32756111 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312450653 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313421952 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.310482443 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.31027531 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.31189735 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313632838 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.311311813 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318736747 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.332670772 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.312038366 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.318647879 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.331811312 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.311655483 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.315268016 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.311714815 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.310148231 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.316007684 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.320452314 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.313140442 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.312391156 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.312548413 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3129043 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312415129 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.318638594 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.329890316 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.312140912 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.313212594 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.313067588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.310447911 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.314755906 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.313812332 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.312718808 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314467085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.313491695 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.313713815 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314747567 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.313296364 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.314597829 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.314316249 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316609156 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.321334697 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.319796527 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.332943406 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.315775674 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.316195885 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.316962916 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.314473463 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.314254252 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.315393431 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327350669 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.342059987 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321178144 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.335295067 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.315575249 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.321008108 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.336733205 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.319120868 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.314799054 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316618675 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.314584396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.314520688 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.312327253 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315633414 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.315713971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316349646 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.317764288 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.320596423 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.315654044 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.315523362 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.315908134 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.316041982 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.316460485 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.315866257 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.316423502 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.318253918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.318621586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.316523121 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.316570709 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322209844 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336077108 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.316732025 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.317937347 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.317611011 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.316659456 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.316728621 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.31799095 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.321732277 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.324159738 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.321223685 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.325650131 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.319259153 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326255151 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.33700852 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.321147962 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.325552707 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.314928186 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.31705445 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.317701489 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.318633058 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323792424 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.338576506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.320266287 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.322938981 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.31910588 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.31807451 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.318227395 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.318384341 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318466629 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.317875685 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326390452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.341062604 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.323188041 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.318687977 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.315405966 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.318878482 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.318258545 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.317475158 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321158418 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.31916629 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.319915736 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.319550237 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.319147549 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.319754165 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.319541894 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.319703913 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.316503887 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.31947702 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325671813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.341410442 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323921413 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.321478045 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.325702162 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340162639 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.328814985 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.340243508 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.320746284 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.320860326 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.320079835 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.321159928 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.320250371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.32118603 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.320157291 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.32346246 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324435234 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.320621863 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.321749062 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.320966749 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.321011154 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.321885512 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33138508 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345085119 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.323756552 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325486789 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.318465688 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.323180803 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.324874394 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.321450164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.321073566 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.325028359 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.332387628 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329481998 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.32132915 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.321558579 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322410611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321820059 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.320750549 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.323253209 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.321643264 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.323024256 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.323185368 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.322814154 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325822572 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.323100674 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.322824336 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323289444 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.323967079 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.332105556 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.342261835 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.323727398 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322933324 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.323172589 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.323774482 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.323654066 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.32309636 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323705386 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323449683 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.326351509 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331065578 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.330442781 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.326000847 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.323798216 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.323345567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.323807033 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.324245272 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32535224 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.323803884 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325084489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.326104436 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.324974938 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.325707137 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.32478938 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.324678612 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.324514132 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324697162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.327527351 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.333485079 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325511222 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.323043207 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.325277994 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325817894 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.324673726 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.324883648 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.331188863 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349528253 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.33682962 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.333635312 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.328869982 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.326827209 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329242252 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.334017234 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.324786725 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.327484973 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.325935253 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.326291219 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.326608822 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.330260475 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325456461 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.332582272 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.346196969 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.325743967 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334959052 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.349162505 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326378905 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.328633644 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.331147029 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.326354978 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.324034784 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.326682918 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.326297906 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333064323 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.347988471 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.32621982 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328823511 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.326307975 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.32923816 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331237592 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328397725 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.328387277 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.325137359 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.327328854 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326863439 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327680948 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.324798033 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.32653436 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327373795 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.330802985 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.333790945 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.324872637 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329583415 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.327836529 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.328027788 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.328686676 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.32805628 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.325646917 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.325473091 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.328368277 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329009123 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.329101723 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.330919321 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.328789924 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.330269562 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.330763287 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329583927 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332803163 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.340480637 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.336551919 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.326677589 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.328895916 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.330610512 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.331979482 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329834516 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.330185842 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33023343 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.330534216 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.330774011 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3305917 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.330641529 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.33358669 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345664177 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.353507566 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331404336 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.330957358 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333261026 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.331691368 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.32777253 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.330701235 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.332274968 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.334614833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.338947014 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.331248104 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336986395 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351802666 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.331994513 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.336001422 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.335423333 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.338759594 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.334077019 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331269194 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.331238765 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.337163456 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.347221483 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351437351 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342163003 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361169072 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.352203272 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.332199168 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.33143037 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331901401 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.333714521 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.333080265 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.331901627 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.332739236 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.33298482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.332096857 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.334589591 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338362744 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.333072696 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.333708778 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.3311513 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.331775333 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.335565288 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.328990975 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.332396025 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.33275585 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.3314771 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.333206785 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.333859821 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.332817989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344481195 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.36097355 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.332928381 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.33354212 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.331703734 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.336018079 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.336771514 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345129491 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.341094353 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.334153077 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.335601005 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.334795037 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.334142894 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.335253268 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.333150405 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.334058492 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.335114888 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.332202866 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.346931385 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36060348 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.337971166 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.353819149 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335644496 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.33507326 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335472229 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337289006 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.334647114 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.337049498 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.336617507 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339561571 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.335541272 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.336010507 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.338844537 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.342686233 seconds)
  done (took 787.799773937 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.334817291 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332070811 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333702374 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332456735 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333365455 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332713684 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33308244 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.332002267 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.333572399 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33349315 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.332444911 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334233746 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334292825 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334230183 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333295099 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.333327918 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334080328 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334098977 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334633505 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333244673 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.33430637 seconds)
  done (took 29.251009261 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.336907267 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.334602136 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334801985 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.336899452 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335060526 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.337748942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.333792832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33660261 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337719768 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33548953 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336828751 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337696868 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.334953121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.335036816 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335419833 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337795642 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.338014184 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335007083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.33833233 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335533627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33852503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.335278291 seconds)
  done (took 30.647080889 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.338416739 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.339233238 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.338744113 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.335163279 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.338745634 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.336223118 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.338033177 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.338545605 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.339097068 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.340362081 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.338917049 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.341724971 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.347574613 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.344385082 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.342019081 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.338858683 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.484334669 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.339755345 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.339614828 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.34015608 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.338411517 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.344136845 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.357778811 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.33750835 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.33932141 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.340122206 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.341146138 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.339491336 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.34017387 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.34257799 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.34467547 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.340529164 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.340139751 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.341951909 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.339906193 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.342173076 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.345279237 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.340011325 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.338609507 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.340074407 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.351584217 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.361615164 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.340694231 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.34700476 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.361082469 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.340506335 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.345184848 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.349360638 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.338811381 seconds)
  done (took 67.160928842 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.3417801 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.341400133 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.338934018 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.341465472 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.341980839 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.341976141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.341897466 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.341651847 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.338323899 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.340081086 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.343064538 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.339516271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.339019736 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.341798232 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.341486124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.338858305 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.339246037 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.339817381 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.338911278 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.340234767 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.339489885 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.342616615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.341695252 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.340460041 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342504114 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.339904511 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.339606323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.341928659 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.339560721 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.339241813 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.343129927 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.34315757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.343394051 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.341798589 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.340435293 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.343984262 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.343802356 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.340729428 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.343976826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.340522601 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.342658335 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.342887966 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.341890973 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.344079805 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.340317991 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.34088013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.341852903 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.341806958 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.342306436 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.344431041 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.34374808 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.341492636 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.345140477 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.339988951 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34390669 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.344016128 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.341269677 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.341162307 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.345319398 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.342208197 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.341768239 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.344883272 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.342862465 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.34476211 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.345092167 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.344278932 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.343381138 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.345794042 seconds)
  done (took 92.50336542 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345834181 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.34597499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34531732 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345413391 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346394023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.345989763 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.34609984 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.346190228 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.345788063 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.346206713 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.34626453 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.345799342 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.346782657 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.347277203 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.346607179 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.346019697 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.350689011 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346373387 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.345990508 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347033862 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.346884191 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.346269674 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.346848216 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.347030927 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.347280722 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.346793296 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.346974148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.347380199 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34770528 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.34743189 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348462571 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.348361039 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.347138025 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.347359826 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.347167665 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.348531507 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3481467 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349275409 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.348893576 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.347754679 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.348447633 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.348827632 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349325734 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.348508656 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348676231 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.348888298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.349187108 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.349017574 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.34828785 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348249133 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.348850501 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349510225 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349237037 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.349436192 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.350718816 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.348998451 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348363853 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349333646 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349928678 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.349616144 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349582196 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.349140358 seconds)
  done (took 84.818389124 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349349721 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349744409 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.347560431 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.347848527 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349470648 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347827013 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349497662 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.350408762 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350017639 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.350048285 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351000499 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348583209 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350198023 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351096414 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349274074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350310584 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347659558 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349528691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350588081 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.34840145 seconds)
  done (took 28.248881646 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.348858698 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351564029 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.348048315 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348005231 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.350998126 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348140231 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.351232629 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350592048 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347643769 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351873593 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350708718 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351905253 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348466668 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349316288 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.35157329 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.348703324 seconds)
  done (took 22.862852045 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.34867235 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.351373328 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.351784501 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.350808592 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.349271244 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.348378365 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.35173925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.349908926 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.348756867 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.353118016 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.352551715 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.352983856 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.352881445 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.351886889 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.349701647 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.354135065 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.349425853 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.349758942 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351981053 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.352339686 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.350427247 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.34983092 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.353559734 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.352727292 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.350599336 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.350303139 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.349600134 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.350507351 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.351178131 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.352999197 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.350524558 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.351015252 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.350087844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.351330846 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.352665596 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.351093134 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.353993686 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.35354118 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.353703079 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.353368241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.35399791 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.350038951 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.354774751 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.35309907 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.351428885 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.355042922 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.352002768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.352004213 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.352216371 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.350755714 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.354281766 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.353956255 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.354599434 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.355716941 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.354737188 seconds)
  done (took 75.616893685 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355509559 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.35530542 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.352418078 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355643634 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.355300816 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.352975593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355805079 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.353682321 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352994141 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.355779656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.354642417 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.3571014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352729275 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.355850697 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353827075 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355490971 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.353579553 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352921365 seconds)
  done (took 25.647054087 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.354454607 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352999644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.356823606 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.354151737 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.353058699 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357553813 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354841356 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.356790168 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357137171 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354642123 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355006847 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.356987181 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357307946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.357915119 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354713088 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354800205 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.357960561 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356605032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.355200066 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354506647 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35818235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357147928 seconds)
  done (took 31.094712417 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.356489401 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.357611572 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.357656393 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.374315891 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.377415349 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.380173196 seconds)
  done (took 9.472387983 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364723479 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35898671 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.35597368 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359671906 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357911988 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355575449 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354887707 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356158766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358736256 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356761644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355705357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35838803 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359288857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356000085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358900519 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360159347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357331006 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356822579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35722267 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359459525 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356436506 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359213334 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357149123 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356623377 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357176413 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356950908 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359813718 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357032659 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357711289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360669925 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359720853 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357595521 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359066935 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357684847 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360280744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359575837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356868698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360148685 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360872996 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358045066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.360485398 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360129778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36147045 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358002834 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360529921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358058784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357856514 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358137389 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359166999 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360748013 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361348394 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358628827 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361611808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360341875 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361051695 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362276927 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359408647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359583286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362170615 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360168811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361010689 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362241514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360217898 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360350333 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361461294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360210664 seconds)
  done (took 90.987505223 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359832156 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359592489 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359093182 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361260756 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359933504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359152259 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360866805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359895312 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360228125 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360747746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362584407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360359364 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361074053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360307257 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36158254 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359818028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361363015 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361258709 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36015132 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364429355 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36081457 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361752905 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361422679 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360891155 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360731525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363160103 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36111241 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361653936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361588611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361162719 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360823487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360866983 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361883649 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361551314 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36274569 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361365003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361338666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362150872 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361669488 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363864628 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361255082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364228246 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362996279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361533679 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362791994 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361725313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361533593 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362489773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363733793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361926538 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362574313 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362904016 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363122692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3628724 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363180819 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363136891 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364093024 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363381097 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362830245 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365462616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363517303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363257237 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36677265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363286643 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364448151 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363840647 seconds)
  done (took 91.163137613 seconds)
done (took 1837.117298154 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.52913309 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.483745957 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.360719755 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.381015873 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.361530731 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.361224953 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.357752908 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.360837869 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.360462872 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.36176405 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.360866029 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.548182792 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.407247208 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.361630193 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.362337762 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.456206109 seconds)
  done (took 43.690845642 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.390627554 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.366674848 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.486862704 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.384405911 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.389112807 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.563561834 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.42811716 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.367437864 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.547697331 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.407948706 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.991577932 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.391350526 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.365077578 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.522514925 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.385967101 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.563942323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.626766562 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.998611 seconds)
  done (took 31.451358322 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.83843186 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.379878967 seconds)
  done (took 9.492369078 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.387154644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.366828205 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.367632071 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.364898115 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.358503696 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.358898504 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.366540306 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.363673283 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.218926933 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.500232278 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.387665426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.375397104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.385744631 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.366558639 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.365638773 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.405557753 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.524514075 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.365811106 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.36402007 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.372066651 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.367011205 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.475936157 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.432866038 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.365174689 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.499551748 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.240810275 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.370161121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.374363921 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.526434785 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.366482061 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.368624924 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.369042563 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.370316651 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.28612077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.879084916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.365515908 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.393557292 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.37584215 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.36552257 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.525157369 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.36971385 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.373754453 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.361598384 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.854936981 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.526090919 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.489933139 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.666237549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.390714464 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.371895625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.433866584 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.370151553 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.372081275 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.413665526 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.177476606 seconds)
  done (took 114.343958793 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.406345928 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.752846676 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53229704 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.37995122 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.009974965 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.951074339 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.381247415 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.664635476 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.414271463 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.362423836 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.667601408 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.882013785 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.387014663 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.378070433 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.02488485 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.446576003 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.363666313 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.107858938 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.381547536 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.363775009 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8771156 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.365320051 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.36455285 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.527350136 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.404005067 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833628715 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.943933843 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.834453589 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.386400191 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.362938908 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843064011 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.385778803 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.409036743 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.364659632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.634444945 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.736780603 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.734162165 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.385368969 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.410768452 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.367902984 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.379385329 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.831458016 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.740427768 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.38316262 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.365024773 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851499123 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.383564367 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.37533047 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.369934615 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5687004 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.24233885 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.367944429 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.939084312 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.37082643 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.737012149 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.431345998 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.423266162 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.863349514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.38438474 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.454628892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388264914 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.367553195 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.372158361 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.368827858 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.385923889 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.73017058 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.639650474 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.369710576 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.727423776 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855935151 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.385371791 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922732529 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.22502102 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.382314564 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.413749567 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.36646271 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.942804089 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.873831532 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.415392289 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.36774684 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715578104 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.386332493 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.658018485 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.384605113 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.367727558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892275031 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.375037458 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.382674269 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.368116775 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.366694292 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.020525413 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.370152403 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.660713287 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.392217579 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.368766714 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.367943028 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.398795196 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.370174545 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.368398607 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.375922491 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906897387 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.389507571 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.495350245 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.391568872 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.374452514 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.375205049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.370494563 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.370579446 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588493357 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.835710073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.390655218 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.369912675 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.369582783 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.390667051 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.531517333 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.375540059 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.691799979 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.391374135 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.370306983 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.390653074 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050114137 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394042517 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.372406582 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.394487331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.256232196 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.58028108 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.389760794 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.37056824 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.370453258 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.388457031 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.705335526 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.390601694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.404788003 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.370451218 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086667167 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.406465239 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.402491597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.911557479 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.377384245 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311013276 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.390795164 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.373124533 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.679546015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.646217118 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.663672704 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.373397631 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.38991788 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058348413 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.414349046 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51024514 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391980225 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.435164204 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570263959 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.547494711 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.372155108 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.026485321 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.372297778 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587244601 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.3728896 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.673926193 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876048405 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.392098965 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.375459556 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.087177958 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.113803301 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.002124018 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.376673083 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.656933975 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.322941998 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.851969714 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.374232992 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.374370045 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.803606789 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.373501945 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.377594655 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.379264312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.374468474 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.410032641 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.547953735 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.053244003 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.375109247 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840890292 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.409854296 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.374797015 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.391785085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.377369949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.723328317 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.460619067 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.379573086 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.3964035 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.37754909 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.380377729 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.861929163 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.235318283 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.375659598 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526954374 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025674353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.399767511 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.376230423 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.996322298 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.670360817 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901553909 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.441050175 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.698886692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.40294916 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.415151067 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.964896386 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.467969896 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864396333 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.397745736 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.375762451 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.987864312 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.395514222 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.442890592 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.377553753 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.377161684 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918739662 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.39391205 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.378085784 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.70305932 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.397587138 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.627494173 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.37874426 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.395913828 seconds)
  done (took 1120.809314043 seconds)
done (took 1321.063465 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.376999016 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.378664501 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.360831927 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.388806876 seconds)
  done (took 26.797941168 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.402597369 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.390464896 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.389972407 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.38855432 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.392018763 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.390224407 seconds)
  done (took 9.653634967 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.442510715 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.383455122 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.38984493 seconds)
  done (took 19.514749041 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.606458575 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.736313667 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.741906031 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.703768882 seconds)
  done (took 11.08919356 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.391579154 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.392165464 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.391557966 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.394620756 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.405485235 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.405631267 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.394796044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.394955122 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.405706078 seconds)
  done (took 13.874911378 seconds)
done (took 82.221642876 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.332716177 seconds)
    (2/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.51270508 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.604594715 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.42492583 seconds)
    (5/286) benchmarking ("sort", Float32, true)...
    done (took 6.390975601 seconds)
    (6/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.412365237 seconds)
    (7/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.373110802 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.250748866 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.660398116 seconds)
    (10/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.64072352 seconds)
    (11/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.204277649 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.447668168 seconds)
    (13/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.363369061 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.412952623 seconds)
    (15/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.444747473 seconds)
    (16/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.484098726 seconds)
    (17/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.442660259 seconds)
    (18/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.771519802 seconds)
    (19/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.365326331 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.369476931 seconds)
    (21/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.773116663 seconds)
    (22/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.415024354 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.404755384 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.365605589 seconds)
    (25/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.492783518 seconds)
    (26/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.488678203 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.933475212 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.365831105 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.059362931 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.387127423 seconds)
    (31/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.404295733 seconds)
    (32/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.626396695 seconds)
    (33/286) benchmarking ("sort", Float64, true)...
    done (took 6.388475541 seconds)
    (34/286) benchmarking ("sort", BigInt, false)...
    done (took 6.405500559 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.49995775 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.366121229 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.914628965 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.394707684 seconds)
    (39/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.752288194 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.274841707 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.371573524 seconds)
    (42/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.132790325 seconds)
    (43/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.023711924 seconds)
    (44/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.041734576 seconds)
    (45/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.773928977 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.36685737 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.389660802 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.501936114 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.540621178 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.671200011 seconds)
    (51/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.413046789 seconds)
    (52/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.390619555 seconds)
    (53/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.417425846 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.446683994 seconds)
    (55/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.404219696 seconds)
    (56/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.747791678 seconds)
    (57/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.399190003 seconds)
    (58/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.860277663 seconds)
    (59/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.417878277 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.495868939 seconds)
    (61/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.117198371 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.400213318 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.415893842 seconds)
    (64/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.367610212 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.492523629 seconds)
    (66/286) benchmarking ("sort", Float64, false)...
    done (took 5.68566324 seconds)
    (67/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.208518011 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 5.663274302 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.406122359 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.389081 seconds)
    (71/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.34313472 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.297734149 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.367848496 seconds)
    (74/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.196396075 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.192087957 seconds)
    (76/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.053589628 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.4153793 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.390041513 seconds)
    (79/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.521687187 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.272067888 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.869703145 seconds)
    (82/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.475883315 seconds)
    (83/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.493417166 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.357876807 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.490971021 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.369558277 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.402175567 seconds)
    (88/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.394197867 seconds)
    (89/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.369563778 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.417488796 seconds)
    (91/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.611447025 seconds)
    (92/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.368949995 seconds)
    (93/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.66775812 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.062561431 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.628376936 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.37611371 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.212470637 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.41142243 seconds)
    (99/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.524379289 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.369384501 seconds)
    (101/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.370972079 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.819755911 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 1.930509897 seconds)
    (104/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.434633988 seconds)
    (105/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.648559081 seconds)
    (106/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.4774645 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.19446236 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.492552624 seconds)
    (109/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.672166546 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.005860647 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.776887615 seconds)
    (112/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.237837778 seconds)
    (113/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.3954377 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.422793118 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.419459455 seconds)
    (116/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.374225162 seconds)
    (117/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.37812266 seconds)
    (118/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.477142249 seconds)
    (119/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.378422695 seconds)
    (120/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.058316158 seconds)
    (121/286) benchmarking ("sort", BigInt, true)...
    done (took 6.392757367 seconds)
    (122/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.503860325 seconds)
    (123/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.578812444 seconds)
    (124/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.817483294 seconds)
    (125/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.44331845 seconds)
    (126/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.90742379 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.218203842 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.419866838 seconds)
    (129/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.758836879 seconds)
    (130/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.397711322 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.325901224 seconds)
    (132/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.405489241 seconds)
    (133/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.416961358 seconds)
    (134/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.992649069 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.028087503 seconds)
    (136/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.37677427 seconds)
    (137/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.415552291 seconds)
    (138/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.372652521 seconds)
    (139/286) benchmarking ("sort", Float32, false)...
    done (took 5.419630967 seconds)
    (140/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.559826777 seconds)
    (141/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.879120058 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.139451402 seconds)
    (143/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.45906425 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.372977958 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.380193802 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.215033739 seconds)
    (147/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.922075076 seconds)
    (148/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.383398417 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.921597774 seconds)
    (150/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.904495967 seconds)
    (151/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.906287265 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.917122428 seconds)
    (153/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.578582401 seconds)
    (154/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.425524871 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.409865935 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.301014323 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.359195795 seconds)
    (158/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.399587775 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.374981979 seconds)
    (160/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.028269689 seconds)
    (161/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.439689783 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.478258313 seconds)
    (163/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.458995516 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.480115909 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.437561283 seconds)
    (166/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.373977789 seconds)
    (167/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.605634451 seconds)
    (168/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.379862388 seconds)
    (169/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.218875416 seconds)
    (170/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.466695816 seconds)
    (171/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.480740474 seconds)
    (172/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.459555332 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.374821185 seconds)
    (174/286) benchmarking ("sort", Bool, true)...
    done (took 5.474855511 seconds)
    (175/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.472946873 seconds)
    (176/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.074777597 seconds)
    (177/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.536082365 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.775663686 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.421647505 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.149631315 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.00509287 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.264578515 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.393841293 seconds)
    (184/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.396154619 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.818101419 seconds)
    (186/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.626551317 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.387282596 seconds)
    (188/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.622152918 seconds)
    (189/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.987430228 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.285607448 seconds)
    (191/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.397397151 seconds)
    (192/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.396259401 seconds)
    (193/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.865345731 seconds)
    (194/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.808995351 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.852418616 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.483516246 seconds)
    (197/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.609404508 seconds)
    (198/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.429079041 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.420514405 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.663091381 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.836503027 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.65084053 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.458728022 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.434831986 seconds)
    (205/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.381532412 seconds)
    (206/286) benchmarking ("sort", Int8, true)...
    done (took 6.401930025 seconds)
    (207/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.785838546 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.138221897 seconds)
    (209/286) benchmarking ("sort", Int8, false)...
    done (took 4.490425513 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.788861668 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.434177198 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.175475413 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.046710558 seconds)
    (214/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.524718285 seconds)
    (215/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.262530727 seconds)
    (216/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.065824716 seconds)
    (217/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.37720579 seconds)
    (218/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.789532756 seconds)
    (219/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.377914317 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.387428527 seconds)
    (221/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.378656131 seconds)
    (222/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.709168707 seconds)
    (223/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.689016048 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.37903885 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.380626369 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.430538173 seconds)
    (227/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.503299935 seconds)
    (228/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.108762589 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.622827942 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.079993783 seconds)
    (231/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.004249377 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.380413262 seconds)
    (233/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.476271643 seconds)
    (234/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.402358687 seconds)
    (235/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.418067102 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.428032513 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.880310702 seconds)
    (238/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.482861417 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.777679072 seconds)
    (240/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.409720937 seconds)
    (241/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.412292314 seconds)
    (242/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.381038162 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.380404218 seconds)
    (244/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.547232838 seconds)
    (245/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.186128686 seconds)
    (246/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.482792885 seconds)
    (247/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.407103115 seconds)
    (248/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.793895686 seconds)
    (249/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.287856426 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.499517813 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.436898995 seconds)
    (252/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.40154335 seconds)
    (253/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.829833206 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.382123678 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.274065222 seconds)
    (256/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.662351027 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.427652517 seconds)
    (258/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.935581231 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.429276385 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.493055457 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.484384337 seconds)
    (262/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.384790666 seconds)
    (263/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.599793927 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.504981264 seconds)
    (265/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.507711465 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.518391298 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.429269571 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.215088389 seconds)
    (269/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.41263288 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.420936815 seconds)
    (271/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.39211456 seconds)
    (272/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.430891726 seconds)
    (273/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.46118928 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.489772069 seconds)
    (275/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.526745318 seconds)
    (276/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.80851141 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.8160385 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.422752221 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.676970737 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.383145849 seconds)
    (281/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.426875514 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.40478809 seconds)
    (283/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.902626583 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.426857599 seconds)
    (285/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.384554484 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.949181138 seconds)
  done (took 963.876965113 seconds)
done (took 965.176816622 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.436805149 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439384981 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.414630425 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.436592285 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.533291711 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.437273939 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.425041756 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.41622574 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.463624423 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.464170019 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.420657698 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.436247785 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.423499787 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.422922544 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.415563772 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437655838 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.520496067 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.423328222 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.438859854 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.42534195 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.438487595 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.421402366 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.465673212 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.437025659 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.421028157 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.419582777 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.425674913 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.441853888 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.534714276 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.426446799 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.420191521 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.434199767 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.520219868 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.417293176 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.410421087 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.442718433 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.434474255 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.425844273 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.4212332 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.45653822 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.950227199 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.443091801 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.425482185 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.417999368 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.417873482 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.421670436 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.426230717 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.424995843 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437910301 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439117483 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.940571615 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.457360338 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.427023685 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.418286346 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.428020911 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.424448824 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.423434314 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443826528 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.445274732 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443779503 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.513873063 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.421700852 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.421169596 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.441944443 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.432103974 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.980159926 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.433222394 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.422344439 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.955856646 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.441901047 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.982722587 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.453702848 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.421446522 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.43956857 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.458030335 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.52797167 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.414846863 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.41899421 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.434321101 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.425046309 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.429527648 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440866014 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.426747642 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.421726285 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.442213476 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.442488397 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.430259824 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.4295265 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.429843596 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.447218699 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.43382789 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.438834793 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.424634248 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.416307616 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.43029033 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.424719948 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.431128487 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.43039331 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.426724551 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.431723138 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.959497518 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.466453975 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.416800603 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.417288577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.42120706 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.441728106 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.958483425 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.448286072 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.444037632 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.47002924 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.42349569 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.522827708 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.433591021 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448639509 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.43195355 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.425953965 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.417763434 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.524231115 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.951810431 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.463076871 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.423250732 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.427769694 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.447631517 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.424692241 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.418249529 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.534965052 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.425259216 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444542731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.551591478 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.432581119 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.462786007 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.428299185 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.426664386 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.448392737 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447854701 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.462030711 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.426485444 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448560064 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.446196024 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.420217559 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.441662567 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.433595359 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.42539787 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.431033023 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.419107599 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.449766419 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.444789841 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444444551 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.445156499 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.551440352 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.422166915 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.524130798 seconds)
done (took 240.565642984 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.483657906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.418160639 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.507868856 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.421562831 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.524084953 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.526535815 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.420034454 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.420868751 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.418490918 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.803518945 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.418898229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.420657895 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.41790646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.419956805 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.506358612 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.42295886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.418800045 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.777290478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.421694486 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.498441704 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.423232607 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.4194588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.422945175 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.823011818 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.419714118 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.420707308 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.498552918 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.422582089 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.769418142 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.418359513 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.420591135 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.783922114 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.515928417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.439250447 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.431370902 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.430045659 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.526447758 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.443248841 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.506027011 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.505801172 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.510729282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.462371629 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.417502033 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.419508966 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.425498949 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.424352077 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.422075027 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.450641091 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.420796076 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.423069688 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.769132766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.433831365 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.422283918 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.423764448 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.422191407 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.452760415 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.421933141 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.425356485 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.518600241 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.424735102 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.49151433 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.80870673 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.820558444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.424373548 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.421734833 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.422600296 seconds)
  done (took 154.517252611 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.493183916 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.498865583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.543593196 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.447000195 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.475693353 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.546194896 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.445079966 seconds)
  done (took 11.780186081 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.43291503 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.427174681 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.476747442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.475143631 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.425622153 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.60490922 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426786854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.437538313 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.424946349 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.478491874 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428298667 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426881385 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.433660926 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.425279716 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.475501722 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.437469576 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.542323983 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.428960621 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.428295567 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.589565511 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.424210045 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.433567093 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.478236147 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.438536256 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.430079353 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.433511936 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.247401663 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427463048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.42581068 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.42722112 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425768241 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.502352589 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.42863429 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.427226002 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424750955 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.542007303 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.427979806 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426450214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.429000303 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.424029793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.428178829 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.42863159 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.428278926 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.425248839 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.426576971 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.452413228 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.429593177 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.428486932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.428334621 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.429179872 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.480182445 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.428513697 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.426124355 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.426491135 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.482775883 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.436310072 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.430581439 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.42772915 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430859913 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.427241503 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.589893854 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.477332474 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.429990579 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.477403833 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430788987 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431261882 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.430049339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.429976111 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484208783 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.429059189 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.477539704 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.428149162 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.609815959 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.45238473 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.431684835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.433394043 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.433290101 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43038089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.428965237 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.436308683 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.428001941 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.433733652 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.437081916 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.428858088 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.429212309 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.598250617 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.537822568 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.428091189 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.443571815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.43770823 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.429166603 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.484423115 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.43199901 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.429433953 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483092947 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.546111019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.484917652 seconds)
  done (took 162.94920838 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.438100907 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.440541489 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.435837483 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.455591655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.453449993 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.432557002 seconds)
  done (took 9.993594305 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.435550769 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.433914722 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.432677766 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.433643157 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.431958604 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.433487028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.433105849 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.435771172 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.438916976 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.433585526 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.433186002 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.437740047 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.434534296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.433625609 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.433618598 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.433965215 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.434442103 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.431304742 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.43345893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433632997 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.534481543 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.43407411 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.434774122 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.436354135 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.437772423 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.432468176 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.44164515 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.435024808 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.433900403 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.440053074 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.455771408 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.434946112 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.436493267 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.441593917 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.438913567 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.437238622 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.439791709 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.438597954 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.432971727 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.434332634 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.438516816 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.434244863 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.435318118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.438581045 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.437891588 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.440280301 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.444356643 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.44400404 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.434945428 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.439534313 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.44037832 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.436107014 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.437321435 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.440120006 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.438412535 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45962604 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.444710166 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.435452483 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.435959206 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.437179732 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.438545428 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.436432606 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.438542415 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.44042709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.44430357 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.440538685 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.438060667 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.441104246 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.436006669 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.437670313 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.440941106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.435257561 seconds)
  done (took 105.934331128 seconds)
done (took 446.50042545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.4349496 seconds)
  done (took 7.776487173 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.628640223 seconds)
  done (took 7.969426232 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.44766633 seconds)
  done (took 23.792526724 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.485691479 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.452955182 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.470908945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.43505122 seconds)
  done (took 27.184989829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.613167796 seconds)
  done (took 7.95474818 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.430755718 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.45000054 seconds)
  done (took 14.224693226 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.671383255 seconds)
  done (took 8.013338409 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.637188868 seconds)
  done (took 7.984045651 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.453934287 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.478982933 seconds)
  done (took 14.286039948 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.423773782 seconds)
  done (took 7.766259644 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.89742322 seconds)
  done (took 12.23920914 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.431458543 seconds)
  done (took 7.77518446 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.442912878 seconds)
  done (took 7.783906152 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.024725909 seconds)
  done (took 10.365891146 seconds)
done (took 166.458449436 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.432337261 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.434663796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.433391202 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.430551254 seconds)
  done (took 27.072904617 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.473711011 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.472207034 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.474372967 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.482338279 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.475366538 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.472370688 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.465298608 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.464642332 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.483609713 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.474166229 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.47489924 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.474560865 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.472600304 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.464579221 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.474823231 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.474994697 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.483129711 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.473953243 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.465049083 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.476632465 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.440768031 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.48417024 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.476357746 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.441493284 seconds)
  done (took 36.659430081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.963702902 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.512050614 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.593960091 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.490914557 seconds)
  done (took 7.905420756 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.493032604 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.493270097 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.505164267 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.544392075 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.571752358 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.504536646 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.467439256 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.462181133 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.448745017 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.494428809 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.570986791 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.510507422 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.579932735 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.441110545 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.628673957 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.440244735 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.442465327 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.494149741 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.546853414 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.561515854 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.442157397 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.494528104 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.497094506 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.510985775 seconds)
  done (took 37.49107385 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.442035488 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.460257748 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.440713898 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.440894392 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.449462006 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.441082101 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.442043719 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.441933409 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.442133298 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.447005328 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.440481663 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.454222894 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.440091565 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.441794453 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.448280409 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.44435703 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.449087767 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.441472185 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.442115676 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.448473912 seconds)
  done (took 30.244356839 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.43711357 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.364433797 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.789236893 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.691978805 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.437658888 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.437447314 seconds)
  done (took 30.50493232 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.520951601 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.68844247 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.445629415 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.83072549 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.927582409 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.463557748 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.443279295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.705786069 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.069100637 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.059429448 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.5081797 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.518286008 seconds)
  done (took 21.529946607 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.441645407 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.445023582 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.456568894 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.460959396 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.504329436 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.466901289 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.452102635 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.439391397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.511252749 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.52816071 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.467867893 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.505645763 seconds)
  done (took 39.028474846 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526535949 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486975383 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.482528664 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.562518356 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164028379 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651144096 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.522023068 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217773807 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.462759423 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713840695 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457856309 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535460778 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.695117581 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44083528 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.442270247 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.488554136 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686349476 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995418381 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449093197 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.992095407 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473343451 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456166627 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.987186312 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.707722786 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.673998376 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.419993774 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.701966821 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.216114291 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760800061 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460855375 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451479513 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44137645 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716036076 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.486400833 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545374097 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678768629 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473657344 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.994525922 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.444014934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.850925548 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46236477 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.443270278 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452382285 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441695306 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.376163068 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447444134 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737932657 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.45482059 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.15348186 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441494051 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736644894 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545715744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.446646964 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.01208298 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509838423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.453513698 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.446450309 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538438976 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044158423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.165980452 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458884873 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.378214801 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443120471 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905206252 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129802189 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.476106289 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.446586787 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.447799426 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378452998 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.861180988 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467604371 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592396655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.468818739 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093917037 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229372318 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.470380426 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.381997077 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052240035 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451456192 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.380805418 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671236987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.219694127 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380535928 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.392805899 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.378851576 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226423299 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459218803 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.10582292 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470603752 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216662113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.704457032 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483903907 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467519277 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668647041 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.341375535 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444577601 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.445695083 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580083414 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468087527 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192968159 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401796502 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.449394369 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702112981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.65626889 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449372679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.512709549 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454262512 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468730601 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.468508437 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446795335 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.69286709 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.097997089 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488840128 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.17822415 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470955415 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.225215439 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266594439 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459063924 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.458373863 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.454840999 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73740538 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.290306784 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.336486528 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516169372 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450150153 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449426938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.887426972 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.30416796 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.329360285 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.666606003 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482595083 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466036377 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.447271609 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394602627 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.454768065 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456652093 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.231650351 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671009128 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448303428 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730382671 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383134191 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596157681 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45759123 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.671690194 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.774824352 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.481059951 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708860208 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44849555 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.456409091 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482591458 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469382768 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549054523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471457419 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.450909774 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.710467795 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.453251835 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.453339869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.887036491 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.235532985 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452713746 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.455657131 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457307905 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089403031 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460150794 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.458930375 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.677752239 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.463364017 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51881673 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.455295364 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690011866 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.84488984 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474188154 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.462297127 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.447983666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680657987 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460727092 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.871558662 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536560798 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.976848172 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102816483 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492375439 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.385475975 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.162519625 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.143565479 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451047177 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.648602686 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452517361 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689292664 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487924012 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460522283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095384197 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480609548 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.999636197 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.457395004 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.465059227 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.748091059 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473951765 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.829084687 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217398962 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468971986 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.463644433 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596999519 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.465248981 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.386256281 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.969713879 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.457266228 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452903633 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.231003123 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487254486 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.887621617 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87718709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746436277 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455479355 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752871431 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.015351502 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.497791369 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.449966797 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453496419 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494155608 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.477148565 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46938094 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.463840859 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.957672908 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891476004 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022884383 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271366224 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059868013 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.810191638 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.477633763 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.343603145 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219455728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409201919 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109803919 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710458048 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223001094 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420085857 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423277981 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.791769606 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329487492 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757177635 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691088538 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.77997463 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.477898316 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778473251 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677207303 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490413153 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.472358727 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.39124249 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.734884342 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628014014 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464795409 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554732493 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709194952 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464925964 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.240226251 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.537086168 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.262542857 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.244571954 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.999930651 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.908005542 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464096144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.464528878 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854316674 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.500017634 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.983037607 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140413318 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.486559239 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.987017866 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414089111 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.69331881 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94985955 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.452473074 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.23459805 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.491554063 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.720513879 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750907825 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401058606 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45713097 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067724264 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.337935233 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.462584008 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458146359 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27201771 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475182522 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776645977 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.470724359 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.888687241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488041745 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.393014139 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392773882 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.150746246 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.46039246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433839533 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995418161 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.469642755 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494446681 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497167232 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305121177 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.715041275 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.472090476 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091271101 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711439717 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460588622 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509358013 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.462946278 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464282916 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.44093384 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.341106849 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695623677 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.522957906 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.688956269 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.504447631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.364931606 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.527617154 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679462421 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.341633144 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.462245333 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71316398 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.191758555 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.460874928 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274107027 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511111224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.46886068 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471393632 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463312462 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50901799 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553295856 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699671047 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.491648926 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472523593 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.239724486 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480604605 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463815072 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.476104053 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554190939 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.057468642 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.85171032 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.253553632 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099159303 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304996798 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123942185 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782173322 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.471348852 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46265329 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398112937 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610583039 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987432342 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735663349 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592949397 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.479101094 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492989821 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467695036 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479112865 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683479138 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738469556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333328717 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480724217 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160474288 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.356132608 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47491644 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.674396292 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006114712 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078051224 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.852239358 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463485619 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222531239 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75840328 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554620976 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464046631 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053705848 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.47435933 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.285146399 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.476159129 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468774411 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613292466 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756319025 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.517207379 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.482367301 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.620522749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.238921483 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.808462983 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.719948249 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.016072456 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.710898706 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121809038 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259188122 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73588743 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534561412 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703709983 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.589902824 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6126037 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.462494231 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.361405427 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465567261 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310562481 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.174367508 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.47534328 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107148761 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75586484 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.469390588 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.46294262 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488882156 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.475746666 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689507894 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250521104 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696027083 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475220881 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.469463605 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.036870915 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109605287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789723172 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409220629 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.46979152 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715914043 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.722629413 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492349651 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.919190943 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.179325567 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074646772 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.446101718 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488915511 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477961867 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249265378 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119428417 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.949809747 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037874793 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131468493 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467550723 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768624987 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.472293113 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.476404431 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751796404 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.471352287 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.48340179 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715816961 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.127165845 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327982211 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.479698443 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.019788345 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.405785167 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.695394391 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.492431292 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434782688 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478669613 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.923659655 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.499653954 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599187931 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479729777 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.468349307 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469276892 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.242304833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.765989975 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.475747402 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.469135458 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.446678942 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.493371383 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575237645 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67823447 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483051706 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.18071698 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.819385721 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.725063868 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.479861312 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.456154494 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.47432052 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470618267 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187777688 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440218489 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473158656 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107610173 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.488141365 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.488020778 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474501863 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.686899595 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682790828 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477399138 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712095246 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505084287 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493668859 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.370995298 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.237830312 seconds)
  done (took 1749.477236437 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496933196 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.52481781 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.523127332 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.513402138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.526263336 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.520385819 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.552935449 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.51382341 seconds)
  done (took 53.550410769 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.480281323 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.631135021 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.504789908 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.480569688 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.48143413 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.478438524 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.977872293 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.50856318 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.481767674 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.481859147 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.473255683 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.488325644 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.16438071 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.48100237 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.474563228 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.481391924 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.482540895 seconds)
  done (took 67.938171717 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.941388886 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.791705328 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.767511158 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.553658222 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.490731741 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.493007682 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.853596824 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.49036149 seconds)
  done (took 55.763980892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.484118212 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.483943882 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.48494232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.484759872 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.483600101 seconds)
  done (took 8.801583139 seconds)
done (took 2167.311489349 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.479341658 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.479972063 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.478320892 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.479803554 seconds)
  done (took 7.299182259 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.451922693 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.154636154 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.459865839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.476073743 seconds)
  done (took 18.92413067 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.481215988 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.525818832 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.248514584 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.151262131 seconds)
  done (took 5.78183254 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.219130614 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.233862219 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.216867248 seconds)
  done (took 8.046679057 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.471019742 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.478129388 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.476065062 seconds)
  done (took 20.802674976 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.777833673 seconds)
  done (took 3.155722011 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.620343567 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.667508036 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.78815208 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.793084108 seconds)
  done (took 8.248960507 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.861489052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.843180662 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.665442813 seconds)
  done (took 6.745671886 seconds)
done (took 93.39253653 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.576978515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.717009218 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.677664201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.593645198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.705034233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.675744893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.689536818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.560808957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.060950104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.046671446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.550525049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.704990688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.639015834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.717777224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.641872543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.848268578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.707307296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.62425275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.23674466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434672258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.690331352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.184954081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.382078419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.205655297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.704385368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.624299635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.766566213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.841353646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413392966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.791258645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.624180484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.479831639 seconds)
  done (took 201.496198655 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.48089459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.471782999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.49080397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.475418977 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.488587474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.472140639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.490825214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.472378134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.48095976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.472046475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.492220227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.474790739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.475171349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.488748317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.472397389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.474744766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.493064997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.473742582 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.473803936 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.473588168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.494376432 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.473780852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.484532421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.472531888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.475411825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.485744324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.473935888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.483845109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.474359438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.495125597 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.489979931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.473083412 seconds)
  done (took 208.744950655 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.473624289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.49342517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.49359057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.473429886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.474487024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.49478811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.476874726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.487637923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473978276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.493556346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.493174415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.495115534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.476352172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.493827428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.474782941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.49352666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.497279394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.483258187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.47546039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.48368431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.476172573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.49794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.475884425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.497384964 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.486103477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.476897054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.495550968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.498828434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.474994122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.494882057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.496126616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.493926413 seconds)
  done (took 208.949191172 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.671317866 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.483226051 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.483475481 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.420839541 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.484554903 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.483384097 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.477526163 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.739701944 seconds)
  done (took 15.625700871 seconds)
done (took 636.192080622 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.88441879 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.588012235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.68884984 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.503117542 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.380966688 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.529614138 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.50281434 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.684406096 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.472703759 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.702289011 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.813933302 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.522660739 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.963845399 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.502503797 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.772957028 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.608863913 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.385077099 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.504597024 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.838406145 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.144266766 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.788128972 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.005342752 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.713212278 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.465672836 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.989019068 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.006475612 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.320029167 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.381349369 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.522862726 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.843938169 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.225570381 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.608804819 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.558537907 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.57423019 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.630623738 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.611048893 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.561330694 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.579033974 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.715607144 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.765571286 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.147413315 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.285353023 seconds)
  done (took 99.678831563 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.467877734 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.468002083 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.46718318 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.467394133 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.468544667 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.467802057 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.467079867 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.466819376 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.466391278 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.466873398 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.46712756 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.46892772 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.467844553 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.469320076 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.467343862 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.469425298 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.468694719 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.470711675 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.4738068 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.472341906 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.473320928 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.473831515 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.474923126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.473714578 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.474242453 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.474189233 seconds)
  done (took 39.601618818 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.494538043 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.750039023 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.929179716 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.50046362 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.494234398 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.49717459 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.580033642 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.502807938 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.497756296 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.497373742 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.655058274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.497648668 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.529257258 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.956126116 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.497222092 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.495162639 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.496666211 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.494929608 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.758321073 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.5030732 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.604157028 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.498397819 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.581825136 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.505186683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.518664183 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.495756225 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.501190043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.088910785 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.517285225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.656823544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.384599409 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.586557251 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.047134045 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.961710078 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.384999344 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.505007169 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.497507215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.660896845 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.498340574 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.495461408 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.581285078 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.498292986 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.940826589 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.19153441 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.516382482 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.498146265 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.115884292 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.690276923 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.771599038 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.514143252 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.977973211 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.507743097 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.496874844 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.499609512 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.76487211 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.505556482 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.4974924 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.12396889 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.522843903 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.583086203 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.499911095 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.497979571 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.768327385 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.498701806 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.755519466 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.499812495 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.506403144 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.520928118 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.94169122 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.502681098 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.214543018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.519830874 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.49785596 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.659543129 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.756568839 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.152803782 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.530198603 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.776186416 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.071426944 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.610649577 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.512141818 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.084815582 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.616611965 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.512159278 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.501456828 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.500276326 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.499752653 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.545151988 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.582965793 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.159562558 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.230390262 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.162924079 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.618822653 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.516553509 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.501831534 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.132014023 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.52982771 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.500686355 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.946058252 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.228863397 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.528253429 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.506962901 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.223208325 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.529519131 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.590098966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.514963683 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.950663046 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.503796705 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.546042273 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.500745708 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.507197565 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.526921059 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.58983914 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.514396273 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.502040393 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.186994024 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.68928613 seconds)
  done (took 197.388097349 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.495992942 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.513339422 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.496011137 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.515283783 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.495108428 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.503679517 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.494822018 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.496161452 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.500881151 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.495616116 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.495603555 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.497006464 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.498675318 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.497159365 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.507887274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.502344278 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.10988526 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.496530491 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.496370103 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.497556562 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.315577088 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.505320541 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.496061249 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.497072559 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.496719409 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.498263011 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.526331049 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.498037426 seconds)
  done (took 156.840962569 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.504613532 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.114860685 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.524001916 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.648034462 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.527759279 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.501025498 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.648219266 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.568776436 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.525323813 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.502649251 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.502588445 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.849013425 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.510578824 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.093419854 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.726996048 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.68122227 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.09786383 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.533528944 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.502383914 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.502407618 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.649924553 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.50843889 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.848122007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.144581715 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.533806232 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.118587067 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.487015922 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.505541031 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.504938199 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.125067567 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.523452787 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.835919924 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.591186443 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.579111763 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.140017519 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.086207922 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.104495466 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.681587265 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.51322397 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.503429643 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.503575234 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.486191484 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.12081375 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.527241527 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.50694529 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.110160261 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.52725742 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.507873673 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.511442935 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.505273948 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.571444615 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.591451892 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.859019929 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.12971501 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.61157597 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.519426417 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.655351565 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.909845437 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.517265539 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.068527383 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.487367909 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.162411177 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.538659664 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.488525504 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.505961249 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.512939058 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.670010963 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.656752134 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.077790728 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.527442565 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.068727497 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.693451415 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.509056414 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.506229267 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.510338145 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.159718497 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098242284 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.693155066 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.664366688 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.728183967 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.49945587 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.5081318 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.490665638 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.594386728 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.510594649 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.163052354 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.098927125 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.530001769 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.510064827 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.511112455 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.511073848 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.707139027 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.188918007 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.623736373 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.059714126 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.876163558 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.86651943 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.516477648 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.575946638 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.530776556 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.86103634 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.520632931 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.571392124 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.970772752 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.87008896 seconds)
  done (took 180.123395496 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.769235775 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.807356905 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.610969513 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.675079056 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.155901101 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.110482411 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.904567946 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.663531837 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.627491853 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.787065769 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.799149581 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.629254574 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.740391407 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.590639432 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.292282268 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.608974503 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.625857303 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.667629016 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.678488331 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.581361756 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.242947124 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.823949832 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.722774133 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.558830508 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.617243707 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.350764203 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.11591542 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.077766801 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.708685161 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.944416361 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.069190284 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.70099379 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.568270089 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.294819424 seconds)
  done (took 72.532578135 seconds)
done (took 747.54802909 seconds)
SAVING RESULT...
DONE!
