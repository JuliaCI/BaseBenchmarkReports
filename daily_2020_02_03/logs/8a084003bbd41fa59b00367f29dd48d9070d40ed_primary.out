cset: moving following pidspec: 24210
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.440028042 seconds)
loading group "string"... done (took 0.613801962 seconds)
loading group "linalg"... done (took 7.914583534 seconds)
loading group "parallel"... done (took 0.177885886 seconds)
loading group "find"... done (took 1.182510672 seconds)
loading group "tuple"... done (took 1.949059089 seconds)
loading group "dates"... done (took 1.28368807 seconds)
loading group "micro"... done (took 0.242915805 seconds)
loading group "io"... done (took 0.969274787 seconds)
loading group "scalar"... done (took 38.978629877 seconds)
loading group "sparse"... done (took 12.31277367 seconds)
loading group "broadcast"... done (took 0.99325227 seconds)
loading group "union"... done (took 12.641596036 seconds)
loading group "simd"... done (took 4.671331904 seconds)
loading group "random"... done (took 9.407875161 seconds)
loading group "problem"... done (took 1.851727747 seconds)
loading group "array"... done (took 22.64198113 seconds)
loading group "misc"... done (took 1.790943269 seconds)
loading group "sort"... done (took 3.496507047 seconds)
loading group "collection"... done (took 18.426089328 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535783191 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130247456 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13252212 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124786677 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152606902 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119297343 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13125461 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090099082 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.813002409 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153646192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122775209 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.44369722 seconds)
done (took 5.268611551 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180506654 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089604757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087505543 seconds)
  done (took 1.318164586 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068893292 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132877518 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070336711 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070989243 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070286268 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070709088 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070513697 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069986548 seconds)
  done (took 1.697476087 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079779391 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074094371 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070016922 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071897758 seconds)
  done (took 1.437641312 seconds)
done (took 5.857227154 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.816137755 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220297983 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193182393 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429980555 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133362613 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164070995 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638373765 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341954144 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194368888 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085067297 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113302475 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353755962 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114016414 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641810967 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078434463 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094884653 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140556677 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449980468 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071464178 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086239295 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092447041 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131873487 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089732074 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077910224 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149493485 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071948836 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1408518 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083959039 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070267309 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225529471 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175835664 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659723764 seconds)
  done (took 10.514320026 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108266072 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105061518 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071963941 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130099262 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103874106 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072837285 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079200425 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071051464 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094743856 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135277974 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09630287 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107590502 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069342534 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072304623 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088730862 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209727949 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084487992 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085225369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075151134 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084059788 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111966414 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081783373 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084344875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084624483 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132526369 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18384793 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099720571 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100761762 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070510436 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086975452 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118094071 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132867244 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069575231 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069426831 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131414745 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098055151 seconds)
  done (took 4.782614176 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.049712413 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151292256 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094368694 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140696515 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089265461 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068800334 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11346923 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096062686 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084673992 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216416378 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.352226829 seconds)
    (11/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069991924 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636987689 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115311237 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111755816 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072367187 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074628014 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070805191 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.579712488 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101201567 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111971906 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086629247 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074322986 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073043784 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365638801 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07324458 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068484833 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072705827 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060759969 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128870432 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071798559 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.983491765 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168408669 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071406612 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104656777 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.302393023 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096255609 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148410227 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072497195 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068837953 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161033971 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074573807 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070469694 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089207475 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107101508 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122973538 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069681544 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072954595 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169598031 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069197409 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083760262 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.115607322 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15810628 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085240135 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070591119 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264192149 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093492801 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073953964 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068618094 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193025037 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069324857 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129684657 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071512391 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070139581 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071827988 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068717773 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073152083 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069316812 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367382136 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071751376 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079826547 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904456539 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076573484 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073023513 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076853176 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076813347 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091928124 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07079083 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079111899 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069679464 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069735444 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070578546 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086760216 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.402491943 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070480065 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071822605 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068293643 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093097296 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.201215585 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072270649 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069790185 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103398875 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072603373 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070667498 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112836795 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070984602 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086710373 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073825327 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116131684 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07118353 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.10926924 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06903589 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099990122 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073514169 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101794617 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084488922 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071759156 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.451988814 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069349993 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069144584 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072090028 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069974213 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071176606 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070779177 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082919635 seconds)
  done (took 22.263981779 seconds)
done (took 39.75161965 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274777601 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077163332 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077742929 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077060403 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077432445 seconds)
  done (took 1.825982169 seconds)
done (took 3.044913159 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129311535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105356291 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067558236 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10236738 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067943939 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106058679 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105851916 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08170477 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106304157 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068332993 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102686085 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068032824 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068169165 seconds)
  done (took 2.420904832 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091196096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088582509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073711991 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087718132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067033337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087668601 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085606101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093656074 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086052245 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076575577 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067386244 seconds)
  done (took 2.117239358 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090372837 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089363889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073054973 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086757063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066943104 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086171802 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086156642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090695897 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086158646 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077699892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067218146 seconds)
  done (took 2.108004652 seconds)
done (took 7.852980359 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.084635896 seconds)
  done (took 1.282495853 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.616413347 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.11974296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086175603 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116674223 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19777844 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122327891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275823676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090914238 seconds)
  done (took 9.021284508 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109665442 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078909211 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078896923 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074579774 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073715444 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074551443 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074743695 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073236198 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071815723 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073038437 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07490365 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075111114 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072562131 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073363956 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076336495 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072464974 seconds)
  done (took 2.505978484 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100630497 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09911255 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080602342 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081819225 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076233139 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075950484 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077558795 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077308549 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074799409 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076156045 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077865256 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077492225 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075591024 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068384378 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077426128 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078537594 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074408576 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077042703 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078418559 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079350507 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078814892 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068069689 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075250753 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077615078 seconds)
  done (took 3.204555841 seconds)
done (took 17.221976592 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113371292 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073464071 seconds)
  done (took 1.392714471 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087799772 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090239828 seconds)
  done (took 1.392256094 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089007308 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.071513256 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096637246 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084585786 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072209799 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070100737 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093681833 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.071693396 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069317309 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069415778 seconds)
  done (took 2.003024568 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074731491 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.083888139 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075599056 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088252254 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079682551 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070024673 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078297063 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.073624064 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083831729 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067664534 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075416881 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086875716 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.076273812 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.090611572 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075694676 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071878118 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074587454 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071283726 seconds)
  done (took 2.61356852 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072461654 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073346036 seconds)
  done (took 1.365173203 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073155933 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068714643 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071466169 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071490354 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068831487 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066736563 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067328422 seconds)
  done (took 1.702852965 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407945565 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123260776 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336150577 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077017572 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088513615 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.274938967 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070043676 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074345609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074947642 seconds)
  done (took 2.789569568 seconds)
done (took 14.481372068 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.087192411 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093921393 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103640699 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.39587199 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095157107 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07020346 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117637867 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19318769 seconds)
done (took 2.389896873 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22190626 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.733161686 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.447244338 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219731951 seconds)
  done (took 2.622868121 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36546386 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094292243 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06477925 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073809591 seconds)
  done (took 1.830669442 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072638437 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075891405 seconds)
  done (took 1.376110221 seconds)
done (took 7.280542774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072532262 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091369168 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071575676 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.069882808 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071405616 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.069180369 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069522803 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069259691 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071851348 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.072380822 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072343186 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.072374722 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.072036903 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071167795 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067180828 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066702615 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069838322 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067141123 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066988982 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067511228 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070104429 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06717017 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067482648 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070617654 seconds)
  done (took 2.964812377 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091294232 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072501964 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077449928 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075747833 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073417114 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074439111 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074899014 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069403429 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074857246 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071550323 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072861922 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072653509 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071693342 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073577332 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072486645 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072660511 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07482405 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069637668 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072105104 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07311829 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.188377141 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069456831 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072828873 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074488342 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072742057 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072616288 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071623876 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069393919 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074291291 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072587309 seconds)
  done (took 3.556677562 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.076217001 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069594405 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069815629 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07689858 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06946306 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068630852 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066965874 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067417011 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067753634 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066967215 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068307374 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066568385 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067094598 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06772547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068238683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071138202 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082616199 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066842579 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066745672 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067100189 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070514816 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06647381 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067287017 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066300211 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067137845 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066454097 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06727615 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066545929 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067506272 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067053154 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069986703 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070758613 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066814169 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074093803 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071222061 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067603186 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071232935 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067366632 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067380414 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067008538 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067220186 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066786012 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066672987 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074852029 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067415112 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068309808 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067291078 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068342209 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067789981 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06916148 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0669859 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067099102 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069316478 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06839446 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071323301 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066138588 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067755214 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067921941 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068651941 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066974914 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066537786 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067396304 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070047681 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067625131 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083001168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07523737 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067481351 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068671022 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068161977 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069759565 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068932086 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081538067 seconds)
  done (took 6.215399697 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097043693 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094276716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070680268 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070397736 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066690245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069800468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07445215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068915479 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069883533 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086596194 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068391441 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069695431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068346987 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071343879 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06820131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068941065 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075741638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065830958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067196957 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071228836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068238696 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07314594 seconds)
  done (took 2.849899848 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.164291711 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074487078 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110606457 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079532081 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073250605 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078691838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073641102 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074230882 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073263537 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071320484 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071308159 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073078948 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073583632 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070892157 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071533654 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070627921 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073292942 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070769721 seconds)
  done (took 2.68657539 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083195865 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068961233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090824728 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069611787 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070068035 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072488446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07405243 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077088681 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072126681 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06952426 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077589528 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071844561 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071777192 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069203953 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072086394 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070005784 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072165645 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069569896 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077306315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073150242 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073352645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077670758 seconds)
  done (took 2.862692159 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08573218 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073855117 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088502148 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071665116 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065403805 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067481485 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073261534 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069369887 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074011055 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070915984 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068963587 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067767898 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072010514 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069089521 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072434437 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06968236 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071297521 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069031165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071344598 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065096088 seconds)
  done (took 2.683459665 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093838383 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073765142 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071315565 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079032844 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071159525 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071257228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078405296 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071133893 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07115784 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091883585 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071681392 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071523272 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078307323 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076517123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071269025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078498553 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07902668 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079345535 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071309547 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071439829 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092959348 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071871192 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078745495 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071369137 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07168009 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071688654 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071286176 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076963358 seconds)
  done (took 3.375996337 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073125832 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071906158 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069811587 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067986432 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067388118 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067528241 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067413638 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066945557 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069696046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066822622 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06989686 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070081465 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069573646 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06953964 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069353586 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06992454 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069460764 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066991281 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067753675 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06660181 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069528116 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070035708 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069337119 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066974476 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0674225 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069532741 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0671128 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066987465 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069966521 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067078402 seconds)
  done (took 3.314741624 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08195006 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078461826 seconds)
  done (took 1.413300628 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068900407 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086125426 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066769342 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074026488 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074079121 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069997728 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076941766 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072923817 seconds)
  done (took 1.837322972 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08945338 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08417243 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073799682 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085033068 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081004389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087663389 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141787289 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070565626 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076704735 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067929492 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086537878 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069829636 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076561718 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070692925 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0769678 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077200404 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068048894 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0777102 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074376998 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068339138 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071981974 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079179875 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073161609 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068013315 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07170299 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093546922 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081578768 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069327021 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07373903 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077653009 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076684724 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06471765 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070501082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070321947 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067937025 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080908725 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085541014 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07291988 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079039 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0710119 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07970095 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064786432 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074877335 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077753474 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081684806 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070275371 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070390764 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065005462 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069199706 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073798092 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067192745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071506192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064457003 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077024753 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074198419 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081557926 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069988723 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072361155 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073575153 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074317522 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077584115 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072620145 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073499279 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070519123 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081154381 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075201213 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078929572 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065570077 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063984813 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068465013 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080010475 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094161196 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076218047 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07047768 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071058091 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067659691 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073984595 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071143844 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075787997 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076755983 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070169521 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075245972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077899693 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070593325 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073166968 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077882499 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06878768 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07302139 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068535601 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086970513 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069276898 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068182414 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068753295 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080449639 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073365523 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069984068 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067853304 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076944296 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063223222 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069410577 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070419732 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070138958 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080025554 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073791428 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073929983 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078278658 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076881658 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069480921 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072323375 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06586109 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070125935 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068592017 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076422621 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063292483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.197687256 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072993589 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071636645 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079391247 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068972676 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070539416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079268551 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07687307 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068919297 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067838477 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074519412 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069574148 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073130468 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079476975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069113986 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064850992 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06498706 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074111506 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070034513 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074195016 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075194321 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073835443 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064247219 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067632157 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0748411 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079025821 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071569939 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071715965 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076438079 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071991599 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070227538 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077448434 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072709634 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069867628 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076262145 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071357648 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06505749 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072629467 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07386414 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068731868 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074263349 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072815501 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073793709 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071076877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068870934 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0771151 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070651679 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069011549 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070277146 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069134748 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080642409 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072124094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064338515 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067183972 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079316372 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068922476 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069454922 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069304766 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072502301 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070433877 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067466662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069829841 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072109285 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079681964 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074328639 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071443273 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07559977 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081924011 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070732917 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07227369 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069997027 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071442411 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070761264 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078566655 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075906379 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075808058 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072548157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066539125 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07577842 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078027587 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069549948 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067713421 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070317089 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074182053 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076065484 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074404756 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070461848 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068636235 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071073311 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073487561 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073387431 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070028677 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069395979 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076641775 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068673998 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077013873 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071037435 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081073615 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073329041 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064527278 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071793724 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067886688 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076324679 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065224674 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067261781 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069220009 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06978665 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068216705 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071768204 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063098277 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0765491 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076604908 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070715126 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069042214 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068474918 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075925764 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070555654 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07279934 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072738808 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.203746771 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082430778 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070404993 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074024736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082198433 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070961096 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065495679 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077269983 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068975713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069498214 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070329559 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069181899 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074292395 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078067671 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077719178 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06487498 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073421712 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068435927 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069229491 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065236948 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075022796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073565264 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071878928 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079478764 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070669325 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070764564 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075097156 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070006413 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070772044 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070826911 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072974558 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071631763 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072278391 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069723618 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074027578 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070435972 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067554233 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072371437 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070308035 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071472532 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075900155 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070123997 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070132995 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073097899 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07071332 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071033548 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070815632 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069248196 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073341627 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071428561 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070219061 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072531649 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064843648 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077845412 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069582645 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077621318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070359395 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066833227 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076914046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073546689 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075629031 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071561509 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070274683 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071310308 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069672213 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072788828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077619687 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067818903 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081223421 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077981406 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071257945 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073419875 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070879184 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072065943 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069609439 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071616993 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070899242 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070894276 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069770251 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074719716 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072585405 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071088212 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07215635 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070814703 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070797323 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071418102 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064740972 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069365804 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069559627 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072711939 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080454265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071463883 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069970184 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069467409 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071025193 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069573512 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066777872 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077943095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078844366 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070921076 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076957207 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069046804 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07104877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08104276 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063506475 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068579766 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06741677 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067982088 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077369082 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069993692 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079259516 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070160318 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068902735 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066479796 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069979897 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067675676 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063170401 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066950575 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073093165 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068536678 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068966304 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.202029242 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073991573 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072015141 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081442532 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071062538 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073463282 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070317344 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068112979 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069942639 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070299328 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073360243 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070793312 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068603477 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067785591 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07035179 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071159751 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071967412 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070721119 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071999141 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077436206 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070374148 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073621756 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073339809 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064838112 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073343475 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069690259 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069963724 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069579409 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074180189 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073724009 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071286722 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079783548 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07029771 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071152941 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070491958 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068496353 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070531104 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069711923 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070041182 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069587279 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071281627 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079164542 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068416914 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074308699 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070975325 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070818828 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07685689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070696899 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073236548 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076503637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070684547 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072865185 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079124541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075238192 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073916588 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071279919 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071737379 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07600663 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070287427 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077553235 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07097593 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070988639 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072913799 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069310605 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070251659 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069711734 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071044184 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076991215 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071573062 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070449638 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069720408 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067601737 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071297336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073545676 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078882564 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072642689 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07381476 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064720738 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067651506 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070596878 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068353269 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072296452 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073249482 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07659866 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072576812 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070475892 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069210879 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079441489 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076378491 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074305075 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068349365 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074514016 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071387961 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073052885 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0717369 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070735499 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072023142 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075038037 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072422035 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069945003 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077241824 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07403603 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071130407 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072139868 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07082691 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070444696 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06498537 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06976061 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07229649 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075592947 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071989227 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069862309 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080433966 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067602785 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07050571 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07181187 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068179386 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073953777 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064950031 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071249923 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070181008 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069401345 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.195729532 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070437704 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068884684 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074631659 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070629693 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065195995 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082732939 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080410134 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074353573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070755896 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06913207 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066358808 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065244396 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069724759 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072369964 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073060268 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080812568 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069579199 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068832434 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065232044 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070643283 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074174066 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074030051 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066944818 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064934637 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070121423 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073711595 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076900952 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069514861 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071377715 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074170488 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073319674 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068645523 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073897335 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067275669 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074044876 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082724548 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071300086 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071130182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07722576 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078897365 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071581693 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065455719 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070796711 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073290959 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071182449 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070690801 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071946693 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085393824 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073118181 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069649287 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068987009 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073254567 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069423002 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078957941 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0707977 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071131731 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07450941 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07223895 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078261819 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07338991 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078288119 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07304742 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073604021 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070084458 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070173255 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068521211 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069403706 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07200417 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070110599 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075073591 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078089569 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069586889 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080986103 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079739764 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072182676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067197291 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069884348 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070302575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065174102 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071448047 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069113741 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068741882 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069895953 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069699086 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071590318 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075899642 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071892705 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071098789 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070497973 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06525567 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07372663 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072739677 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071620826 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067667905 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070424496 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070731079 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074912067 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07420133 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06828214 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072610384 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071993045 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071188086 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064796712 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076715852 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069964151 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072311385 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06982826 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070965854 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070125168 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073843672 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073855952 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070928904 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071512116 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072964506 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071489654 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066824601 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065968389 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074742922 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06693185 seconds)
  done (took 44.938400415 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109155485 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066717599 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065220844 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064973755 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076785855 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066172852 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065894097 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066087611 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066247063 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068273668 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065455185 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065396084 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073637013 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080542066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076273936 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069860873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065227031 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066498041 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065803575 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066629477 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073564903 seconds)
  done (took 2.845959256 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080071004 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083103481 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079362235 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086030008 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074496666 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073646421 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078432898 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073828026 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081949527 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075595167 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082156436 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073851303 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075629551 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075665281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07532226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07342011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083653207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074144078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073588012 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078616371 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073891996 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078509647 seconds)
  done (took 3.030158849 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073553005 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072457463 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07397768 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068067796 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072293155 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067663692 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075638418 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069544134 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07379782 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068916847 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069061017 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068830756 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071266372 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064690852 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069997382 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067806214 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110914754 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072730344 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069294599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070768273 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064661653 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071681363 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065034713 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065109915 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068276118 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072768018 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070574928 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067376813 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069372504 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068753763 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069956678 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067696129 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07169668 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069945757 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068504762 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06859462 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069115646 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069957581 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064706091 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067473482 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070549591 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065998091 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070019852 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070878223 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068332606 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067344045 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072216725 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069565788 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064219697 seconds)
  done (took 4.770957321 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085155044 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117183404 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071142025 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093728872 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082969603 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076112746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072996778 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093916782 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067098502 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067560359 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084561481 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08180379 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069024604 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074035832 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07560156 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068752139 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069988695 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067923362 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072486212 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068069065 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07294226 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075825391 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084127362 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082121063 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073734533 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068001807 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068030255 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072983861 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08130093 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073607577 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073584299 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074335905 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08408321 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070692982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068479044 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071195578 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084440223 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069361625 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071288973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066896499 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071090304 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073008832 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075715659 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084966615 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0698453 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074147887 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068587318 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066568212 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081175323 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071162089 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076708826 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082933718 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073378574 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069173036 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073350467 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08364323 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06859615 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067235727 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072317227 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081303367 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066511458 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072820055 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082089861 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071318434 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0761002 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082475533 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074042852 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073060279 seconds)
  done (took 6.60099024 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082336229 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100738688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087452914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086612268 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078935218 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07937705 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079154825 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07885028 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079454105 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083103506 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078822546 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119902375 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074678862 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081979171 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078993779 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079519932 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079232339 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079127422 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079789371 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079648593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079289657 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085857768 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079110322 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086355199 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091901904 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074686742 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078483159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0792659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086439827 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078855884 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083170355 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078921468 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079360693 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08681612 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083520466 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079084011 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069768405 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079052491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079267973 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079597678 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074980134 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087003867 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078948482 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07462616 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079227756 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079349308 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086485569 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08286877 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081772342 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083624579 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079498944 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087580568 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079015376 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079427819 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086607499 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089628446 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086885569 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086533567 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07929303 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086195535 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086434143 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089714656 seconds)
  done (took 6.462704438 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089580027 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080058067 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087383941 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065440715 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068163479 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075192189 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067631268 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067728492 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077666086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077477337 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07979567 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07497088 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078087821 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079613417 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075287483 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078050623 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075638358 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075772813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077476726 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075084101 seconds)
  done (took 2.876766308 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08202564 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08992969 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072219577 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076221418 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072515155 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074916143 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071893737 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072745909 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071766979 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072871641 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080062015 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079855163 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070134343 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074750826 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08035179 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075558617 seconds)
  done (took 2.559723398 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092045463 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076856157 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083507343 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070713656 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070127692 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065811329 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069223667 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065277622 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065421086 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081471344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068933833 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080093491 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069566786 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068270053 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066142702 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075109984 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066108881 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067217522 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0698074 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081870773 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073257346 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067566028 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07257398 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069207747 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072548154 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074383434 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068544911 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069640661 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066433147 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069908572 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072489166 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072834983 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066607035 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067233604 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068349859 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066737509 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069419714 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070598572 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074712723 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069620981 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067380007 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071468245 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069324145 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070792857 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065673545 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070174906 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06604047 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071809531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067040777 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072628027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06999036 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071954581 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070139489 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075995079 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072314491 seconds)
  done (took 5.252052541 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086423763 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072529214 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064736543 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067189285 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072193856 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070870004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072771403 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071317041 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071326475 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067519998 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0706494 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072041735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070631808 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07304084 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070841672 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073043624 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065770948 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071305201 seconds)
  done (took 2.638610401 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077757716 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071654521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07868446 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070700637 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070200558 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07183762 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065418081 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06885216 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067719664 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06964311 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069467977 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072389876 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070390873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072135822 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069668107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069765802 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072125124 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068180756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069251012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065181472 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071926504 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068159163 seconds)
  done (took 2.89965267 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.10161978 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089351339 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146114859 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082596488 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08837808 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075633455 seconds)
  done (took 1.935683373 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099440963 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105166442 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070505277 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073002417 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07967884 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074200218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074286196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073525422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081695121 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079045729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073560846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081872436 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081400574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081102688 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078953686 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079853783 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073768551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073291624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070237008 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087165162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073764733 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081551873 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073771843 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073358334 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073715717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081456001 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081564292 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078791923 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073486289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081700454 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079047474 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073176645 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081685097 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07926891 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07268805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081979922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074140785 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087581212 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079287531 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081321333 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072673924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079166792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08158401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078192026 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081667373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073706185 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077975097 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073655545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07361825 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090072939 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080111355 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080803887 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079135188 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081890718 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081565687 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088836239 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079161426 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081277277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079626841 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079412472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080943045 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079219455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081213426 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079485211 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07925306 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08119728 seconds)
  done (took 6.584400807 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111347271 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070909154 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074101787 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079282047 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080722488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074084131 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074037247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074072977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07362163 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070556389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113232523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073776514 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081249249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081047821 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073504094 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073905536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073728695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081227438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070263808 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088895502 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073562091 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0811521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080883736 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080920473 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0794934 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07914625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07359714 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074048172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073460949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073909456 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078569674 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074114424 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080651996 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07016736 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081685895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073669884 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073213231 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078175604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074474548 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079420248 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080908159 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086697197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07409873 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073841767 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07923545 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073954459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07330235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070273074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073444921 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070020025 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079772913 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0791096 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079495429 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081045855 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073625849 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074480494 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073401352 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074188591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073859259 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079359591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081306585 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074084016 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088757501 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073577904 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073873121 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080815127 seconds)
  done (took 6.492144223 seconds)
done (took 134.874257252 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196230174 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172687239 seconds)
  done (took 1.712346921 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075392543 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106011249 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084295618 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134671648 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070499292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104407047 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102629652 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081690076 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06943909 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070441256 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069958952 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072805344 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135642641 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070064179 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069422612 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07227728 seconds)
  done (took 2.747772143 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106926143 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168680657 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107409079 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069231165 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103279703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076024755 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068256973 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078768667 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074458651 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069448166 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076204238 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074338377 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068519775 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074197603 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074585349 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075995006 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068999084 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075740723 seconds)
  done (took 2.874653388 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107105808 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095992459 seconds)
  done (took 1.569977311 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162136847 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137268879 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20553899 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.358562706 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164215415 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15209262 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147569284 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146506944 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117768396 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142739549 seconds)
  done (took 3.094322941 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107540612 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15944201 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277503711 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123022349 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076332398 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097156131 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124145675 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082296807 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084409011 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084022699 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083889465 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079928457 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10469524 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077902405 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078262149 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080182685 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108427928 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076663612 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078416613 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07940958 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105522484 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069730109 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076517275 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077014741 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080573813 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081355368 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069651945 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069344538 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079671002 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079232192 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079677605 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096080382 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080739331 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110515856 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074750249 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111625127 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080594421 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076978496 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078901588 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076908035 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08157799 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081756002 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077560062 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080226739 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069695465 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080495026 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069927775 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069398283 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08202419 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070885381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080769232 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079849978 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110605392 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071304831 seconds)
  done (took 6.212142414 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112474225 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111939247 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075184222 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120272292 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109379162 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075583505 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109752566 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102940763 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11004754 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074260915 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072313668 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074388579 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086293757 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086707305 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121859469 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113485753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077054299 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074742944 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113216324 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111616246 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072408923 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103928193 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097992913 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110011872 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071643089 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074132673 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071941762 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073530151 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080524321 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081907965 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074222712 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084809252 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088298778 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081856863 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071108413 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071950666 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071892879 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083699312 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083025562 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082614684 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081521919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071285739 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072174687 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073678466 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073705712 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071679164 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083423558 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084435315 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082367682 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073084239 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073538891 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074593291 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073349931 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084026519 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081311545 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084668363 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08452671 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072748088 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072717841 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076405728 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084943688 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083405288 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083474067 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074154294 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083201593 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072770169 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084102984 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088240569 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072940295 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074502999 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07269952 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073136075 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073663451 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08133988 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081449616 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073846366 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073252356 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072585454 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08419551 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08266481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072267987 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080753643 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071126221 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072413667 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074124081 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073526898 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081271826 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082841175 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073314001 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072571918 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073339203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072166721 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070836572 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079291303 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082489071 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082003638 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081125247 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072373309 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081698898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080545252 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07266551 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080925729 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.200440385 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075447872 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074957428 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083241959 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082888387 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084064294 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073367704 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072885671 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082053079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085538696 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073348941 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082360975 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08486969 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083295383 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072561494 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085725733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072808484 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082754201 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073719505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084042683 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072757386 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084320288 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073199486 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07336714 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072852106 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083343279 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073901947 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072580227 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073799088 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073544708 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082950981 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086526932 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074742303 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082246549 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082447789 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074309299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083404513 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073464252 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083290317 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074310919 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074019154 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07070405 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085257464 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073924814 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072430923 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073594996 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08469551 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072143788 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0833803 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081730354 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072200667 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08431969 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084051049 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080557654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084483636 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073902481 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072305217 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072054799 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07305709 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081847249 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082609422 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073714108 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073060819 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081924314 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082634494 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070935434 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081992498 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081849608 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083327892 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072723125 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073109799 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084657404 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084237037 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082841976 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08234966 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08221913 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072483863 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081207441 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082352898 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072185831 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088724885 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07277928 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087178851 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083593695 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081235532 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083203766 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084684889 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085173524 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084561181 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086821535 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072052857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071559654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082776713 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07204083 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072853066 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080764608 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072569211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07294368 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085566831 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071742863 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081969336 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071290542 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081075843 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069921277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072744788 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.218658088 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074112 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074923774 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084350318 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074166506 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082017508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084903103 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083831209 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072373594 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074756472 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084459851 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083936885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072571067 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071924073 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074910846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084626888 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081427271 seconds)
  done (took 19.597038532 seconds)
done (took 39.178234464 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.221551831 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15978692 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180246812 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123299796 seconds)
  done (took 2.156051075 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124990696 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110485835 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099216648 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069838151 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103367809 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068976247 seconds)
  done (took 1.982494458 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322619194 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217086838 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196995907 seconds)
  done (took 2.140065539 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221045483 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.203904127 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.468193276 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282830983 seconds)
  done (took 2.698155559 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.152951163 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092920798 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071884143 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088482258 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138076813 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165626292 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104808685 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130390392 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083570739 seconds)
  done (took 2.492833778 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153794069 seconds)
done (took 13.032540061 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.225134653 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.243886049 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.178526936 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.126773937 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.239581752 seconds)
    (6/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174647054 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115958924 seconds)
    (8/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120409546 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087265828 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.226145207 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.209171494 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08302179 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07778874 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079339209 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082630566 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088810565 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102003658 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106515315 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076846251 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081544219 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119440231 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.180280969 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082156222 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.230295965 seconds)
    (25/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.238802962 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097613823 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.08245994 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.177643993 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118843358 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087831889 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228286606 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202943039 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.080827583 seconds)
    (34/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056141256 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214016273 seconds)
    (36/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.132608092 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131961012 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.086392652 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07617592 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117053136 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.117088953 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070492612 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07014198 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086768301 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155859545 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079315532 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.185810902 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097125862 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225575368 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07756856 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065961424 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077299563 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077984557 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070294214 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171046102 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121576323 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094064398 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091105177 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.100549469 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088477567 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080668537 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.056465311 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091503022 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.361581868 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071467493 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078679726 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06801153 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056744775 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08339043 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189489896 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055682968 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.203284164 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075568087 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203483527 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08501914 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077438395 seconds)
    (77/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072556415 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096469381 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075870299 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.199212366 seconds)
    (81/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076270692 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.128849936 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097675091 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094149712 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.345948269 seconds)
    (86/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.217996525 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056245608 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055503903 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.071432202 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096311304 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077776102 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08084258 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.126092936 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080100942 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069304261 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09556086 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095540452 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081778461 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057145791 seconds)
    (100/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056337158 seconds)
    (101/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.108727764 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06681924 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.111219368 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070981067 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078273273 seconds)
    (106/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.109113192 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067406032 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071896978 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101437054 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092117119 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074270009 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069380711 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.213811746 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093651153 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.152757191 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06974348 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056799951 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077368423 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158474072 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079005734 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069668514 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.212244945 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095789598 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146782578 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054624726 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096268544 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056618112 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082915267 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076809474 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076125374 seconds)
    (131/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054858113 seconds)
    (132/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075538975 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.144787371 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078271228 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05499481 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076801126 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099563657 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.162840986 seconds)
    (139/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08187249 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075816582 seconds)
    (141/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162606202 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076626877 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054747357 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085940995 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171602873 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056312243 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071647033 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075145862 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114545658 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076457547 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069812109 seconds)
    (152/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077374692 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145172852 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070310347 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078771342 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11721052 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168614417 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163252392 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05565002 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191593361 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120520061 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148962204 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078083378 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117313259 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070274128 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077684226 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076694344 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054558478 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115459147 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193180578 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077056433 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116650684 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055932177 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159412717 seconds)
    (175/309) benchmarking ("sort", Float32, false)...
    done (took 0.13877466 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054985671 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188414923 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055198432 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07981061 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054109155 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054070687 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098921057 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055001669 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076439514 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083645189 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.117788495 seconds)
    (187/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126583459 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0710874 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078296079 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06990241 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068682249 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054618745 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067080782 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076408482 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072486526 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.235925674 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190027428 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157268793 seconds)
    (199/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055962782 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165145328 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056271052 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137500206 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083934863 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079064811 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055433636 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054910768 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11378727 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054874556 seconds)
    (209/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.121132059 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075456641 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055059873 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099883421 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055621559 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06935394 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058400778 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09260734 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078145378 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072971726 seconds)
    (219/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080950261 seconds)
    (220/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.073546321 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069704835 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069383548 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081021351 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080225253 seconds)
    (225/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055692892 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077378376 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071569829 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071286447 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069545361 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073261465 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071102126 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098073835 seconds)
    (233/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056198816 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183198897 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069941983 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075766482 seconds)
    (237/309) benchmarking ("sort", Float64, false)...
    done (took 0.137035741 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070663139 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07900633 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132998757 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069364175 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071004204 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068172361 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05546334 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055649207 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070034238 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153902571 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094818407 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069526789 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147070625 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054728459 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098171098 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087085105 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14384315 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18521448 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070776114 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091629949 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068555488 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068068015 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073854383 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069942422 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093609573 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068040013 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054822944 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068022226 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054719303 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069024954 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071964413 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054866313 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054769168 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056112933 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054759602 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069488015 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054301496 seconds)
    (275/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076727043 seconds)
    (276/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202932587 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070881801 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118443368 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.180019072 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055993441 seconds)
    (281/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078174 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092211546 seconds)
    (283/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068145663 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069322309 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067437043 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070711044 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055613195 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119988356 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05475135 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054293436 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094764874 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078025687 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079018551 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068384463 seconds)
    (295/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202122197 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068951033 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077905645 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075470899 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097758693 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065999807 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069232668 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056286343 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076234343 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054465048 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 0.147673596 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056951414 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074510981 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055245887 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054147098 seconds)
  done (took 32.688523836 seconds)
done (took 34.102276081 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094928164 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099420154 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080801088 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099038893 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085807742 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081403128 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078235117 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083549512 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085127124 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086413866 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082273829 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058370546 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079126767 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079033198 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079626952 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09584336 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083683419 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07794417 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078042237 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068749857 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077837603 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070128976 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072335564 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058051676 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083860264 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075997164 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076373237 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078360885 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069748717 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.07031221 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073061146 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077837916 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070295901 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082988651 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076892913 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077250892 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079222668 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081073886 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071647591 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070244721 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078696422 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070126352 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076605098 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077965977 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076710089 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075080545 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077366515 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081810342 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095023248 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071292298 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07908414 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08051812 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080698708 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076698196 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073973035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077373984 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074216705 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095219591 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078051549 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07155021 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07862284 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078543001 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075028875 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078205184 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076943122 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080162165 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080174663 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075665593 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078927301 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076455611 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068983308 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076852389 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073300434 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069271793 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080138717 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082488594 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06792726 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076086495 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077622227 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075039934 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068584939 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071799927 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07305165 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075960978 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071408196 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058133044 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074284408 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07617428 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068265121 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077951724 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075952644 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07670551 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070872791 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079874686 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068777677 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074514546 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06906037 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06926065 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070813197 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074208598 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06917757 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071453245 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078808694 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071305377 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076567584 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082824019 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069037298 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076698792 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067989252 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068307526 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08287673 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078742471 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069797735 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071706937 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068451187 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076782835 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0679638 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069167101 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068721681 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068775573 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074871113 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068511463 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069955258 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075602049 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08171372 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067915551 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07187378 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070471628 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068312389 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074332575 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.204764962 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070143619 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072474231 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066607949 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07349817 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070196549 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077596207 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071386892 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077296892 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071352941 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077942241 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075762528 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.0767987 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075013607 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068832194 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063549807 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072423956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071922235 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071536133 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.07043666 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070688549 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06998139 seconds)
done (took 13.127309909 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074836566 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147673155 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101420628 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100143297 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089637415 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070246682 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079614763 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103886239 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071474976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105095301 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092802113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091158281 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118746689 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068419763 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070760924 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074018959 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071406397 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085331349 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103872745 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091582176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120131191 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06952156 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096638929 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094135202 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09318241 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099308714 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070911258 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073707108 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073695581 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106362025 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09295832 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073901312 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070783078 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102544493 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097740169 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087872814 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070202763 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087506324 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071244103 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069923678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071619587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103312656 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084737522 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084958297 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073848902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081019414 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071126997 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087941915 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093987131 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083474023 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090408863 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105954591 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072663104 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088483474 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068346363 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090215893 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081138043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072919309 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07064103 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078185829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070784918 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073933993 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085002085 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084329936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074764466 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.090005118 seconds)
  done (took 7.135684919 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.093011192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097091041 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088365475 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088053405 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069613031 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070084304 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069832744 seconds)
  done (took 2.08461473 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07337609 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096491055 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093757281 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093738623 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085448493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093692233 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079781888 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070852442 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092847057 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071928512 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092262271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105169184 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073720562 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078930548 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095019238 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07132005 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095992745 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070499838 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074276592 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095377307 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072691489 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101531187 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074181257 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07129219 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085971722 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070718564 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119803982 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074827032 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072190569 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074324251 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069088458 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112755768 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084662001 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078324498 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070601016 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085791384 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085628923 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069712804 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08853809 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081108259 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084945174 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07181937 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071379193 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068993651 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07538638 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081327027 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071117386 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071224983 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073149423 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091249431 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071333588 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084508779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073343818 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076547886 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073035691 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077315552 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081470969 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071366079 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090918068 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072239116 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088116311 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087072477 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084472824 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087472856 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072628247 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084377616 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084944755 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073259156 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073131607 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075787895 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090258744 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072041393 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.075428287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084318986 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075334921 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098485605 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.098299176 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075298889 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.087572732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073673407 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073369139 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.073405389 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097775985 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079277496 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072968726 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078848082 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077090076 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071266646 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071669713 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07463024 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068347275 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072181189 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074396566 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073809485 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07352012 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087433305 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073514385 seconds)
  done (took 9.309763749 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07617287 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074517452 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076318968 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072306501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070843804 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0728584 seconds)
  done (took 1.969383348 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101972396 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07557668 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084895917 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07540552 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109562805 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091091352 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091852901 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082476567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088804886 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082580001 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09153718 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092979214 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096361329 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076161388 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091039702 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074882858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09132251 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078704778 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082311401 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076610042 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090676889 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076338786 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076294337 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085888618 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080136477 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075669701 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082431656 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082651577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082255079 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081990318 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076306135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.08069526 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075024363 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081741696 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091834288 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07447697 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07521269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081006846 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076272237 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079392185 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091875901 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07661027 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077818366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082097668 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082354526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074522242 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08054507 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084282758 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090654686 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081167061 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08125924 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074895294 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079261694 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080747615 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074566796 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081665245 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080744973 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091466737 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076747499 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074696201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072791188 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080107646 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081530278 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08038033 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084584736 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080899263 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074334001 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076439115 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076787972 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075779611 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081042826 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072408189 seconds)
  done (took 7.399205304 seconds)
done (took 29.387923415 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546699403 seconds)
  done (took 2.033675101 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.64837441 seconds)
  done (took 2.163515995 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.524842206 seconds)
  done (took 8.034136837 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.41153941 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.512573506 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.75518733 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140293149 seconds)
  done (took 3.366500991 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.738916949 seconds)
  done (took 2.266171478 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242188502 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227902799 seconds)
  done (took 2.006694235 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.392782392 seconds)
  done (took 1.907329717 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.175030167 seconds)
  done (took 2.688783075 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.275624237 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186770594 seconds)
  done (took 1.985373852 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.509433298 seconds)
  done (took 2.027872334 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.932916143 seconds)
  done (took 6.454166089 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226602923 seconds)
  done (took 1.791053175 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.247882093 seconds)
  done (took 1.770751562 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.764186194 seconds)
  done (took 3.28704622 seconds)
done (took 43.304333597 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.091809958 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090405951 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089782961 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086878725 seconds)
  done (took 1.865631235 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084895029 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.081201454 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083999389 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077587752 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080924975 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077871632 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079192729 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080291324 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077022144 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077769915 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077132524 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077815215 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080254886 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078712118 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076352263 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079455875 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081020987 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077190566 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07998604 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077384089 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075306047 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07923719 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079606055 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076526681 seconds)
  done (took 3.419548443 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086818505 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078139744 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.08094892 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077551417 seconds)
  done (took 1.853468569 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085883826 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097447652 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093820027 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083035119 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09676255 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091793339 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073383759 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07317246 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075110494 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082863542 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072402682 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101002808 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093405498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082941579 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084920765 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070766964 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07290073 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092826792 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083405683 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083593046 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074786512 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08273973 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072921509 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094111814 seconds)
  done (took 3.540198974 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09436013 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110049704 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086497614 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094482063 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097147456 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069755932 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092395485 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096926702 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.133200314 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070027064 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075304155 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070273288 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077968827 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.07048296 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085729672 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.114150591 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118410435 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07396241 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102818693 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069872461 seconds)
  done (took 3.340416223 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08229034 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077824362 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075071905 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070750341 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081312604 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077221344 seconds)
  done (took 2.004462984 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075786166 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07491794 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072943258 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071336867 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077214933 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071393414 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070314922 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072277408 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072584108 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072057742 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071585494 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070740478 seconds)
  done (took 2.406447371 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.216560384 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073951413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074151533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070923454 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075200868 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07099393 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086459916 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072228572 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097911805 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071711019 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071366331 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073302005 seconds)
  done (took 2.590201086 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218873935 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083117424 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245611352 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15811401 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116324247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121139037 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117974365 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119376687 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148413941 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105978634 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173534339 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17382853 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113247103 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142739312 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095100105 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104862911 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160090859 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169872681 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111959066 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177027338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151956839 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132635974 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153037643 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107580783 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110545872 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127596699 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076538234 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085298314 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180008901 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139732593 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149660939 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116572321 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097236757 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183298169 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178204802 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145155624 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153410137 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089449356 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107762268 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138580038 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207967218 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09664362 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16601046 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255415735 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085741048 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139181391 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12540576 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124328688 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110068983 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095151273 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15194426 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189168415 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14408768 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09310042 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13033046 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119403318 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11912491 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120021519 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186433419 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167998739 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133119078 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076425042 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114700759 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157103085 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138496103 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113177136 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1299452 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096590395 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140606271 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159994317 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129383977 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149288475 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122720699 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093607718 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124467639 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145751125 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133248917 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166850383 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129134711 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07733938 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129024396 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106778038 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085862633 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154021811 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079810076 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180137285 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103939415 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110736263 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131118227 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114086331 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113633526 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163657463 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150249597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254609085 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071289797 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111376543 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12586408 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151640971 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091710228 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113873804 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1218099 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082314932 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143949205 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079662086 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128144661 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080337668 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129162433 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135107631 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082827498 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127406528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110070511 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104911704 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138342264 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165226391 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093111197 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087059194 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174616754 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127080744 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10801165 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149282659 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161477527 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104196749 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105823413 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155469798 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184856212 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094346619 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168173213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111522864 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088475142 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093056488 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128223326 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116869262 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12958094 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086768899 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122767481 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173870178 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079805729 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100944207 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139603833 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082943139 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085012776 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109674184 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109395573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100753258 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104810898 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106912911 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140771687 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128058033 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109483436 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127028977 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249588828 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178452516 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093143673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107428623 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109937664 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075162774 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.14096881 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162692962 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084314585 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168293524 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127120153 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121945494 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123587162 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08829194 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1450463 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084509688 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074522908 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151186328 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115540357 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11532881 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155943767 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122124904 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130531841 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126735054 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136852291 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13619441 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134726985 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111310204 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092287089 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115851747 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132452561 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077683331 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09512666 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084525448 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109861474 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100801303 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088322568 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147287014 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129053391 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115664041 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116431873 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101815117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153168003 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08117552 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133802957 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123647089 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100266887 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156455767 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155943603 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136165805 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103527156 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141453484 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074395717 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078135467 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09169278 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.271823981 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089612936 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088960903 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121561777 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153236888 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134523634 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141988136 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130572543 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125980803 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161459022 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074743955 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124422233 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152283971 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126646976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.110597951 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096298811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104245937 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147523961 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113576095 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187953291 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118257387 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128796793 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157791713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106638457 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084336601 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107866912 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14002903 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109145806 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148380293 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104222364 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092919921 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113938055 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079332933 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103086413 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132615041 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123377181 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139397438 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120050881 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138285022 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082496496 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120409196 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126595035 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126767943 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068457915 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124360816 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164277862 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099140301 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122156911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156712112 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083214755 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140123682 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177756051 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298110299 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092069068 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114854234 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125884628 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133422915 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125643262 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146873971 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112432997 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143029098 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114933029 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090578866 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09305965 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102407805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109655778 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100203887 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109575865 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118724071 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101325831 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135838949 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108063796 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115940676 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122265805 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104546365 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095876235 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102435286 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184145358 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124050762 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176639017 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104654044 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148661561 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168161062 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079558814 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083856392 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082601599 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144709347 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089158102 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13516414 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112841722 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122922069 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128768306 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147294901 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100399979 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07292659 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115822665 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138779522 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130664834 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103656489 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107912993 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167102839 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104276764 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08418169 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118384688 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120904292 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107610663 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173806201 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064877985 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108829353 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226216007 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0871418 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135222321 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15928385 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085826788 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108737998 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124374508 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120306387 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133141948 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106060985 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114079856 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132810878 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156747363 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133999165 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.0954067 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11604478 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13262787 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160830708 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110562243 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101830065 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178330715 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156396889 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163767369 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092908646 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118589198 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117555527 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113794775 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142291338 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088794433 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167701663 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086953796 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141953162 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108265964 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093505801 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134126057 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114217351 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092693291 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15285281 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12250327 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08752097 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082141147 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123541178 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125166833 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110450437 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080065128 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142938521 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077845365 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137686155 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164682529 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085202721 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108806014 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100096315 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082821198 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259020684 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108078884 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093007655 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104504283 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178216708 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091521082 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154759098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138878196 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118934337 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138887969 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107761907 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645817725 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082639552 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157156493 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121035867 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180091425 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105790219 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122807593 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114312314 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127359863 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150467943 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108656067 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191621926 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137774492 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120513219 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084600265 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107579802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109217879 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092056616 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112733846 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117445284 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119790552 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097555518 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120844153 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129582082 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086521511 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100780913 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160685471 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122196189 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149756418 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147221138 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090763214 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121894114 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14115173 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084543147 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124925357 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157246734 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110119674 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104610279 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085410259 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103994772 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311691044 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078636647 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166644795 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127347827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114772948 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11748449 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117396229 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137874858 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112303516 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126473039 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097649353 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113796445 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118488843 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086983805 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081986699 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113300303 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116493276 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103045838 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102642126 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103749416 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155505563 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077688698 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104500257 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120661516 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149200982 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1793362 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093565378 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087451491 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122822178 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120152856 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117557518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125774009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083534897 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086193672 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084135943 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082926606 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113983203 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118045839 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119960031 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115537662 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168200687 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088220811 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.244998605 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10041381 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110307151 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075114769 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083225984 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101326179 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103093201 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112310596 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116416698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164516262 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099829179 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093872027 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09517619 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078053495 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086828591 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131335913 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11291559 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271452531 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106717919 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067686487 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11477977 seconds)
  done (took 61.557735184 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116295569 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087711288 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101566431 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150150725 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127811032 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206974464 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158426601 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195828851 seconds)
  done (took 2.789339626 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075379712 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101206048 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109260571 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088954787 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072081271 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074000474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238495656 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087437317 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071256208 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102321374 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083500436 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074167565 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.445761481 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071745134 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072406353 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065803175 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071533296 seconds)
  done (took 3.540780453 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.420002568 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623160903 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364942749 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081083003 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.948448053 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.099395059 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.159747265 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143110534 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083276731 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529919911 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414225817 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134715064 seconds)
  done (took 18.647557142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.091351125 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.084576597 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098991849 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095408421 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.084091098 seconds)
  done (took 2.097984455 seconds)
done (took 111.228524659 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090884372 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.631285877 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057426228 seconds)
  done (took 2.365551542 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094708468 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094247632 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090110429 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088658364 seconds)
  done (took 2.020404298 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082234014 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084556004 seconds)
  done (took 1.811084207 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24519881 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174856552 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102100463 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092005578 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088068975 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084378858 seconds)
  done (took 1.914251474 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079640305 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.082717817 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078252325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081739562 seconds)
  done (took 1.966073558 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085353454 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059398153 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061554846 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062455082 seconds)
  done (took 1.913495783 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096407207 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084991221 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083465596 seconds)
  done (took 1.908449216 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111930563 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092030724 seconds)
  done (took 1.846849337 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.091066613 seconds)
  done (took 1.735901992 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104769332 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109763958 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137931856 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11627728 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145562128 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11583603 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089323323 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090475118 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080837228 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09093309 seconds)
  done (took 2.727076563 seconds)
done (took 22.465072371 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087930379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.384068967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364947535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094797873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672250261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361428347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988083473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098775954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120656611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071749556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089923087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653755093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976760155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32971585 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966946738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328595098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65451977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072444519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072219133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071976961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96986853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071618075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071796557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073019772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652077071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37718442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0739808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328694771 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072675214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074656287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359836945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072968901 seconds)
  done (took 16.288436124 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078336118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126824894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07826093 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090091737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075076213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073312131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075411306 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073011385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14468064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072489472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090603141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071951228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076600166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07313737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092420297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072730471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073854731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072818571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073477224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072798415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092396131 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072731104 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072497386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073154088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072358617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085623309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07321272 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072916971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073947138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075026561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075963248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073440022 seconds)
  done (took 4.23143117 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126842154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131193894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078174858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108865787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116985566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074770019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150103377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098597557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133330578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072467866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090732713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072847999 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107772527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07350717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093599105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072636884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073976167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073224186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072644636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072997109 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093172484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072129207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072867411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073400554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072948527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087546652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073649154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073689954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074373715 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075377235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076258084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073681527 seconds)
  done (took 4.473800896 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.080583056 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080963642 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08817831 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089237628 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073747107 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076352217 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078409007 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074348489 seconds)
  done (took 2.304760188 seconds)
done (took 28.949999555 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08775411 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076473881 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080508471 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087664861 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077930986 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084021805 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070685049 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080860957 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077123104 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078021354 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080094274 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071872424 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076162293 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071113042 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078764571 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073201075 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084167236 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076633307 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083901358 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084727507 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07478371 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078040961 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080100246 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08382712 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084929135 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083802227 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083249145 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077674343 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073382125 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075670969 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081942345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089464808 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073450543 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084822692 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072221562 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072498883 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076608863 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072109061 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084167827 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081426192 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073807833 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081545049 seconds)
  done (took 4.958159636 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097973772 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102782322 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094670002 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069170312 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074607367 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06981991 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09499298 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064864458 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063959095 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094085852 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060189281 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064514995 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068320313 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058126465 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065013432 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060982843 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066629917 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059853085 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06508168 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064547267 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095429394 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058402356 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083604604 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068183021 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060072485 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066264671 seconds)
  done (took 3.564281116 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082319615 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093489171 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09699594 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136974514 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110334804 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084390468 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08388177 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100979762 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094201308 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071351217 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075504775 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098726904 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09495609 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078694509 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072208254 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091580257 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089118073 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073559997 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07785552 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099784486 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092499796 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091298487 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102257567 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088992092 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071178431 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074632218 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07557626 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087090269 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075300148 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082715712 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075330736 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076069584 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074443449 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085461106 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074940086 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074099804 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100846804 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082784445 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084757354 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072482253 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08122845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074098684 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098614093 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133247154 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072233783 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078858365 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075628296 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083237876 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072227626 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093699067 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084436288 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071586462 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075439373 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071111947 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071282231 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075103506 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074042894 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074429482 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080949523 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077989933 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097235932 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077004042 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089203403 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071444595 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080222472 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071200595 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073059757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071544719 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101607037 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074137105 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117915376 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075261733 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074011022 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08123473 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080305495 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078331626 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072229757 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090050566 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08359298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075823139 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081437831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075934062 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075246529 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097251146 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074681435 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0743008 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073115012 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077939481 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074915468 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073639439 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08567159 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072009875 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075002123 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089726779 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071572705 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073902531 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077987883 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076631698 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071441958 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083543969 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076708473 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073231101 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082916265 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072429499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074970894 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085316181 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078683956 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070952095 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076241621 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078265473 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072788397 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073883224 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075219588 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074599593 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080847994 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078934497 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076654151 seconds)
  done (took 11.238444715 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.180329933 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168728141 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07523324 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156255034 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082028201 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084274957 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158308659 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10126917 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072888979 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073575551 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073583783 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116516334 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112999701 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122643168 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083706338 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073435923 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089871866 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121361768 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161900149 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.166096914 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09191623 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085736176 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078274543 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074475642 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07699122 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08496519 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.096012355 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084674806 seconds)
  done (took 4.655167016 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088778679 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.116359302 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.082587354 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097545526 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095710308 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072814648 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07572422 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074996461 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087306293 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083550671 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072134173 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079440288 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080003973 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077034534 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073917907 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079546709 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080480777 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073426681 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076349781 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078082501 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083583094 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098212108 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076772911 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071661012 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078334615 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07189592 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068081611 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.090912327 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073131906 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101555534 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.07029427 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07842916 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088411742 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073844637 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07238256 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072981771 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072136689 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072322443 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07436445 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071139343 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070870387 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062316803 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072081236 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084453963 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079923923 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061253915 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07776004 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0778101 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078116846 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06979536 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075730841 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075725212 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076002832 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.08004453 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076432491 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078213316 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073608056 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079450082 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081926985 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072538409 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070202798 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071221731 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077317243 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069276531 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081878581 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077236554 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070740048 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072349174 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074397907 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080100755 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072202681 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077465354 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070288051 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07436512 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076849352 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074498567 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073525286 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070742762 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072652689 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073025671 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05927606 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072592483 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057411543 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075882481 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070254208 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071541164 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072312984 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078098692 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084166017 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07382424 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079048264 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07373795 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07120531 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075637265 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064968481 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075220684 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085041131 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087924329 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07240648 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069927182 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087136329 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077695401 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071382845 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060197943 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077000503 seconds)
  done (took 9.734244528 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100153151 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076521843 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089452537 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096977228 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093186054 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079252813 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083353843 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073887414 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089175996 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079495378 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082445359 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072559982 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083247081 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082471461 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074563543 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082995761 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076905641 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090180369 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088065784 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072719042 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081981445 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086213041 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096861388 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087094032 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085515648 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08843183 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096318692 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082454781 seconds)
  done (took 4.08342506 seconds)
done (took 39.887611403 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.743366058 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.919858011 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.742273477 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074007184 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.030996581 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.738967481 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.923631556 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.740430579 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.932955235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.777275255 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.999841609 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.955842078 seconds)
done (took 65.254734063 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.811417036 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.879504574 seconds)
    (2/2) benchmarking "String"...
    done (took 1.968943032 seconds)
  done (took 5.519580268 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.052576012 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.314844211 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.989183375 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.740681443 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745107778 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.057696662 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.568431163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260235883 seconds)
  done (took 30.348853493 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.929330246 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.961559821 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.460842541 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.4918313 seconds)
  done (took 15.571693887 seconds)
done (took 63.069128283 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.735560514 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.749339878 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.779545581 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.721171856 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.79977451 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.750264494 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.838900757 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.965094424 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.73831234 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.729157526 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.741095872 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.222168416 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.741700187 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.84227842 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.738029898 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.748421112 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.763855336 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.19687563 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.899848847 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.745887679 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.762446965 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.804694784 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.739876929 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.751980872 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.738341788 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.74348197 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.130410922 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.739570484 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.36434955 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.749628596 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.774422209 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.03708866 seconds)
  done (took 203.453808537 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.743334271 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.742628675 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.8028327 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.771475607 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.248958625 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.92536547 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.850127457 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.277654042 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.7459164 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.767512986 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.873238745 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.741429373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.896628411 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.686494081 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.778451343 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.835729646 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.895562968 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.897156688 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.780369124 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.901050688 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.769638103 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.707387504 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.671992981 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.849890337 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.755833048 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.833253197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.757602127 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.764676527 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.93467107 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.878830654 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.785053454 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.785884804 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877452486 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.613467381 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76874867 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.763394201 seconds)
  done (took 168.354431078 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.910311402 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.746891994 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.743915359 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744815255 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.744667916 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.750430539 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.746473464 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.744773199 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865986827 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342295905 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.272486315 seconds)
    (11/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869022186 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.79259136 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539761331 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.741661844 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815168468 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756520002 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.747950252 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.762888704 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.772171934 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745812556 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745720994 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.872469613 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.756356663 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.865624153 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752411227 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.747811141 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752014494 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.119252578 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743342963 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75173122 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.989502704 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.744291879 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745943257 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594545502 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.900295207 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.992760086 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.745075736 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75242317 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.746778634 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.975782867 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744007282 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.747147134 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.750902356 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956553699 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.743999887 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.874098972 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744921936 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.236687752 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.74426266 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.747109163 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.525826584 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.331227809 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.744239314 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.74688862 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.750872 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.746847688 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747475798 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.754514407 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.526595971 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.749082376 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.824032916 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.74958222 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.752996265 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754502143 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.747397098 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.748409389 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748646448 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.772672476 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.808281381 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.874880775 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.195607593 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869619478 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74963742 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815757902 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840351114 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.744915554 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.750137556 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748718604 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.748795664 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.829725707 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.745810539 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.899180449 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753874513 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.75032604 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804622819 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.818654556 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.745891749 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597218546 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.750006033 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.748488848 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027733775 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81312007 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.746349819 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.74865171 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74923944 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.888716811 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868409667 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480988674 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.750164879 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.534527178 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.749396068 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.899480073 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.746823965 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.880171999 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.747264371 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.833750644 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752017772 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.751506035 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.750415088 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782923955 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.751274036 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.810218378 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.74761123 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12399601 seconds)
  done (took 399.768706297 seconds)
done (took 775.21922141 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.3984033 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.364988763 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.475667182 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.385271435 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.36197169 seconds)
  done (took 13.665021539 seconds)
done (took 15.346417841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.846117818 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.850833441 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.777274952 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.847884838 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778400759 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.848075709 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.8282287 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.778390331 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815978644 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780860756 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.815367586 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.779018212 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767148697 seconds)
  done (took 25.198130908 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.002039723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.004739446 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827508823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.003673505 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.803318948 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.998111716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940044977 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.918216634 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910959724 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.770543023 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768838586 seconds)
  done (took 22.633696334 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.005596158 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.00827545 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834739971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.995076292 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804813703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003473506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.928106315 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.916331685 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912725446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.770687333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769865567 seconds)
  done (took 22.63490405 seconds)
done (took 72.152355853 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.769366183 seconds)
  done (took 3.454427946 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.789674785 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.958770119 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.77202749 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.767329484 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.76866239 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.765733207 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.770289312 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.765696811 seconds)
  done (took 16.045253943 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.763791642 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763606375 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.765617827 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.762376518 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.761452975 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.76448568 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.764953136 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.761077995 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.763077878 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.762296344 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.763687235 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.765561017 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.76128957 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.761305055 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.763786575 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.76272471 seconds)
  done (took 29.89847971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.763427096 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.762852329 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.762106435 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.762673201 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.761567218 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.762807036 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.761754178 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.762542447 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.761293049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.761946901 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.763415041 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.762796878 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.76224825 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.762210044 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.7628977 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.764030221 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.762160481 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.761892533 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.765722756 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.763099444 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.76345497 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.763981349 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.762013478 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765172996 seconds)
  done (took 43.999036305 seconds)
done (took 95.083617687 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.550891187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.432218558 seconds)
  done (took 9.669086328 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.770409373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.766438942 seconds)
  done (took 5.28671511 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.766196186 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.765781422 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.765844877 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.766187594 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.765471183 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.76572862 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.764444467 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.766654264 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766941703 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.765299888 seconds)
  done (took 19.347806366 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.766133958 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.766225359 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.764196529 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.766891392 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.766342681 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.763608889 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.767218071 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.765895661 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.765167892 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.762985994 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.765968924 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.763292265 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.766388786 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.764152861 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.767355717 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.763840683 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.763171325 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.764378844 seconds)
  done (took 33.461931111 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.768771366 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.767857087 seconds)
  done (took 5.225250682 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.763939028 seconds)
    (2/7) benchmarking "second"...
    done (took 1.764419959 seconds)
    (3/7) benchmarking "month"...
    done (took 1.763447706 seconds)
    (4/7) benchmarking "year"...
    done (took 1.763259911 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.764391209 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.764666764 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.765473283 seconds)
  done (took 14.038718288 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.769283946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.924657065 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.999237959 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.422955337 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.768809608 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.771857964 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.750053693 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.772313428 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.772427243 seconds)
  done (took 19.64081387 seconds)
done (took 108.358871833 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596946471 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.760802874 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.9953419 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813927441 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.813476846 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.104219569 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.801782327 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.073896133 seconds)
done (took 42.652313752 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.769876325 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.040222242 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.073790343 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.7894031 seconds)
  done (took 16.593437389 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.749503207 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.27861214 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.801102322 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.358904238 seconds)
  done (took 19.912875823 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.137526961 seconds)
    (2/2) benchmarking "read"...
    done (took 2.113960745 seconds)
  done (took 5.949252867 seconds)
done (took 50.9190374 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768680507 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.765966936 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.769056118 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.766565454 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.770186992 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.767807605 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.766278368 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767205926 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.770549919 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.769072551 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.768948557 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.769365786 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.771161778 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77088179 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767639926 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766871517 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770414386 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.767736871 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768268186 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767455624 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770969045 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769377437 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.767628734 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.771489052 seconds)
  done (took 44.140642485 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771067262 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.768029483 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.770344634 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.772120581 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.768739926 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.770638272 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.771680508 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.767900388 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.77078503 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.770451038 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766764377 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.769349261 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772694972 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.769707067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771290167 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.770471942 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.77206797 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767702598 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771963847 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770398107 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772885561 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770276601 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.768752943 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77003883 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.76893909 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768883377 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.771201483 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.770688861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771935344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.769239852 seconds)
  done (took 54.801409329 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.777431416 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.77995751 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.771620524 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.772585805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.772995191 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.771866443 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.77326932 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.77316275 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.772374595 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.77318413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.771693509 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.77335436 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.772940595 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.772320244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.771564009 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.772679102 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.773040178 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.772692714 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.774575087 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.77338419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.774499713 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.773151224 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.774063432 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.7752426 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.774784805 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.773753179 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.77411934 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.773345513 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.774369117 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.774551695 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.772496672 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.774082781 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.77454581 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.774404358 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.774828614 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.773997727 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.779545808 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.783025242 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.773655762 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774413195 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.773641785 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.775216233 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.774242509 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774107385 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.775027681 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775689477 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.774925868 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.774364131 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.775034775 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.774896686 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.774470691 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.774482514 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.775196088 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.776265413 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.774664025 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.776168384 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.77634004 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.776790539 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775986284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.77637506 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.776171512 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.775062235 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.775277296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777361731 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.778191314 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.777375101 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.776398102 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.777706487 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.776307399 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.778303284 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.778431976 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.777850494 seconds)
  done (took 129.488262443 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.775440764 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774228996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.772081506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773285254 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77462046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779589232 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.774493022 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7774051 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774461861 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777613772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777942001 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.775256179 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774103329 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776965775 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776365021 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.775389806 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.777947644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774906844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.777963705 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.778401955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777269527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.775182603 seconds)
  done (took 40.77059922 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777267042 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776175971 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.774329801 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.777924674 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77494931 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777946424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.777822935 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777808307 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777449337 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774661231 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775259772 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776394338 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775999501 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775833062 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774490195 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776552888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777187168 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775129406 seconds)
  done (took 33.672911916 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.775621429 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.775459005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.77770506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77512401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.77612473 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777684998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776307902 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777569834 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.778202826 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.775113771 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779996841 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779834968 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.7783943 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775485694 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778809735 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776644371 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.778927603 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775896793 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780422844 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776488835 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.775483316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778895669 seconds)
  done (took 40.799276586 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778704597 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779164886 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776038116 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.776333914 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.77833136 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.778246943 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.779393132 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.777134295 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779917673 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.779593436 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776641623 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.778562856 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.776465465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776798954 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.777543564 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777900266 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780406414 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777435281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778214467 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.775647412 seconds)
  done (took 37.259742494 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785177686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786685324 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786345169 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786462805 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78543169 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787564545 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787158324 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786336732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785629868 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787076419 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.786051095 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787115119 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787127373 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786565271 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786735048 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786477731 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78562047 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786741583 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788275831 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787778311 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.787900146 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784954942 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788648309 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786279855 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784776596 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786548955 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787973681 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786576995 seconds)
  done (took 51.727637735 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782224369 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.780894098 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.77896301 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.778831906 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.780236528 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.779710843 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.779132788 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.780297922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783435542 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777958372 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.781344411 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.782031306 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781545288 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.780112746 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78329418 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.782296865 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783145408 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.78036314 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779810361 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778639159 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78398608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782887706 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.78372073 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779144696 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780343689 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.782728773 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780419815 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780327188 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783577973 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.778889022 seconds)
  done (took 55.13315866 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.800989904 seconds)
    (2/2) benchmarking "in"...
    done (took 1.800120854 seconds)
  done (took 5.305691476 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.779700202 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781803922 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.783241114 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.778971394 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780116564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783033139 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782564377 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779434891 seconds)
  done (took 15.953913408 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.783739055 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.785252601 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.784812608 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.782492437 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.789724707 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.78383343 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790481691 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.783652615 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.786349238 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.783785075 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792246195 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.792863498 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.788741935 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785547521 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.784219553 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787634923 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.783066049 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.788209204 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.79049855 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.783908025 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792220909 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78780854 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786576861 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.784385919 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.788217893 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.794964783 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.790891731 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.785609881 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78601102 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.791596995 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.78707587 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.784026561 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.792329487 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.789418024 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.785160703 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.789600201 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792896974 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785605414 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.792692526 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791073762 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783969147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.782102795 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.787852485 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.787051085 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788240413 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.791668232 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.785684769 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.783787664 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.785060937 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.789481054 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.792452264 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785512654 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.783022583 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790060831 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.788380854 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792112092 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.791723013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.78891807 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.797417813 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.797474142 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.800515938 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.79651776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788713807 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.793546 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797601581 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.815878195 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79398604 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.783688583 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.783859913 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.787291171 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.79417015 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799577162 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.798278365 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.792221358 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791935356 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.786967571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789450701 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789396005 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795070057 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.790092998 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.794288577 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792596002 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799237813 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813337553 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.787166973 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.794701124 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792631691 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.791534974 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789722696 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79846013 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.793380794 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788081238 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.787873288 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.787260229 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.792370617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.795306838 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.78695723 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789872031 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.786116818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.78992119 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794593415 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792064654 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.799665107 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793347555 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793457668 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.796962225 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.789414249 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788223326 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.795816599 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.791211731 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793531023 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790333751 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.796878717 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.786670847 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794699759 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800854578 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.795186945 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792251493 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.79574319 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.789313448 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801466282 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.818380999 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.789539793 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.789071015 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.795744888 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.807067345 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796513867 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794389429 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.792061456 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.786401501 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.787907697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.793274349 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.791900704 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.792310364 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795985939 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793895275 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.787703558 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.789457771 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.795196878 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.791465554 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.792754594 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.793387559 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792771209 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.793050899 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.797508237 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794232309 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.798157543 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.791050579 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.79258468 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.792929225 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.788396746 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792534795 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.791724689 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.79895981 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.792714725 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797709889 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.790103787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.795340752 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792125398 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.79187154 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792627568 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.792661062 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796783221 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.797297944 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.798824743 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.791962634 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.789204787 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.792591252 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.791192511 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.79241322 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.792865434 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791898068 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.797159059 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.807030467 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.793763087 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.798892133 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.797223291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799173042 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80079911 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799433537 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.797353055 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803517434 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.799114991 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.798296611 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.798431712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799713618 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.793791053 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.794371172 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795266601 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799324882 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.798126812 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.80268066 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808554028 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80305087 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.796345181 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.797902827 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.795159631 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.803592371 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.798481392 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.799840873 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793274628 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.799821151 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794575247 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800395909 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.794613892 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.800896498 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.793644409 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.794843239 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.795867046 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.800352895 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793701066 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.797770133 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797604716 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.790107876 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796478374 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800180746 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.793622486 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.791853457 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.793746597 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.794936041 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.796235061 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.800633806 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.801450862 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.791351783 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795610076 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797427147 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.796731374 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.796194219 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.795824404 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796674775 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.796959527 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803351669 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.795786691 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.797245682 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802135616 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.795050421 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.795410022 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.797931009 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.797426326 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794629102 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.800468666 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.805458302 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.796690093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.80240263 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.799726834 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797597207 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795675606 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.802277747 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.795096032 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.796329949 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.796210568 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.799712371 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793782375 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.799112961 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.798719379 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.797179618 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800933638 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797609665 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.797714852 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798080557 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.80340994 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.80287526 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.802690363 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80036161 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.811412318 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.803719166 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.799046697 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.798889705 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.79790494 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.800989261 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.800487835 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.804788738 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.799709745 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81244613 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.811135167 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804162081 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.800786333 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.797852677 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803526255 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.798883398 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.803795214 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798440964 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802311363 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799540575 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799402998 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.795787384 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800936314 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.799372663 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799832675 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.80108788 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.804112296 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.79987106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799953967 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.805277975 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.804391721 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.797174446 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.800109419 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.800834907 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.802697074 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801214423 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.7994912 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.80015348 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806923403 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800068575 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.802540865 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.799332182 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.799120989 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799177352 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.801985751 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.805633577 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802796133 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.81427402 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.802834876 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.81082656 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.800305667 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810461293 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.803935486 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.802532233 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.816146217 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.79778234 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.801229403 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.798980185 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.8074289 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808103494 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.806800322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.801957763 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.81009759 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805064749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.807131215 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.801291228 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.807258106 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800722709 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.804290086 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808924704 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.801390743 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.805569967 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803188123 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798543405 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.808583951 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.799439154 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.801420073 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805433745 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.807658345 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.802577678 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.802985065 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.802447504 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.801537226 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.80782293 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.803101529 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.799451337 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.802543552 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807881258 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.802500479 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811892069 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.80210335 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.81153193 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807925183 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809681306 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.805817826 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.803162643 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.805940227 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.801649961 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.803178667 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.803527642 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.804416744 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.808985999 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.802785308 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.806977082 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.807377959 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.804897098 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.80498956 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.808195333 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.80210407 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813612963 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834019057 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.804747898 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807264799 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.799889662 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805088602 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.813153133 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.808654746 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803809048 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806015124 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815529657 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811705224 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.805369338 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.80684597 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804646757 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810215184 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.804385212 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.803615498 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.809838054 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.804876759 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805988955 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.808315328 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807995347 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.80337781 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806483551 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805831095 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.807121262 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.813685387 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.811172164 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.804637094 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812352826 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.804379422 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.807506915 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.806231566 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.811345777 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807306825 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806394909 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807887293 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812312296 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.812067341 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.808612347 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.805461479 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.810846194 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.80617846 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.806513461 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81067612 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811104462 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810381758 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.807620385 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.811300317 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.806227008 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.803809837 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.805546528 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.80547287 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807838387 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810067573 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814473969 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807869481 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.803488421 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.805699454 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805296108 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.804471903 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807364155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.815454639 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809813531 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.820473986 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817864726 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.81555969 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.807553424 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811144898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.8164237 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807362799 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.806512768 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.812689475 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.809673616 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.809016676 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.811031198 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81291284 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.814544404 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.810121552 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808248343 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81599614 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.810852299 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813346157 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.809616886 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.813683233 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.808794491 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.805143898 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.807749551 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.808312897 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815230739 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80894499 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81297537 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809709761 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80688051 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.807908288 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816869609 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808444403 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.809740225 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.805902486 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.808623777 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811500239 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808925641 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.805400606 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808604321 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.809049759 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.812336518 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.818542511 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.805631001 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809065496 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.808858353 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.809714514 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815183906 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810066416 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.806902435 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.804827342 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.810238493 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814125063 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.81068138 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.812087705 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.808463597 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.809814754 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.811164521 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814395044 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81420325 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.821920881 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.821382392 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.807852397 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.810046094 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812832097 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.814656902 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816336458 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.815632792 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811431402 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.812065919 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.80842707 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815785525 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.810981878 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.814429956 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82704823 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.809987131 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812865313 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.812474688 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.81390326 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.811329335 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.808760963 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.809806982 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.811991122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815501999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.826416856 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.817248051 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818091872 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811131278 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.813359576 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.815209746 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.813024011 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.821548682 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.815223037 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.819056646 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.817224533 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.816847941 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.830711219 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812503456 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822771715 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844530485 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.812303147 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.81318241 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.816820626 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81198626 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.816235345 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.814370728 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.818481807 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.811488464 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811756045 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.819158377 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.812794528 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820335929 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.812433333 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.812776347 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.812088653 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.812817212 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.815278138 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.807552573 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.817361131 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.813621356 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816640794 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.817022243 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.817452323 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.810842623 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827440988 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.824803314 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.813055787 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.819375786 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.810866328 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.816498385 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.81791692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82526361 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.82239392 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.820032531 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.818617443 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.815165499 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81832136 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.812384825 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.817584418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.814288728 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811279093 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.810798053 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.827919505 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830330407 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.821261637 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.816210765 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81949498 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.815239399 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814282423 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821722202 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.820095509 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.817443327 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.815009997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824551808 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.815277766 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.814574119 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.817820894 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823939708 seconds)
  done (took 1076.08603268 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813372788 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814577661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811604967 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813141492 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811677537 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81099195 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813567423 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.8138917 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.810109052 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81104426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.813553653 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814269171 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813020711 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813283664 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811730542 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812587691 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812635781 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813778577 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812203649 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814609787 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814462657 seconds)
  done (took 39.80531852 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.815599645 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.814828184 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814980434 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816568792 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812796661 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.814805978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.81216929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813715841 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.814284972 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813885141 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818079658 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813582032 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.814979447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.812402565 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812402344 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81515501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816598427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812112296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816115013 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.812713071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81600376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.815375666 seconds)
  done (took 41.655840241 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.820974552 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.820022732 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.816467798 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.815524104 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.817111969 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.814304273 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.821056316 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.816587694 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.81846875 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.819273645 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.814759498 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.817235712 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.82494709 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.822622523 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.818294997 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.818993174 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.958949038 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.824977196 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.82202763 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.823883005 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.814558464 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.821987869 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.813759785 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.815708642 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.816566322 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.822006065 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.816789752 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.815894137 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.822710354 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.818451975 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.828002568 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.819425796 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.817611835 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.820113579 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.816369175 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.819127769 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.822642283 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.825591652 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.817538954 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.818833886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830043557 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.843104537 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.822973762 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.82467289 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819276928 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.820164116 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.820791288 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.833101111 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817394207 seconds)
  done (took 91.078347569 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.815985913 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.818714249 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.815336501 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.819995439 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.821524295 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.816604721 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.819142466 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.82037493 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.817471343 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.81697214 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.817783226 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.817844601 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817542669 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.820636672 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.820561118 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816736515 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816952717 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818063556 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.816933998 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.817936225 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.817127617 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821050671 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820930353 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.817694834 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.820145941 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818822858 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817150285 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.820791606 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.818135861 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.818853414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.821355612 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.820775823 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.822535552 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.819855105 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.817850078 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.820811472 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.821380863 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.820777245 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822148052 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.820409516 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.82259337 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822456735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.821508758 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.822483584 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.81943398 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.81982263 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819168751 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.820316039 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.819521704 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821852996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.823042506 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819890747 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82218253 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81833333 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82254717 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.823117654 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.820443202 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819374057 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.82327127 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.820643863 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.820595981 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822441432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.820339268 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.822612282 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.822023151 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.82075825 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.821330144 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.82325412 seconds)
  done (took 125.498439016 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828907246 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.828727575 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829842237 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829378572 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828607148 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.829310351 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.82967839 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.828545036 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829652414 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82917131 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828742592 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.823605786 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.829938939 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825275505 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830619372 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.829322539 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829854884 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830580039 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830817338 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830419395 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.829361321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830191128 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829273752 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829429217 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831462289 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.829880553 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.830129429 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829476313 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831224836 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830890497 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830233782 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.830241316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831404962 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.831752773 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.831200745 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.832098216 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831320193 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832574002 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.830504356 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.830316193 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832087513 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831414611 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831508318 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.83094274 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830536361 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831672959 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831430528 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.833014641 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825921679 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833204339 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.832292664 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832971798 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83111331 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830684391 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.832686395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.82591212 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831919081 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.831887932 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832476864 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833898575 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833030524 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.827624993 seconds)
  done (took 115.227508518 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826217946 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.826981036 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.82403479 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.823274225 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827014712 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.82487463 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.827289847 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.826053877 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.826480432 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.82738868 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828134201 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824057355 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825557422 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828723815 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825130656 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826780292 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824390474 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82407872 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828296283 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8257213 seconds)
  done (took 38.267679825 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.824764342 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82751236 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824766349 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825321431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.82694806 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824741957 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828317068 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827299967 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824298495 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828879972 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827901706 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828918642 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824641656 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825282526 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827590123 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825272127 seconds)
  done (took 30.97036399 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.825861089 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830755457 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.833395496 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.834329829 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.824563742 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.825678738 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.829098478 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.825743468 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.826175798 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.82952007 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828941433 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.831114588 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828678259 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.835785413 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.825972679 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.83047267 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.826908031 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.826598656 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.829331167 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.834404732 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.828564446 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826628326 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.829538977 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.829041957 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.82740702 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.827523309 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.826066907 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.828546466 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.826933809 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.830153043 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.827128681 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.827740836 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.828041233 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.828089431 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.83606912 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.82779374 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832823595 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.829503723 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.830228645 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.830487294 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.830839645 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.828390578 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.829826386 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.832032278 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.827451014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.831694505 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.827455768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.82860286 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.828952014 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.829415417 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.831522714 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836771495 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.830687077 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.831988339 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.832129352 seconds)
  done (took 102.369558992 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831556933 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83070547 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.829168876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831106257 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831949161 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.830458891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.830509054 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828982688 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828853864 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.832806397 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83065359 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832432834 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829350068 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833210283 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831287104 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833109573 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.829289686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829990567 seconds)
  done (took 34.707884742 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830330921 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83058787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.833012669 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.829596277 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.8297404 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.832703536 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830641888 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.834260279 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833887527 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.83074312 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830066934 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835259345 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833984705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.834727243 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.832116397 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831771603 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833420197 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833832527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.83147181 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83062364 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833793048 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833762257 seconds)
  done (took 42.063438878 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834107172 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.835068364 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.850269164 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.858645085 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.85631777 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.875919804 seconds)
  done (took 12.863546773 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831063687 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834175769 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830021397 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834618078 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834778051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831811765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831805526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832597801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8347688 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831937254 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832567657 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83440462 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834116066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83142777 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833878328 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839229863 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830856078 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829850833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831055764 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833381725 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829094369 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835179961 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830949251 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830456801 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831748218 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830527528 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835305691 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831508578 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832247309 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834254233 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83443215 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832862195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835520891 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83161266 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834524624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834902634 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832530975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836251165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831831584 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827592923 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832524686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832620053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831670982 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829917193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831800504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828967113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827993991 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828458841 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831934374 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831976883 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831826687 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828842454 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831505615 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831689665 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834435518 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831572928 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829052725 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827348463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831824926 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831911669 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828622991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828725231 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82461521 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828261774 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831471259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823663549 seconds)
  done (took 122.650106616 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819572241 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.820886228 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819515352 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8216222 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817830949 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816848364 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819250693 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819026487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818985789 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823112309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821275208 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819900971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820078483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819552704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820738919 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819545706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819441814 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819690602 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819973237 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821034866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820246047 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819913931 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819417252 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81989983 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819840745 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824155493 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819843961 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818335555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82011314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819852216 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821658329 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820406521 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821110192 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81996769 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821175372 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819402274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820177467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819681412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8212999 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823444777 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818653836 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824490054 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821265572 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821457894 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821053957 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819490589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819092358 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82457535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82244443 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821077934 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822608745 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822109657 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82132406 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822238111 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820623325 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821282273 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822081346 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821753382 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823906686 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823305392 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82221018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822561617 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825200848 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821174018 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82317311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821844861 seconds)
  done (took 121.923738139 seconds)
done (took 2505.912379655 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.861264366 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.845480474 seconds)
  done (took 15.448717476 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.983873888 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.937586337 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.821640416 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.825363314 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.81821661 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.846935555 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.834340563 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.819250916 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.824332339 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.824923674 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.822518344 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.011928404 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.821752207 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.814205404 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.822362348 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.910676969 seconds)
  done (took 51.489429633 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.822535188 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.82323837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.833322141 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.826261661 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.822099224 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.833159187 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.856392422 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.825060537 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.855714674 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.831651054 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.891210887 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.829041955 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.820167548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.870139288 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.831579774 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.835080162 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.914702771 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.894957641 seconds)
  done (took 34.955703032 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.901827068 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.821307036 seconds)
  done (took 10.46987721 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.852224566 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.826549359 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.903362821 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.829323376 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.816288619 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.821898397 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.81658967 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.828059127 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.813494394 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.851184763 seconds)
  done (took 70.101379941 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.827342441 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.820571787 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.819624179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.818546395 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.811548531 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.811270319 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.815435859 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.809497855 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.48982255 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.854279971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.820246069 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.823674889 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.818093701 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.821679238 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.814262278 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.842383706 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.910988288 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.815142784 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.81551173 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.82316175 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.81637621 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.869808412 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.830499156 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.817910176 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.848884658 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.48767273 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.823607127 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.820670705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.912060334 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.812182003 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.810741359 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.811101178 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.812293555 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.199026946 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.114558424 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.80709192 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.822079564 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.817572713 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.804007663 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.903315477 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.809301235 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.813643984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.448851747 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.093957148 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.910923213 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.850596254 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.111956429 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.826410238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.81095315 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83734007 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.816146876 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.809663087 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.822625049 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.295338389 seconds)
  done (took 129.127620239 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.806185848 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.155269489 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97841478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802177251 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091847701 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017547685 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806141349 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855362323 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807619008 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.035783679 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063012785 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912809582 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799847263 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.806434341 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.797295027 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796547027 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964477552 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.874638861 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801029595 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.794039007 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832653795 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051705326 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.929944846 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.795566894 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.828950927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.016658375 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.927140931 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.911864141 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.59507362 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.796045561 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870145885 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.803197332 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.79988578 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795167578 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959525311 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.897177628 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887244452 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.798332625 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79803332 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.796264249 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.473779726 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00385308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898140871 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940748334 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.997230407 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009771643 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.584457762 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.794893355 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.543102417 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964586009 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.032273824 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.036534763 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.919690197 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.797741184 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.125371993 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.795697555 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.798584772 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046854578 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947394237 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898971859 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793383834 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.795345598 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794196234 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045115769 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.795142021 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.891573023 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.792690363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.789050383 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.896038426 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.89980728 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.938924368 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010139218 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.826789384 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.752948776 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.329637497 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.049353161 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.862241712 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049228479 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.794091907 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.791072334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.876724233 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.646373761 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.056704943 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043965859 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049488396 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830580344 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.522970248 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.792845561 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.026928715 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.019385144 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.045869709 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004505904 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.036951564 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.128799929 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.793243056 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.793807006 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.017162265 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932597529 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.79544875 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.144780247 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0422456 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.361807589 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.81867355 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107204409 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927533632 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.794196153 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.445561878 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.794597147 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.023238693 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.8393602 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.796556126 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798195497 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.016817901 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.769720706 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797368797 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.450733704 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.8606426 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.796186699 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033898623 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.798008395 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061526125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797214735 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042361779 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.38183821 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.830350615 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.978474846 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.004762189 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.795282971 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04793483 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.042156296 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.912762588 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.021060031 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.407034443 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.794459239 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091675186 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.795550912 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.800184529 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.972081817 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.799171703 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946499798 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.794096382 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085513731 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820816387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038590517 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794657387 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.056683387 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83069588 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849029913 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.79719749 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926408092 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.796983008 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.729219086 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961046162 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800125764 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802179619 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.361528768 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.799275627 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957304696 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033183005 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819915625 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872544585 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47205142 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.80192812 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889959273 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.824268326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.194728377 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.797054059 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.055896876 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.796179132 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.79940482 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.797593208 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046350679 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.984556974 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.800340619 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795770804 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.700710642 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.797910114 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.799075284 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.984902364 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.108219336 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.795929541 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007611959 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79812714 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931997853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.799941779 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.879458145 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.138601436 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.799353871 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.798344317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.800201526 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.79976727 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.800337835 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016717481 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.827991918 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.336260558 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.941492067 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071126255 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.114882666 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.053463313 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.846453764 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.799700697 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062244011 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.798808088 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.864986104 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.798320832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.829358511 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035406048 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800750278 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06696609 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079303132 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.841731133 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852461822 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.802647848 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.801077829 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.800099101 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954287546 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887404398 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.799920209 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.801461447 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918747674 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926199611 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.014851444 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.799002738 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.840147004 seconds)
  done (took 886.767243255 seconds)
done (took 1200.10409308 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.80099469 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.800833141 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.785283573 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.799300866 seconds)
  done (took 28.916338143 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.807481951 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.804419629 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.814677744 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.805477218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.808126477 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.80434621 seconds)
  done (took 12.571672168 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.85193346 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.799938168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.798422097 seconds)
  done (took 21.176656989 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.875788148 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.18502999 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.926559774 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.22282273 seconds)
  done (took 9.938448484 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.815169097 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.811722347 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.810771443 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.807388057 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.809132926 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.808376 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.80754828 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.807078995 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.80772191 seconds)
  done (took 18.01438949 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.215011411 seconds)
done (took 96.563677588 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.159585987 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.770751429 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.831668347 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.834015319 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.148378959 seconds)
    (6/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.212857513 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.822669697 seconds)
    (8/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.905907836 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.95804252 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.227044674 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.012769446 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853399866 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.136217188 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.837486007 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.828536586 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.060697309 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.810630667 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.423150302 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.207813303 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.947825401 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.706750632 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.912336275 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.912999168 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.795404037 seconds)
    (25/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.372000013 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.13656026 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.820463465 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.795772994 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.286304286 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.931638878 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.245236034 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.153197278 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.960945282 seconds)
    (34/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.201799384 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.388351955 seconds)
    (36/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.909453633 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.14200803 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.95807332 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.912306336 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.899560354 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.937036874 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.18944183 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.203086282 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.381752023 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.923360954 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.862020579 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.994862202 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.513767686 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.808601987 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.840056838 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.264614481 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.967552363 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.894199364 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.087384581 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.914683548 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.886090766 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.110825063 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.066454852 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.813781091 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.744972914 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.814899779 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.437743639 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.729023377 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.910512933 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.870620909 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.897503247 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.226994279 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.798412851 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.107048958 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.215734516 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.117826019 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.98073983 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.979875952 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.798392073 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.620761807 seconds)
    (76/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.843185205 seconds)
    (77/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.981676342 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.431754893 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.900118283 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.058795804 seconds)
    (81/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.918988213 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.883510683 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.461996706 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.634016735 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.998155811 seconds)
    (86/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.254577731 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.172205814 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.055952825 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.5152601 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.76023867 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.966761594 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.852729618 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.361635217 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.947966923 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.087038124 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.193299457 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.952024371 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.121540855 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.800000007 seconds)
    (100/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.900723093 seconds)
    (101/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.89786977 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.966824499 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.12781066 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.047042628 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.898378152 seconds)
    (106/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.931975629 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.055421161 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.068203974 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.963443279 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.834220668 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.879532143 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.994646516 seconds)
    (113/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.802624448 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.861873488 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.115694898 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.820170946 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.027290032 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.073515718 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.873315399 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.832267432 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.157629197 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.821391706 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.783308288 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.825166699 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.895977716 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.854009554 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.086861932 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.338541462 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.851764053 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.90966156 seconds)
    (131/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.831251507 seconds)
    (132/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.90485361 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.039418391 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.840747531 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.724155161 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.072505634 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.937182447 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.997769839 seconds)
    (139/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.819718737 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.135454621 seconds)
    (141/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.919275972 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.071788956 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.054776824 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335542314 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.92907147 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.298639527 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.924368016 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.315121702 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.808576872 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.007587622 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.058419191 seconds)
    (152/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.849163636 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.81897234 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.052382911 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.846185024 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.806871162 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.270240353 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.084443125 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.338267915 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.82183309 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.339327195 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.820083109 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.842607019 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.805204826 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.573230353 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.845547114 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.040522067 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.158524423 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.806252982 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.822943868 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.845167529 seconds)
    (172/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.946211733 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.793346511 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.914131533 seconds)
    (175/309) benchmarking ("sort", Float32, false)...
    done (took 5.521421068 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.932695616 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.824376118 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.806203833 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.737715726 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.033590571 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.449783271 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.832995484 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.131747045 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.852585247 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51741246 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.073854208 seconds)
    (187/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.82636942 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.065544012 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.911010029 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.82476666 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.540682435 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.170061752 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.979558226 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.853543292 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.88500199 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.820355299 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.472959912 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.82654991 seconds)
    (199/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.894557406 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.006079678 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.813306799 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.987804645 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.927404797 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.852898314 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.259879739 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.071069414 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.810104551 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.930358024 seconds)
    (209/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.09992407 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.848089307 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.02254303 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.821978926 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.003430044 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.887797715 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.179417331 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.081652927 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855567934 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.886690019 seconds)
    (219/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.825023552 seconds)
    (220/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.987682795 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.915039106 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.212231975 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.911473827 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.638277625 seconds)
    (225/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.90065395 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.056814901 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.933747195 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.927756608 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.067663926 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.938962252 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.163824321 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.471982178 seconds)
    (233/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.292773123 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.950463925 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.123357676 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.844009512 seconds)
    (237/309) benchmarking ("sort", Float64, false)...
    done (took 5.577892419 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.827378191 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.941143714 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.852349064 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.825628738 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.927147848 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.94124999 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.811401292 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.084953579 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.161353474 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.830367625 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64216729 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.056048208 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.686968921 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.175260966 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.208598152 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.668952576 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.828681925 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.82355314 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.82682779 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.913153895 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.926495046 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.809203284 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.87280603 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.84025932 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.923705688 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.822127853 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.121243249 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.939388562 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.129602583 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.921852241 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.890437473 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.994187493 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.13040135 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.125466801 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.016348391 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.22407974 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.920852555 seconds)
    (275/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.863293202 seconds)
    (276/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.393047363 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.977312942 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.858681698 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.847236963 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.841668642 seconds)
    (281/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.173424208 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.786781456 seconds)
    (283/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.067158364 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.125054429 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.006260365 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.830580735 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.403443342 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.912522723 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.934867365 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.261157308 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.013470117 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.866628494 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.865205365 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.909792856 seconds)
    (295/309) benchmarking ("sort", BigInt, false)...
    done (took 6.828116311 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.968987615 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.51996869 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.843992051 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.945969695 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.272742875 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.161073865 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.811900062 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.410835561 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.116100394 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 4.803312981 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.812905218 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.91653899 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.894729331 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.129638872 seconds)
  done (took 992.112135766 seconds)
done (took 994.11812562 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.861755388 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855638983 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.841078352 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.859139704 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9507511 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864806464 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.847788269 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.840914922 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.884839077 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.888330579 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.838437033 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.862883203 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.843447929 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838101091 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.83811455 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851173415 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.154493171 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.869541233 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.858917085 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.847200993 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.856427968 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.836571702 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.888224787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.866780306 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.84397254 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.839731965 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.841720836 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.857636334 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.951013334 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.842805307 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.83914618 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.850924994 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.154174669 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.864344307 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.833269352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.857518986 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.849986642 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.847440346 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.841736966 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.871696912 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.252035936 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.877958577 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.841525181 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.840450736 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.839773645 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.842573431 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.838473319 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.843881479 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85040884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856164175 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.248244233 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.894011494 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.841663401 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.839204863 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.851444765 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.840402243 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.843154106 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855291352 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.86033379 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855252808 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.153133633 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.874419913 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.841860403 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.856089914 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.84696841 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.292293269 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.873821517 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.844379753 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.249650654 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.881482361 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.288988445 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.889332899 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.840694472 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.857503805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.872313132 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.156459304 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.864969556 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.840809588 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.848721314 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.839691932 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.851874856 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856412411 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.846716123 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.840360269 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855216812 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.870895789 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.856786221 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.843501542 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.84911897 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862157734 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.849345979 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.852909417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.846487907 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.836521594 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.850794003 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.845297456 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.846115194 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.847623752 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.846225485 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.852440234 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.247348642 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897621016 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.841015864 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.840205307 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.842656748 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.857465274 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.248069708 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.881091277 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.864731572 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.891603126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.846048418 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.150050626 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.875252689 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857621613 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.851248637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.845973429 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.838192446 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.150528222 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.278198997 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.894506717 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.846453377 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.842874759 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860327995 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.845749718 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.839525072 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.159496586 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.870175302 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857304179 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.967292416 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.855027349 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.875770166 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.842866289 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.846437722 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.876254553 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861011402 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.878853639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.847840482 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860953903 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.859540236 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.843079248 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.856577391 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.854592914 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.848491587 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.85048038 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.8397902 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.874485215 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85731702 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857093471 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.865219323 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.966478641 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.842775227 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.153925984 seconds)
done (took 289.736241345 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.916979912 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.843398785 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.938585484 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.842633686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.923884407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.927041566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.839359306 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.837343087 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.839289971 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.215372135 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.841895081 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.840034587 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.842650878 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.838680793 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.925544733 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.841853757 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.840420799 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.17862245 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.849688529 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.916071081 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.840039601 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.840222758 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.841738717 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.217795213 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.842022256 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.835965754 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.915071434 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.843137047 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.181317663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.839354086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.839352468 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.182236312 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.934821437 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.86208732 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.855869377 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.852036414 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.93047633 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.844932341 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.926649512 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.925620784 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.941403074 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.890769707 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.83949394 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.84566831 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.844851258 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.853170387 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.837921037 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.870771886 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.843777099 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.842731453 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.178201034 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.854182985 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.840856571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.843823464 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.840603025 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.880008334 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.842497864 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.850589649 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.936160228 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.853757121 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.908142143 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.218898499 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.217865578 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.844647024 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.84169639 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.841861401 seconds)
  done (took 182.555628653 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.911817284 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.918964389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.910416262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.848642453 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.892870532 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.912660769 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.844911084 seconds)
  done (took 15.005679055 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.851291047 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.846621244 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.905881719 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904613117 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.851716683 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.993798474 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846134279 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.861684153 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.843795881 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.910664583 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.846938805 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847075007 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.850596194 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.847169379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.903411823 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.858129092 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.965445961 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.84605207 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.852220071 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.997796098 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842743202 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.857725731 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.907767519 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.859070879 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.848743305 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.853411046 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.444074 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.853378484 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84370984 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.84781239 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845196318 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.889640577 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849211665 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.843735357 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848625361 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.959755482 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.852734702 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843638908 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.846626635 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.844180882 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.846702996 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.847414149 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.851447448 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.844874657 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.84630665 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.870091433 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.845611871 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.848949039 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.847919159 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848752706 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.908579668 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.847740503 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.845875343 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.848337351 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.917578283 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855601439 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.852424021 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.843616546 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850276582 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844713542 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.000311234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906056223 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.846790882 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.907286482 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848753012 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.85039878 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.846897154 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.846956954 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946550949 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850978668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.90556819 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.845008275 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.032983606 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.872762532 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.853405106 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.852424598 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.850511812 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854493708 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.842313201 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.854282395 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.847468043 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.851414736 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.86088576 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846184112 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846434035 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962871989 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.957275466 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.852531171 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.864146243 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.857204105 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.846989347 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.914723461 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.848188881 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.850087049 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916095851 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.96950912 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.91262227 seconds)
  done (took 203.912305383 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.857998548 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.857521298 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.852376287 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.866517505 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.849707579 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.850247302 seconds)
  done (took 12.904365558 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.853157621 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.8528623 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.849949668 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.849584699 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.8631 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.851468862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.858256602 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852754892 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.861796822 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.854770811 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.854702824 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.850176779 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.851085908 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.854482202 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.856605597 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.854701041 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.855681247 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.846668688 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.849411454 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855226599 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.005417008 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.855917144 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856138654 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.851667827 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857338798 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.859066832 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860941496 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.852575054 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853116528 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.856977883 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.863359556 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.852490108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.852851717 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.858866235 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.862797561 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.85231157 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860122868 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.852638395 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84770768 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.851485853 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.853748509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857820443 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.851487083 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.854300397 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.854484544 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.857086333 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.861094312 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.862169249 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.857231259 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.854084117 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.853620861 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.852170055 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.856188431 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.85321992 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.856124367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858542778 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.858009063 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.859423782 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.85976172 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.853682146 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.853822366 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.852102893 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.85601615 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.864261627 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.860371625 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.854805011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.855071265 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.864554523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85792956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.852893806 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.855307011 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.851016098 seconds)
  done (took 136.516221952 seconds)
done (took 552.671499508 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.995304214 seconds)
  done (took 8.766795739 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.970298131 seconds)
  done (took 8.785689177 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.269356813 seconds)
  done (took 10.049945334 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.862637455 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.892271888 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.854813353 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.854742037 seconds)
  done (took 29.261517872 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.96414051 seconds)
  done (took 8.738356787 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.871383079 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.844367852 seconds)
  done (took 15.522147364 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.962981162 seconds)
  done (took 8.73991148 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.982195618 seconds)
  done (took 8.787199082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.870183207 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.87852443 seconds)
  done (took 15.541853142 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.836184891 seconds)
  done (took 8.615249799 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.502987755 seconds)
  done (took 11.380417814 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.871615576 seconds)
  done (took 8.757338069 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.875987545 seconds)
  done (took 8.656407797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.8998622 seconds)
  done (took 8.678582002 seconds)
done (took 162.054572422 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.855059144 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.851188409 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.850500725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.85078399 seconds)
  done (took 29.18366631 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.893678311 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.893306773 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.895843212 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.903686506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.899199942 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.892442996 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.885343428 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.88421225 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.902922486 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.900543889 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.895013543 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.895268308 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.893352437 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.884589399 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.896016401 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.900282104 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.905776453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.896323638 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.887400897 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.897456499 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.865253994 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.90274208 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.897405156 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.860920285 seconds)
  done (took 47.209256855 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.061773254 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.93337564 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.01365833 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.912828246 seconds)
  done (took 9.702056488 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.913520157 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.912764603 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.925930621 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.964684196 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.988094386 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.923864197 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.887031043 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.881064564 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.86910024 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.915076774 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.989940501 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.91195229 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.003818834 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.862022154 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.047419715 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.862041153 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.865000948 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.913297473 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.965426077 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.988932314 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.863450587 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.914794721 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.916563544 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.908566966 seconds)
  done (took 47.974234489 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.860273878 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.86874551 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.868202796 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.861798198 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.8597332 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.862788969 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.867935809 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.866880102 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.884342784 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.862443697 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.861715956 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.861398399 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.861438998 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.86182965 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.861759824 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.874210332 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.87477575 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.861421843 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.866832604 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.867966955 seconds)
  done (took 39.098552078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.856184734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.709996862 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.208114038 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.110524883 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.857346182 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.858515217 seconds)
  done (took 31.38154139 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.877219072 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.868169619 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.863561951 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920140318 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.999745747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.864834239 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.863170871 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.87619185 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910081164 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.924590858 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.880245189 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.890044806 seconds)
  done (took 24.520625873 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.85957225 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.873389995 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.85798975 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.886631797 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876168021 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.869592718 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.870796753 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.858023009 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.87499784 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.879761907 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.86802417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875151935 seconds)
  done (took 44.237835347 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947144384 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.749020976 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.910673162 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586746436 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393674909 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067380633 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384646303 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199875468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.862113602 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13287472 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905386267 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108288777 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11600938 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858343031 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.943654714 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.318204083 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163775665 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095773013 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886227942 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620979903 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983950147 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386436597 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.689671337 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992152905 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070952927 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993704605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.12134555 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.812436154 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999878429 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895077138 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871657238 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85995027 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136071653 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251508574 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972076732 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870190206 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.522263602 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.576890677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.855587406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.587184628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.751100269 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.995253572 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8692943 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861679146 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795176695 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243682693 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304950464 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.865371004 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.563561027 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863175245 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871519914 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950772548 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.865107115 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.678331673 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813315373 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.13747518 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.859726599 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869381244 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431269915 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966519869 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357953931 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.895344388 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.955996991 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640473396 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342170529 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.016931817 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.865177492 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864138627 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796281612 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.563951297 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991770549 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005940033 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.878170188 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515784301 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176291363 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.940663263 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947030195 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157487991 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.523871752 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.896555624 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091858075 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.820816757 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798032511 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.72489411 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798152867 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144540537 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899095778 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.499169982 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907304106 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201859624 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871717128 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884942375 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871139435 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087482449 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.748905695 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864394887 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.658303252 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157656787 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882465754 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204160679 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796961816 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.865407757 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119468361 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.074463349 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.977677635 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417846519 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03707623 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86158575 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.949288989 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.652655727 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975745619 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.150930174 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929968848 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970213493 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999430483 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815075629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183881379 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891937654 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.034931059 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.913578815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13679553 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.183276595 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.118490777 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948273993 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870581244 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865171123 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603704935 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.495138475 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.088828049 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.868776024 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.24211139 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972869307 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.871541632 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802579802 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.52291098 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897228209 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.982829988 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091328211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.694690695 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241296674 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802413409 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011514803 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.980909212 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.088009035 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.527121245 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.951560104 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127667857 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.232625513 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.075643374 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978215165 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883288834 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960826192 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888339265 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.164785403 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222878506 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.869540337 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.870458063 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.647509345 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.934307364 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87083455 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.873717283 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699349771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155118609 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896049772 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87461699 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.758326617 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.880226913 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937221777 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87378689 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876580557 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.371376084 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61956879 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.875617265 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.609538919 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117793318 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877412461 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.650183947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065552537 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.952240132 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154539653 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933357566 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.802737476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.571839434 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.569830245 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87002143 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803828326 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869057141 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880297203 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880100748 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.069094944 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160399409 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915070607 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.647492766 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.988856772 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877933926 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.874920918 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869007675 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.361499421 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987627008 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373025886 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9807905 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007820736 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.884669678 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804347547 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.87279193 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874244636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.8713502 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.830250204 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923457338 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.582362374 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332574263 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129508771 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.523216039 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889433756 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.67615449 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.006824501 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.895511265 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.680432377 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830989339 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.956749925 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929545187 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.88323755 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.653633907 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.651828196 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43986919 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195661516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192600081 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325386052 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.234251447 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.195628294 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21248586 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10665646 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402773727 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931639219 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216449764 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818048768 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963204122 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.537447286 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235199942 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889700661 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102484682 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273767394 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.746316523 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042508599 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085350514 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906437464 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.656982761 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899676472 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.074287193 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028839885 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.657683058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113181975 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214916107 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.681514238 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993245853 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.874326369 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579427119 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962824035 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.584999965 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.232797264 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267277318 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.023686449 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382911994 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880894573 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.319850239 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250717081 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.06705797 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.067171357 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810965071 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.886349072 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.885949484 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.876984264 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.860430732 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.817267428 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.172375018 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884374259 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10877823 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.017762332 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240037165 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.78636962 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.882209871 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875330852 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191765273 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.628571396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116273005 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.194530432 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.467931285 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88523195 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809040931 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811018942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.579099137 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874547875 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850181604 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104143151 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.988134721 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828429794 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254919626 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185319249 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129295232 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.890269436 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159874911 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159907837 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619066247 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901474251 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.975791706 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675788284 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.583866385 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.09962582 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115014494 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685623195 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1050082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.93874323 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.84482572 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.875632893 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091560254 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.102125753 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911629539 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132794696 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.598993336 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.890679261 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236381272 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93987069 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.929212396 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.09951541 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.974138258 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887465308 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95759469 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887539537 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.88933736 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888165179 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926736414 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929198019 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.020932492 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.891474567 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969625053 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.994093822 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.482852161 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.890929528 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16680581 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262682967 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218444372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943982107 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878318932 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885079095 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812413421 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015211284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.324573997 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152313757 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009364798 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.01664409 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898511102 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699960514 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.156869663 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186594327 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152714035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.773372882 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877464129 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986256897 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.104041294 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888378011 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.090220468 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113680622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206333524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353901732 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.001532634 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323465515 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150570226 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.248935851 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88319775 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470205593 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.888295145 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.628840817 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.926479988 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929189819 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170523791 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889856638 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267195747 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897703092 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.080498292 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.396101794 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.668185267 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245977422 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.882209629 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943386055 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165405463 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.285545916 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198602752 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94545224 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889429326 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.578402636 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016939595 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.859043392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.153327078 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879263809 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090960909 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.592074114 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889211754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178400462 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194925304 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.876086993 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.887965718 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941217814 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.892734247 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105186264 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161248915 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134221474 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891115574 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885655268 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.695301687 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170405831 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944259118 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813903456 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.880442462 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980571752 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131472976 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901775057 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.397960622 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.583149851 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188458697 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.799486118 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903831758 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278549709 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327322074 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226301258 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.430300574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120946353 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.445322477 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.73088841 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251223012 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.886249763 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27341868 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25683908 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.885000556 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371496845 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991616712 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.160491116 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206689062 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.890554816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634454228 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.933762115 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104599125 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485761986 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821881597 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885892899 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.942129998 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882310117 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016044255 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892209383 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.886905576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740010813 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.715919987 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376916332 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.885157057 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.87705229 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.678452626 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428626595 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987812382 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040110175 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885383639 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.597068265 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.179942247 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138918839 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384510346 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.948221752 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.886820016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884542609 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814437818 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082347187 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.079944164 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186942117 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.219105349 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.98949768 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888644782 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.09999534 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093806433 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.863956074 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046119012 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296552759 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992196625 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.803273459 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.599004597 seconds)
  done (took 1688.896813088 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.910203207 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.904772875 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.891148687 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934467283 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.909857824 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900361968 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.904192594 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.887842516 seconds)
  done (took 57.053523946 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.884361324 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.104810609 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.893989335 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887183426 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.91519472 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.889824164 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.093212803 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.895620394 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.908330862 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.896405807 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.885160281 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.89316505 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.264250854 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.907680425 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.888272942 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.877095833 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.338864248 seconds)
  done (took 75.245482673 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.947147599 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.92101862 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.926304254 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.906659295 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.896002976 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.898904885 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.981580255 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.937801782 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.888455919 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.067123686 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.227940796 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.903085541 seconds)
  done (took 90.314703368 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.904210531 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.89690003 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.896652488 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.895643138 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.894999713 seconds)
  done (took 11.310944234 seconds)
done (took 2197.91928924 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.155924825 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.115785752 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.1340875 seconds)
  done (took 6.062663823 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.039330881 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085375705 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.20861559 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.214543496 seconds)
  done (took 10.365610659 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.180067266 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.266269978 seconds)
  done (took 6.259041947 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.221609633 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.917136099 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.271764779 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.887908005 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.89102399 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.890441713 seconds)
  done (took 22.486926453 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.892791953 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.899040853 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.896921814 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.897474273 seconds)
  done (took 9.40039064 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.87509863 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.616316071 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.87427554 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.894166484 seconds)
  done (took 21.07316341 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.646692893 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.294192862 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.642090075 seconds)
  done (took 9.39948705 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.373072562 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.096099424 seconds)
  done (took 9.283634371 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.1478767 seconds)
  done (took 3.961391688 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.923023268 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.165210955 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.414349113 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.414180287 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.507857578 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.727941695 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.2229628 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.137437887 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.343430788 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.360809105 seconds)
  done (took 25.031526919 seconds)
done (took 138.702028886 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.319853911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.916792223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.095417958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.256156053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.129882041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095704917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.111903396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.248992223 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.782518272 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.772127827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.25396975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.130982196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.056086903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.912907427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.065911781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91416673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.129403246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.345756325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.979825531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.180321657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.124302814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.905414254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.095232028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.916225675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.130100372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.04783732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.453213565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.914402427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.121663195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.457837328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.049627525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.32501629 seconds)
  done (took 169.055899365 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.896179647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893158751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.894103526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.894911146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.195958362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.896156125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.892309706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892856295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.961291372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.933269198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.894602998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.186255067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.89335748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894402333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897503927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.895939524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.099986879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.896045893 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.894336601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.894448548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.894498325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.03517941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.895331725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.046443409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.054913236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.894759005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.896706626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.896811977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.894737666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.893540752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.896230393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894627772 seconds)
  done (took 207.811828149 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.896464597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896384124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.895831796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.897628082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.897229138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.897202512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895325548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.897552177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.391289584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393907356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.898990781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.900475995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.899392121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.899140907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.900552993 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.896409442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.898757087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899259536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.899774512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899197244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.90271187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.528564298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.899565228 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.561270647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.899953165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905153502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.899624892 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908544917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.910406163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.911341692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915340412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.900599228 seconds)
  done (took 220.915510425 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.093666455 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.909054593 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.909158494 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.909752023 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.910197036 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.910301819 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.921489127 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.093909536 seconds)
  done (took 19.505111954 seconds)
done (took 619.11302036 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.399244951 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.238714646 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.088466253 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.932714996 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.178521988 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.966727356 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.93245168 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.997116828 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.66015727 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.000049495 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.622647843 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.950779048 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714671204 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.95989073 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.05411169 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.983821979 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.522187753 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.614056437 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.108103925 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.987711743 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.100059582 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.86803796 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.00915877 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.699621584 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.730771824 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.926866987 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.100574657 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.527352749 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.94003281 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.093234373 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.71512699 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.342331089 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.944479395 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.92746064 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.981398098 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.963799526 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.276568713 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.941424334 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.049102443 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.675420306 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.000376053 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.54288431 seconds)
  done (took 105.094782472 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.89896153 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.89902455 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.898127123 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.89949064 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.899652325 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.899329208 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.897090021 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.898897641 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.899372643 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.897339622 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.899829298 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.90076085 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.898845157 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.899313058 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.900073676 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.898234819 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.897999697 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.90269682 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.898721677 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.898972397 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.900090016 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.900487608 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.92048498 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.899575422 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.897885249 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.899131946 seconds)
  done (took 51.239462242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.912702477 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.079496988 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.153738225 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.931703312 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.913628407 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.917444374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.932430913 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.914955274 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.916024111 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.915991412 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.009071205 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.914599073 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.932132318 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16081665 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.928572618 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.911912463 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.91132584 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.912711761 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.089350443 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927352818 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.932745326 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.915141786 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.93299852 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.933034756 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.914220321 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.912490149 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.916446058 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.375494028 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.930549119 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.007372213 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.957493313 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.933487534 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.351064401 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.169387465 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.967610406 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.916293764 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.913018676 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.012289629 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.924550245 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.912174657 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.930669584 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.916691237 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.150647949 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.431198126 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.924432232 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.910472136 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.38358069 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.017863372 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.957221487 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924220428 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.154179203 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.929427593 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.91110503 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.914118766 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.946302017 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.915855381 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.907652634 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.263278985 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.923027881 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.923747792 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.908207046 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.905036976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.086502078 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.915968955 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.069713205 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.911074644 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913887867 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.905087123 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147586492 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.916111691 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.411796313 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.911627022 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.899284455 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.999752996 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.070427858 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401500543 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.913069471 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.078147432 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.355617954 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.923880286 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.904234176 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350882653 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.935250487 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.906168738 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.89785289 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.897853847 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.897037668 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.940847565 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.921509337 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.346572789 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.418461444 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.270303915 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.934857233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.914847999 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.896000558 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.247637448 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902534588 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903937365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.13152234 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.420551964 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.910707621 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.90237464 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.392880946 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.911423743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.918096707 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.905786003 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.140887842 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.915026791 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.93956855 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.898280305 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.904163309 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.896000874 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.917190918 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.899449701 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.896847147 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.385009435 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.013290247 seconds)
  done (took 236.713047198 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.893116519 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.891914077 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.891740738 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.892698674 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890325276 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.896557975 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.890752676 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.889576239 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.896839794 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.889373287 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.890695688 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.889937337 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.892530488 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.901329949 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.01641543 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.900387149 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.502067996 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.89252972 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.891701915 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.896261797 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.640005508 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.898087463 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.894246814 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.888956784 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.893673222 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.895368514 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.895332293 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.002963118 seconds)
  done (took 168.424592217 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.902661475 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.014599707 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.925905231 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.927383982 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.904273696 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.894811401 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.920720491 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.913854194 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.905534576 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.900352013 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.897988565 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.95977423 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.907425749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.001069367 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.932183642 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.930816587 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.002209605 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.903882986 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.90035762 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896047469 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.927625524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.893474095 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.962195568 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.025342228 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.914437976 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.019767172 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.903954392 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.899269657 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.900764475 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.017794338 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916412191 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.961042044 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.927022652 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.918626131 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.025744767 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.019000835 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.008919604 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927566641 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.905320209 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.89702238 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.90039024 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.89137756 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021218849 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.916983168 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.901068477 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.00892095 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.91710592 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.903309882 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.908014142 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.901347269 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.913401213 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.922109513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.970772115 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031067197 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.935506028 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.924298641 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.925963823 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.184845682 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913973815 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00123014 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.893329664 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018305347 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.920191847 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.888595289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.899885881 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.90735776 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.928671652 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.931823499 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005390963 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.910816774 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.001651701 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.937810537 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.907209047 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.902311521 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.90567867 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019179369 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.023304718 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.937359903 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.939872104 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.933244015 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.899497883 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.903066189 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.890291997 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.917632217 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.901641362 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.022686187 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.023780859 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910883602 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.903124848 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.902725828 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.904748541 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.927573706 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.033965074 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.935615598 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.000998842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972188662 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.977546436 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.918252515 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.915177562 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.90851281 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968905037 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.916232826 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.913925445 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.237022309 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975019193 seconds)
  done (took 205.921399098 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.383576655 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.960478891 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.961500466 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.23922077 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.330558596 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.763698716 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.950767012 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.952573695 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.98037982 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.140690224 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.026946482 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.969229858 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.93988495 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.925721443 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.952215547 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.976631532 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.96425486 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.292147516 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.077084249 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.021198126 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.937576153 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.231412345 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.272071069 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.344370984 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.989116601 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.283658074 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.624079453 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.094356977 seconds)
  done (took 62.415498725 seconds)
done (took 831.634453366 seconds)
SAVING RESULT...
DONE!
