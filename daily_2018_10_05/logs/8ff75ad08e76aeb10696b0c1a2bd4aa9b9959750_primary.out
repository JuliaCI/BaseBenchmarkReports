cset: moving following pidspec: 29646
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.251636344 seconds)
loading group "string"... done (took 0.468408743 seconds)
loading group "linalg"... done (took 7.647100273 seconds)
loading group "parallel"... done (took 0.173791483 seconds)
loading group "find"... done (took 1.173231325 seconds)
loading group "tuple"... done (took 2.116107838 seconds)
loading group "dates"... done (took 1.343658303 seconds)
loading group "micro"... done (took 0.248561634 seconds)
loading group "io"... done (took 0.663406342 seconds)
loading group "scalar"... done (took 42.071521667 seconds)
loading group "sparse"... done (took 13.177001528 seconds)
loading group "broadcast"... done (took 1.085751659 seconds)
loading group "union"... done (took 14.488231039 seconds)
loading group "simd"... done (took 5.181267646 seconds)
loading group "random"... done (took 10.207906868 seconds)
loading group "problem"... done (took 2.074687786 seconds)
loading group "array"... done (took 23.470425402 seconds)
loading group "misc"... done (took 1.5128385 seconds)
loading group "sort"... done (took 3.605625732 seconds)
loading group "collection"... done (took 19.428082755 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540090306 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141728718 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13621519 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.15150661 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208190492 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14309347 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158032304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113984276 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.949895021 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182353642 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155117297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.497287376 seconds)
done (took 5.108742137 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224405232 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094299142 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103383644 seconds)
  done (took 0.867947833 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078795384 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14623291 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094376474 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078978184 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095299517 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080511879 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094803563 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077484297 seconds)
  done (took 1.344933699 seconds)
done (took 3.202203901 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.71920692 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279563077 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203503864 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462809558 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176604004 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.23174586 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678944465 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343377288 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254449194 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100661799 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144060035 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38649881 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136992937 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678294565 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09112333 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123686863 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176997212 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448396467 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082323274 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109413943 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116788355 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140947612 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127815082 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090994517 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184418037 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083961956 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193854566 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107824479 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080597872 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289253701 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20117221 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683318901 seconds)
  done (took 10.84251873 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111052466 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133361616 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098286291 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139195622 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137703493 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101338434 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08599039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098125805 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124649963 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179257808 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117639228 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139878792 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097029715 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084327668 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117192248 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247421666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12230031 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107566384 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102919997 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091316984 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139839171 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115562724 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094555852 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112289545 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169594979 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212477061 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1264615 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129603989 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099709745 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11553555 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145464434 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145982572 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096625011 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082086964 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175777433 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126363599 seconds)
  done (took 5.215227627 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188505766 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12329164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172350758 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.157834941 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168212602 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145528471 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164513034 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114813647 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.229732391 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.115747873 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16546093 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144097508 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117150222 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080461683 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098562336 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096063676 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.626804111 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164346 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137799521 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09865828 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109262447 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102358064 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366018639 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089702684 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098710178 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082993822 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084657012 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165295817 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083590272 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.142311385 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121631627 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099700221 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116351541 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207927258 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128008071 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118299492 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096971312 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07874318 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19474992 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088713634 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096642869 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103439821 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135318943 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133724688 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096682233 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080945387 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207209002 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098730583 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116059621 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939880641 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183284024 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091725548 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097902138 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327055085 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098215817 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097344133 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078338855 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.2727305 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183517953 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099432476 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080621404 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097269633 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080946706 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380933793 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097527643 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.811903124 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085255058 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109448447 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084001508 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099775786 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105493442 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08950516 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117374911 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081269506 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100593339 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080703195 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098127435 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084361384 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110438126 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10230371 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080432522 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164403708 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080498191 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115755282 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128200853 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086622854 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097360039 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116754512 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096175209 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102885963 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08316423 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096950799 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117985081 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101318312 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10981679 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083233325 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142969969 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100385 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07786433 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.180951176 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081303228 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127946874 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099628803 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114069574 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112430019 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099117106 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084638906 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096058642 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077322243 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164712091 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082070151 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099057339 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081136782 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110729403 seconds)
  done (took 22.750846338 seconds)
done (took 39.486348884 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328458566 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105406716 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106519475 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106197813 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086572702 seconds)
  done (took 1.483020322 seconds)
done (took 2.207846192 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28417592 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174110856 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097248839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17492215 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078055552 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199020867 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164609191 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096895709 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209176841 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077759352 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188203306 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078140561 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096493661 seconds)
  done (took 2.667405832 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09592004 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118071285 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084088741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113980646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078331278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113230912 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094946839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120462032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112454685 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086884046 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095854416 seconds)
  done (took 1.833102829 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093922045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115431409 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084652501 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113094872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078567875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113013958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094492623 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118425065 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112122455 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087052199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095901536 seconds)
  done (took 1.825258143 seconds)
done (took 7.042425052 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091302161 seconds)
  done (took 0.808497242 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.014476281 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.019981203 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111310749 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151965086 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318679069 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.197652747 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.558892185 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12463022 seconds)
  done (took 15.411633449 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.116603733 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100705651 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.114941952 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083376725 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102760966 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084848185 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099616195 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098429636 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082645884 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10122729 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08659762 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102741525 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100884989 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085882386 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102513412 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085788605 seconds)
  done (took 2.331251502 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120611271 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1196896 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108718101 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111592953 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089839979 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108055109 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110304086 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090417079 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105376398 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106713179 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093639729 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109496429 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106080157 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081200207 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109007157 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110971811 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088747378 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108552628 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109278769 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09205692 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109798215 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098172174 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089429644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109932894 seconds)
  done (took 3.316224196 seconds)
done (took 22.589019045 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1614607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111423398 seconds)
  done (took 0.998003562 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095491072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116224661 seconds)
  done (took 0.941022252 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098990604 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095797161 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125587689 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113423342 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081983717 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100101889 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123106208 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083113497 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099887063 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081798111 seconds)
  done (took 1.737410286 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083033812 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110706777 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102508943 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097311322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107836554 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097569111 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090551126 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102386585 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112843814 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078660065 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105153042 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118311556 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087482631 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119573741 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10761941 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086982613 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105987551 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102038819 seconds)
  done (took 2.550370515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079931602 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097078966 seconds)
  done (took 0.910357025 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082143895 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095200775 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082903771 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10061876 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096478323 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078783404 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097231315 seconds)
  done (took 1.365897494 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480768328 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121551311 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.280475813 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086630703 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12446086 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.330672635 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100978192 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086983553 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107098 seconds)
  done (took 2.494541884 seconds)
done (took 11.728003298 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094576557 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118938627 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11485693 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.475395453 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110319109 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099847473 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.151058405 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249569112 seconds)
done (took 2.154020385 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149878937 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325284651 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116159247 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069296465 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098072813 seconds)
  done (took 1.347018392 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079885445 seconds)
    (2/2) benchmarking "read"...
    done (took 0.1005844 seconds)
  done (took 0.920017869 seconds)
done (took 3.159413018 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114476367 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101165235 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080398003 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.101627245 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081314994 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101021136 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080485312 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096784543 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082109053 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098873245 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082814786 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.098979437 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099238495 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08229294 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096027067 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079446875 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09941728 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080158742 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096447749 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080052941 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099457187 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080110301 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097101963 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078860334 seconds)
  done (took 2.963210231 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099052139 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100511767 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105643625 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087871734 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104514299 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088396664 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103982168 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100347984 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087056109 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101935985 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085942842 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104398281 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102392791 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086949859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101449161 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104204375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0872597 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100378664 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084505224 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104028366 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105512625 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08361002 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104481645 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088778874 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102485187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104427528 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084824963 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100231631 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088613631 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10390628 seconds)
  done (took 3.652625609 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084511607 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095026142 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079981631 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105488143 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079901619 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099758948 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080050335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099107816 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0805357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098197094 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081411609 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0977727 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079572659 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09929083 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081849741 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101169799 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110245457 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079982138 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097874008 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08082686 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10139791 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080623918 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098639106 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079454441 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097833603 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079620491 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098208496 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079797735 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098961087 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080018091 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101010913 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083005581 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098056402 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087205902 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101924263 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080547919 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10116785 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079681128 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099296629 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080750179 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097598282 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080472175 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.098179264 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086941859 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100058591 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100286762 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080406598 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099807559 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080782904 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102148406 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079692645 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098026178 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083001367 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098708033 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084196156 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097606213 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08173507 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097547975 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081215664 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09727443 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079805704 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096948209 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082469538 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097948614 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114461566 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086738692 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097315922 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081636025 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098563713 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082395403 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100490421 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094958146 seconds)
  done (took 7.307518963 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083156741 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107421278 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081217798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097875034 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076806891 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098864188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10220992 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080521955 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101052754 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088063821 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09858072 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08200161 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099598326 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092976738 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098410347 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100046268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088126401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097348964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080583163 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102151967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081362037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100787741 seconds)
  done (took 2.789948739 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212069696 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105122028 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143540911 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10890283 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085111013 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109345744 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105601244 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089071059 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105814414 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085945915 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104412755 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104710151 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085648395 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103504958 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086005817 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105219032 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105552863 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0880017 seconds)
  done (took 2.683321842 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093683811 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099448216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103472419 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098644674 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099826057 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08302974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105096782 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108188906 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084165728 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09924362 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09224372 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100917982 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101351324 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082781504 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103713073 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083135403 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104326474 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084019979 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110244746 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107355336 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090429266 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110310654 seconds)
  done (took 2.900008866 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09738931 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101478646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118866793 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085151601 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097129746 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081346825 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109213179 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083729247 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109474496 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102638108 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083233733 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100167274 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090756493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100713869 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106392677 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083050482 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10387836 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083056364 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104504566 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079988276 seconds)
  done (took 2.678317246 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10278059 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100838487 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099850349 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09348937 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100584011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083780851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109648285 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100942385 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083213626 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127370475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100386932 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082736376 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110389701 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106917636 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08395257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110421754 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110413376 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110797701 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084307962 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100279883 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127140046 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192383483 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109901926 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100129719 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082588002 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100976377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083280302 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106491177 seconds)
  done (took 3.664587232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081327871 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099390115 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079925847 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09738786 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07899653 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098587286 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080743819 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098945553 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08396561 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098870128 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083723322 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102257785 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083336577 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101381053 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083750322 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101993411 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086228962 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098668314 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080911923 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099584919 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083905099 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102768231 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084110922 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099154735 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081856265 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101269346 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081052266 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099618931 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084306174 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098931049 seconds)
  done (took 3.497485321 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091217644 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106233862 seconds)
  done (took 0.957446445 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079133512 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115187388 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078793302 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103565182 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087403711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100283085 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10823461 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085969802 seconds)
  done (took 1.519054416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096490741 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110547824 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083543408 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112202291 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109349928 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096360571 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160542416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10169631 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088044512 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098017661 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095113185 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.099091305 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105576286 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083205991 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107761669 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090554781 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098698901 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088618536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102685615 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080489494 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102247835 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111836677 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085507874 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097139166 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083972691 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111049127 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109091111 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084251014 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103741513 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092419532 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105456442 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076015237 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099504532 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101272901 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080008919 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110688626 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096910568 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105620918 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109574974 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084050026 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113319841 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078492064 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106844891 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105893774 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093534867 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101104644 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085216945 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097026917 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081219032 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105167305 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080288576 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10309894 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078752566 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110039961 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107489037 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099072566 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102450017 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085865396 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106400217 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087595812 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110198441 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10654739 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087969386 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102901655 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092256883 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107460935 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092273464 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098890033 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07851874 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101354508 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111420945 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107961009 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112300904 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104014754 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086080002 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100135325 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087592054 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104984657 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092096857 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111988231 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103205566 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092870887 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110978551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084331919 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105989712 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111714292 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082711927 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105483143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082783954 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117956691 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101884641 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081406874 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101780463 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093875952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.107383856 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085079253 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101079823 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095811561 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097799796 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086746179 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104976007 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10416235 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094836265 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110524817 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109922485 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092791191 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111273524 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084418018 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107176497 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080945538 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105058465 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087268931 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110063182 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079081925 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106541164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105651533 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086144449 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111412992 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083459042 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104663247 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110892934 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092024546 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102138659 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081735785 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106490204 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084800136 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107917736 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092938503 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101865326 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099325348 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079723815 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107844793 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085440344 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109200976 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091368243 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107442915 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097863531 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083055743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109407648 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093220248 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104044638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085528355 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108069586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103842348 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085244128 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109920108 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087576769 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103491444 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089208257 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10555371 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080635861 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108843313 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106889333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083835915 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107394639 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090030382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107285361 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086521832 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103028523 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110350344 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086167685 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102832639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084496281 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103444264 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095075935 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105955864 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081305826 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101032774 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112524016 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083107628 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104402818 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084467244 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106575552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086922937 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101936275 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08486691 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104862733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117397509 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090307563 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105674761 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090387076 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113853872 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10420139 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08704413 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104375374 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087368962 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104566555 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093509122 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110451664 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110444036 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087471973 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101709206 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091337586 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112563533 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083813769 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102388755 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102492859 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089786116 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111556628 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090327102 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105780444 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084282032 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105275514 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108536532 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088207735 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10428785 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084414218 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109681096 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084842371 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110906022 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105359578 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095332876 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107845593 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080713977 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108163301 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102098177 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091672226 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100101371 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083720967 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103478823 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08734586 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103369915 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088022415 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098859351 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093511617 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11219354 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105459058 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08497607 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104189586 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095076189 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106022422 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090000403 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108077543 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109842627 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09853445 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103596581 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089551136 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11373728 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085696749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099052729 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110642429 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084772856 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103863393 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085301091 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102962199 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089195026 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114002895 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110103826 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079993342 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107577094 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084281828 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103094061 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081402568 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111082306 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089765547 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106691084 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114265882 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087559219 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106245866 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089368788 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104923267 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086619114 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107111408 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108538379 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087956097 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106654956 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085080927 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106917729 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085326533 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103174484 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087478129 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105537154 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085605126 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110600632 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.107147744 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086365272 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107589531 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087946499 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106331422 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08686591 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104646286 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089803752 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105625977 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105535757 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088416739 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10022621 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094268643 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10482372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093831046 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105575447 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082536781 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111649344 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107316803 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09131348 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106756353 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086842555 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106878785 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086885456 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107905744 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113853489 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083562951 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11372173 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092976054 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105906483 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10777623 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085955983 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106660665 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085256433 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106710569 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087835985 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105327605 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085579428 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110837273 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088970561 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105653306 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107622077 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088524249 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105102264 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088525036 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099882569 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085254225 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104677807 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08724577 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113118096 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106017354 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089608353 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104288896 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08740027 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104362757 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08342146 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.115066599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115619467 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08867402 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114785016 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085481649 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107558279 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114779911 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081018409 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104568153 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085225207 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103548035 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094369461 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105947264 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094917056 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106354767 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085525858 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102624305 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106822169 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085548338 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100318553 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08508144 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108731647 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089603327 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104374888 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08720255 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108744672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087456972 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112411339 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105989538 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088190399 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106748869 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084120725 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104592975 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085100523 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108938789 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087566973 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103607988 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084650785 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105710699 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.116402544 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086940996 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105180048 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088699203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112915273 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086585626 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10864366 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091357789 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100633236 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108675985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086354469 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105781672 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086083653 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109285018 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090316867 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107442357 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113273633 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086656739 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106185632 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086823874 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104456676 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086913743 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105972296 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085980095 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105173562 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08717661 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114848926 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103984484 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089248719 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105271942 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086995464 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111163834 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.0876651 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108772492 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113699562 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090298827 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10710462 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093034142 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109556645 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090293721 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108505082 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107420615 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093511572 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105496932 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094696099 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10550182 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088460692 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10844654 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103922544 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086558089 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10527819 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085660556 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112207075 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087775394 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105408454 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08540645 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104257237 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088677052 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110805599 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114304504 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089529822 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108889412 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082123894 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103501062 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087629979 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.1041478 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088349862 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108861659 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113076635 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089050908 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10632103 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085467875 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113638953 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093154393 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111637874 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103666457 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092548388 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108354287 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089299385 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107438846 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08741706 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108160888 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112228397 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089524896 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105671297 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09584963 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111034415 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088712413 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108682342 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088015427 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10830918 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101392803 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088763139 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109199014 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09486394 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10969455 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088119602 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117460371 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106478806 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087117403 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111712408 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087414767 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11442236 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081969492 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107310127 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089360993 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109537507 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102893781 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087095203 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105269332 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090351588 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106060311 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082925971 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116897494 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094983321 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109277567 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10607045 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086231525 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.1032701 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08286707 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106117701 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089416114 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109520376 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096486562 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106864695 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086776575 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102879534 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1077748 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091328 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110214979 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084703887 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103079587 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085827274 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109610356 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094196126 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10602211 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087220316 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11177865 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108460732 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086260874 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111468415 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084303012 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111611786 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098411223 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110083492 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108068017 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09433932 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115783406 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089312577 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102967387 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088143154 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110363864 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107380851 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089504642 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109837428 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101461262 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111107319 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08635358 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107667934 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110234615 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087227767 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115232042 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089722393 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108679794 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093753744 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109625523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117018245 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091488342 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11340034 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090693748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110322307 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086966877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109003101 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105514206 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086006882 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110212742 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090119377 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113153904 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116296174 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087185566 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117523679 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09610313 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112328837 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084612068 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107469239 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087486248 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104156165 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089223001 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106976262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106270925 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087130577 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106552244 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088447855 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113950692 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090375361 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109858963 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088047395 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103916734 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090014687 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110449962 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109112175 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084856854 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108651781 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090231584 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113673626 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094976502 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108872832 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089197111 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109155757 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109065546 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083967329 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114137618 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088124237 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11064286 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087736383 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108766949 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089655346 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111731425 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113947045 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090819128 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110167425 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100412128 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110976836 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084930869 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.106145711 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114235204 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086312634 seconds)
  done (took 59.805054199 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148903899 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083569903 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10029455 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083767067 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117709923 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104156218 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083687798 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105771619 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085038057 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105999377 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08356761 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103979191 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113940674 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111348074 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118557707 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108880578 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083687631 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104767716 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08376088 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10575585 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114114358 seconds)
  done (took 2.965594361 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107215508 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118850931 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119225475 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124906153 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093982004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120385647 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119559888 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100406099 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124889195 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115733298 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124327972 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100995238 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115950505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115547881 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115984881 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0984129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12533903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114651717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102314179 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120147231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117945204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119576985 seconds)
  done (took 3.327861476 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085366529 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104345812 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089671023 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103070534 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088292853 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.10332425 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092562754 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105358781 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.092056932 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107131243 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086020655 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.107110263 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088736956 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.103649794 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106835825 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085615181 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158061465 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113085145 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087440343 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11075207 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.08437687 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111130267 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082575183 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.104833314 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106836532 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092580732 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109340719 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086940913 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109282006 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08695908 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108643082 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08565905 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109523997 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088606537 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.107148105 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.086748124 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108749308 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107239594 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083805469 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106080041 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089693076 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104647534 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088862515 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109984269 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086153295 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106069303 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089499153 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10841896 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.083094165 seconds)
  done (took 5.666362011 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105871796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165932405 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090478688 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149681015 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12590714 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119466144 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091885132 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149293761 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107594967 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087129576 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128365274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125425547 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108832712 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094297786 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115435149 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109162261 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090292283 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107579303 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092542342 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108615094 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114445786 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094400278 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125516813 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124253762 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113689489 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088457366 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107519414 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.094262871 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121831235 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114647515 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114258082 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.095782383 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125686948 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114999 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088098478 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111830506 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.129236081 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08921461 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112462609 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106816744 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092045819 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113955565 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094577882 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129451257 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109893764 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113315112 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088968054 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106739743 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122061564 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092438449 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118146686 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125772526 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0937244 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110639874 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115836732 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106157283 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108965296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107506011 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.093026286 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122140599 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105857694 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094058734 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123723788 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111060641 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097772656 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125409219 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115189727 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093844632 seconds)
  done (took 8.460129815 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0951447 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113297623 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12662235 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127033461 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096618424 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11641497 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116791032 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.096472477 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117092365 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12318441 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117182249 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140013832 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09104721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120760253 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117090054 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097339303 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116833398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117255252 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096671258 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117282716 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.1172475 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127323346 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096535041 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127071753 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148937557 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111572566 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097080442 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116922781 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127315357 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116293959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108902629 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117973261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116907365 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12665807 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129828184 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09685381 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109208018 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096454684 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117083794 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117841075 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090689653 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127554238 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116500565 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111825375 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096523966 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117238729 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127745328 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.131232602 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098902462 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123859912 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11753783 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12725151 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096195146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118290174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12713781 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.154192748 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127482616 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127266382 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096982064 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126388316 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127572316 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13601309 seconds)
  done (took 8.036342524 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110407227 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116189622 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123106994 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105825184 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087412818 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114860174 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087315444 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107680748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09837894 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121651748 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122117023 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115260771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096807031 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123450849 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114086491 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117883054 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094128027 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114899549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119886848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09349261 seconds)
  done (took 3.012396578 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094508009 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126968605 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089904601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117456096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113352082 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096410624 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112868587 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112981058 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090419481 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112849656 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101468196 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122796551 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110482377 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096068505 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122370908 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116419026 seconds)
  done (took 2.565782665 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097133542 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119206657 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121983006 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085575058 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108466877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085259467 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112267586 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106049751 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086292106 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126412983 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089931582 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115238001 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110751125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088941644 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106603338 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093455439 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10664931 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087111143 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110784247 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129155564 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101658811 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110300669 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090268017 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112868119 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109873524 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095618195 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111840121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087343163 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111322689 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111124661 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090958172 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118813465 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086130491 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110327313 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108255033 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087493066 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110458083 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090232242 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114073227 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090427592 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.109908272 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110176112 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090098764 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111693578 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086239851 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110423428 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08574602 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116741971 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10794154 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090771173 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.11031225 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092546223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11216573 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121894275 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093849149 seconds)
  done (took 6.515515565 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100245159 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109883999 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08437435 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1092493 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093109319 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113313543 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113697353 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093413789 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113031327 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08886956 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112695425 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094531231 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112959866 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113793833 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092379183 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115386312 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085121181 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111690397 seconds)
  done (took 2.692337252 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092048098 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106318507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096463571 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110930231 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0898297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114141154 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085173098 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110114332 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087264981 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.112015839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110632006 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092682545 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109186193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092781645 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11082286 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090121455 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11352842 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087408775 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11243756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106905939 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092334874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109928239 seconds)
  done (took 3.068880969 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119572831 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125995296 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096975423 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.240375588 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.109461318 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13933945 seconds)
  done (took 1.667569363 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110593386 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123719587 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111676896 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111927901 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121538912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092013454 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114110875 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113064344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12361938 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10812719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113961185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124408087 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124097066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102059997 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120799139 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119877132 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092592193 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11468148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111691782 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13520788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094055562 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124972078 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113484133 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09232181 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114039178 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123282654 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124248589 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108025541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11379635 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124846954 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120962836 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092777145 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125170448 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12919098 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093731337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124838101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113124521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134497043 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099425763 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124017178 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115995168 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100590097 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125205309 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119404226 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124426535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092733217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120604948 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114100591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092916797 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142009685 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121316015 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123566195 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122059261 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102660122 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125411676 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142792112 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129966887 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124789164 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121542574 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107767265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124247334 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121669209 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12388202 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130952874 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10049174 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124101554 seconds)
  done (took 8.51523506 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10469536 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128114898 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114539576 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107877331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103801506 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114775547 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114600692 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093331243 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114423339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090954136 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159062434 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115247468 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1242393 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124275596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092710263 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115504809 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11335328 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124742375 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092932341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143106093 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114039606 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124232702 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103774028 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124017049 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128967552 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121415501 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093683647 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115458289 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114016502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09344552 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120970659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114000523 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124591478 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092219484 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125721985 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115358919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093721896 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121298499 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115369872 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099948122 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124947132 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13558385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113815883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092861043 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129954717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115389136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115342786 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092633031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115414247 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092866049 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130803533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12971616 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130221401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124570356 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092909515 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115300275 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115204365 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094086143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115852979 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121549797 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124792221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093171242 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14210743 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115191824 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115092722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103611542 seconds)
  done (took 8.407287884 seconds)
done (took 160.059297973 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100048954 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137316282 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096694819 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171698276 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107579227 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120189166 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13874832 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099294858 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1077567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087516556 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.111076597 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091089954 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178529475 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085478263 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107820271 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109180715 seconds)
  done (took 2.691854325 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201367204 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255909466 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104042648 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107133493 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090356019 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112440209 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085719667 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118667752 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.115659617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.091674339 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115213433 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09165653 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.112145403 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091520432 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116844276 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093159735 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112807633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093288981 seconds)
  done (took 2.955162628 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113705742 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.184496277 seconds)
  done (took 1.153316179 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121147058 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183114941 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298596895 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15633371 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120028429 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128753061 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158491505 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13256346 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199582881 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123705296 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124263635 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100230905 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142043058 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116670023 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094843735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119444326 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143175194 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094358126 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117389302 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120128559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124515519 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111464677 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10060076 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118534055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186058425 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12098997 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086314985 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107530124 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096307436 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116997698 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114478284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107642085 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121433104 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.161281747 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130447466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.165012604 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126892442 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119169657 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.100633529 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119416046 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125972877 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104379079 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133754604 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.124951631 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093214261 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126025434 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090530086 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11283816 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.120567018 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104097527 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121923109 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097824091 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179089851 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09827369 seconds)
  done (took 7.714902134 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.801046433 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165556059 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090941549 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.894800946 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138351428 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104956791 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789429628 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111331946 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258722765 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763656518 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132525561 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099300849 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234230932 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257879606 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.912979649 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313310154 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673323439 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12708834 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150486882 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15686732 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095590749 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137447342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131034237 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430543587 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115171999 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091591262 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117182396 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121497044 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162617041 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125067086 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094761548 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200301797 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250847164 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185486327 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116515711 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110084615 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091020498 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170852441 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271366823 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21988353 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183102968 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086906982 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111687048 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120930434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108365856 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109441777 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165786935 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.204650349 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180767499 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095056547 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121601906 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119865753 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097352979 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189410302 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12213596 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296854452 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327949677 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11242167 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097219249 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127440034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266336496 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124968351 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207125176 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137449951 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216966296 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089828997 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807028205 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170620488 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112619647 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11725203 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097528733 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117873565 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119388301 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168633167 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392643319 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102765586 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115414177 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089823173 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231070561 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125160056 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090491815 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162951727 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116113259 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119070434 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103332746 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123378681 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172015277 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254436644 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101576226 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120210355 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11569489 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101056169 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116531323 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214406119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223381759 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163483406 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235787652 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100914824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188253707 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169676171 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119708668 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175981255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118071972 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105113709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1227178 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219795008 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148404964 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102049589 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116715121 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117236757 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150478308 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105766097 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119929515 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17155185 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482101056 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170239505 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109011016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107447188 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119620265 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163299343 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118890455 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260675189 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099651791 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192789587 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097385926 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109092567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096699952 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188847656 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101761502 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120219043 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121609902 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097311965 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259246311 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200714741 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124716963 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246444088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185437472 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097652304 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196316531 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097093301 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189249097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099316753 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121300324 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115810705 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77634337 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124003398 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118898307 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0952999 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190315797 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112665133 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101844119 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12585798 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109070026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755816411 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128773767 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122930081 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124558649 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097388641 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119465755 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117364333 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09593433 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163511682 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235845072 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122956156 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117665608 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104418901 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183515825 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094448932 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127360207 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125837185 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104588492 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121136632 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115265798 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105235821 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194051352 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166131283 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225541139 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.58153852 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11442152 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125837707 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232221874 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090626743 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292500109 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117913495 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207194559 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188745498 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100739275 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323917711 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168225977 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190129728 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128905062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196908681 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088136087 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117611497 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168110907 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113252241 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097369661 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164860113 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126784179 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123626578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964674614 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090637912 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227679702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109528069 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173591552 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116844172 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120637729 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272892041 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114140413 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128497711 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166574731 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11577643 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106037968 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.728864091 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104730675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122175893 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120210413 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225721925 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166722873 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118440353 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097651155 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121715737 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166917133 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209436617 seconds)
  done (took 44.222302344 seconds)
done (took 59.587335068 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279153746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21672345 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261359729 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171881447 seconds)
  done (took 1.883598192 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171103523 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149703348 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120782498 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109411789 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149237942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086034129 seconds)
  done (took 1.663132115 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331033578 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.294208756 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216453836 seconds)
  done (took 1.724402616 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251826418 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271303633 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334254306 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420135476 seconds)
  done (took 2.257821175 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200773075 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132313564 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111166826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105043513 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197620198 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.222294289 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140921127 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166762862 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123435829 seconds)
  done (took 2.324879037 seconds)
done (took 10.737801625 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.159739415 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.249619149 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.171660104 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.244002012 seconds)
    (5/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.238848707 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.226470198 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127529773 seconds)
    (8/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.19386523 seconds)
    (9/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245332468 seconds)
    (10/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.238259273 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102249918 seconds)
    (12/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.124419129 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.234098154 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09467416 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114209137 seconds)
    (16/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087539613 seconds)
    (17/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.237883766 seconds)
    (18/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.178839434 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.151903139 seconds)
    (20/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.188830354 seconds)
    (21/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.255516494 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136899256 seconds)
    (23/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.261283976 seconds)
    (24/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095852981 seconds)
    (25/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.156250779 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.224978834 seconds)
    (27/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175990381 seconds)
    (28/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118930104 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.230264704 seconds)
    (30/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159974796 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172124391 seconds)
    (32/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158029116 seconds)
    (33/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.12679117 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135762612 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113830477 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.22568608 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120634099 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068197071 seconds)
    (39/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126629525 seconds)
    (40/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.129371781 seconds)
    (41/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091213592 seconds)
    (42/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193829547 seconds)
    (43/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.099383494 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.149464466 seconds)
    (45/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173467507 seconds)
    (46/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.225974604 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095387957 seconds)
    (48/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114239637 seconds)
    (49/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.171837225 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133726535 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.120366234 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115838333 seconds)
    (53/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090801839 seconds)
    (54/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.107558606 seconds)
    (55/286) benchmarking ("sort", Float64, true)...
    done (took 0.233326623 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091071287 seconds)
    (57/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093586814 seconds)
    (58/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.100771713 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088141128 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.112068146 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089895333 seconds)
    (62/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163649686 seconds)
    (63/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151183912 seconds)
    (64/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112137034 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086451565 seconds)
    (66/286) benchmarking ("sort", Float32, false)...
    done (took 0.176364864 seconds)
    (67/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172641622 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087102785 seconds)
    (69/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.122957769 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.169580358 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068269631 seconds)
    (72/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07100462 seconds)
    (73/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.092675273 seconds)
    (74/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068112944 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067274439 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161156426 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191328594 seconds)
    (78/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083427567 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067101838 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192488535 seconds)
    (81/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.190933123 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175621926 seconds)
    (83/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101523038 seconds)
    (84/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.183100003 seconds)
    (85/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067233451 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119109234 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12307532 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.088900449 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186869548 seconds)
    (90/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095434958 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109726152 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094278856 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090995702 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136766494 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10345804 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093946305 seconds)
    (97/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150654929 seconds)
    (98/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122679776 seconds)
    (99/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087414015 seconds)
    (100/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175262456 seconds)
    (101/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157393791 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067702642 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086506782 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137968116 seconds)
    (105/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110790049 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087496266 seconds)
    (107/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115601865 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088283671 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111628108 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.189214663 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095702058 seconds)
    (112/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109348456 seconds)
    (113/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097705767 seconds)
    (114/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.143479105 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087690735 seconds)
    (116/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148764279 seconds)
    (117/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068577229 seconds)
    (118/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12218742 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067406887 seconds)
    (120/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.151652779 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067720042 seconds)
    (122/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123611061 seconds)
    (123/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.117862716 seconds)
    (124/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.0917497 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115822021 seconds)
    (126/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.092661518 seconds)
    (127/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067261552 seconds)
    (128/286) benchmarking ("sort", Float64, false)...
    done (took 0.173683531 seconds)
    (129/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084471146 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.183471647 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120078145 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095802167 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140100492 seconds)
    (134/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.07641284 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117248094 seconds)
    (136/286) benchmarking ("sort", BigInt, true)...
    done (took 0.236392238 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134005742 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098645785 seconds)
    (139/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129609509 seconds)
    (140/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068514763 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116396205 seconds)
    (142/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102305054 seconds)
    (143/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115448439 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096333983 seconds)
    (145/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123455422 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067868666 seconds)
    (147/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113176898 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086830109 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118613415 seconds)
    (150/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.117450393 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.09005907 seconds)
    (152/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099363116 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119133839 seconds)
    (154/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170247876 seconds)
    (155/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162332148 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.2017082 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120825751 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095738302 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.115493784 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09587214 seconds)
    (161/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122896395 seconds)
    (162/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.068358932 seconds)
    (163/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121315002 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087324716 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111257223 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.175848596 seconds)
    (167/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067374592 seconds)
    (168/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120690793 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068471748 seconds)
    (170/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088281339 seconds)
    (171/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175957058 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183171061 seconds)
    (173/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102343891 seconds)
    (174/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11970277 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126230372 seconds)
    (176/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068960928 seconds)
    (177/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068340093 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141023203 seconds)
    (179/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111022493 seconds)
    (180/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068288677 seconds)
    (181/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088703939 seconds)
    (182/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136382193 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117806712 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067940757 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12135457 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087045199 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16033584 seconds)
    (188/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.11902647 seconds)
    (189/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099861578 seconds)
    (190/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06831961 seconds)
    (191/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139685486 seconds)
    (192/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095104586 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142267416 seconds)
    (194/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118985762 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094808977 seconds)
    (196/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068311296 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 0.22465126 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11063233 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101751519 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112076679 seconds)
    (201/286) benchmarking ("sort", Int8, true)...
    done (took 0.224334321 seconds)
    (202/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068926804 seconds)
    (203/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.152653449 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089157106 seconds)
    (205/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113929472 seconds)
    (206/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068430076 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120316812 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095737266 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11965137 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06782473 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125492876 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113338152 seconds)
    (213/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117967245 seconds)
    (214/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090228517 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 0.442442423 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095120883 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.235433662 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117707442 seconds)
    (219/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097480537 seconds)
    (220/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110757344 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087104247 seconds)
    (222/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066709683 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 0.232843496 seconds)
    (224/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111115119 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086467715 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111294928 seconds)
    (227/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15176152 seconds)
    (228/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093517046 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067716881 seconds)
    (230/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09114497 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.150814046 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113161284 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183125852 seconds)
    (234/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067379716 seconds)
    (235/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068857131 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.151442215 seconds)
    (237/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.0677237 seconds)
    (238/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112254833 seconds)
    (239/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067398264 seconds)
    (240/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09125448 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087716659 seconds)
    (242/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11228222 seconds)
    (243/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094953635 seconds)
    (244/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.145332018 seconds)
    (245/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06776328 seconds)
    (246/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068370788 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110473747 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08729103 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164075618 seconds)
    (250/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092517409 seconds)
    (251/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094564223 seconds)
    (252/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066240126 seconds)
    (253/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120502283 seconds)
    (254/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094093999 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12037813 seconds)
    (256/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066854404 seconds)
    (257/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.091082882 seconds)
    (258/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090504691 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124535307 seconds)
    (260/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08831216 seconds)
    (261/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.09153391 seconds)
    (262/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078587814 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111906625 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096092843 seconds)
    (265/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11856127 seconds)
    (266/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159462017 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092653095 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087045931 seconds)
    (269/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.090791511 seconds)
    (270/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.0952242 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11662879 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087875506 seconds)
    (273/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16494915 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096040892 seconds)
    (275/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.102496755 seconds)
    (276/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090419945 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11114978 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068308302 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118021073 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0953687 seconds)
    (281/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.09017336 seconds)
    (282/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069379456 seconds)
    (283/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08707666 seconds)
    (284/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.101618569 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094450735 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117518582 seconds)
  done (took 36.371587187 seconds)
done (took 37.257321401 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101246559 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148999622 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097941923 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137094757 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123617389 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092646838 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119177068 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10026129 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125075435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125739039 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099189256 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094020286 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098872341 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121813968 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098437326 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141174125 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124618771 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095504825 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11918104 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0868067 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118969067 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088013419 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112404298 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070573569 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122435378 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094640785 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117180201 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097079813 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111706252 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087798981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.116714653 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118277441 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087853654 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124924113 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094736347 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118953513 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099008343 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121741117 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089488797 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111456408 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.095529555 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.111225228 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094383339 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118383772 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092695669 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117012059 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120011991 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10062652 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141025635 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092584456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11910528 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123447343 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097185801 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117865794 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0919985 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120110376 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093123705 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139657944 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095930132 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116599366 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118325466 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095492215 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116250789 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096645424 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119490731 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098370448 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122939692 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092841783 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122431752 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116908502 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087418871 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12004268 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091270679 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109934742 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097392703 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121748275 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086456573 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116559537 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094975102 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115759294 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086933318 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113587488 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089562114 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117598957 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090393151 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093685801 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091596142 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117070416 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087771224 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120039409 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093862953 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117709422 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089580572 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122904355 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087240601 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116868238 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087793441 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111484193 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113331177 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092433071 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111622032 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091107629 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120438172 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08995114 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117820559 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101345354 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110732927 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.095249541 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109850785 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087766773 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126182645 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09821427 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11115664 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092854731 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111228281 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094258643 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111152003 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110886474 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087767491 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111441887 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094575899 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111027979 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09054256 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118431259 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102922797 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.110812872 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091340872 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114566159 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088481853 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11751765 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089338857 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111196275 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089916839 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10246722 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091268764 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110785022 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095829797 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114849611 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097826982 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113182323 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097258489 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116771256 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094385424 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117357624 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087428861 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099432009 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094078093 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114127962 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089848897 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111272349 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089848192 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110852019 seconds)
done (took 17.044792081 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088241681 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184336765 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152551664 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14212429 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109002882 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112408914 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122605524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119631725 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113850109 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143667254 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112994763 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132307398 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147820395 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087857856 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11371209 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092592976 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113420692 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104208297 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146725819 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134167627 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166680106 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08803583 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147300999 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137140099 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097281539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13940534 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11261014 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092378832 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115246372 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104531892 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132892474 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09238519 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113790503 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134492464 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106141612 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121217285 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088923362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119311188 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089133224 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111950107 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141534911 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110224984 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117663517 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.093924201 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115645564 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091341383 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114851536 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121026443 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100463644 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116255552 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.103267951 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156695495 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116655571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122002387 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0881629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122863584 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098659532 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115711188 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089215626 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115513798 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.087909249 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116118646 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127163546 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118425454 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116421947 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121496171 seconds)
  done (took 8.660887582 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106723088 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139732441 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106613906 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132287755 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112691165 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089592608 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113117244 seconds)
  done (took 1.74735963 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089644328 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134694325 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11355602 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136660528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133002342 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.113240301 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123585356 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089050781 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133638941 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091039585 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135136597 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151017552 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091558981 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122835811 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138643051 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089413994 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138035833 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08952771 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116236124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113359591 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117627836 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13564045 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092148605 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113789384 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104388862 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113534399 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162856581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095181997 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115435053 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093337863 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112547221 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.128084046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.12858517 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125468969 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089666175 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130588365 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10457578 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112661151 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.102950597 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119722628 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127722828 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091304062 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114570017 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08949095 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118979527 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100798037 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118209123 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109412705 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117970439 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109306344 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115822029 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127943585 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090321094 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117866065 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09125615 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120512954 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099655282 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115471814 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110192942 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11673611 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106049535 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13118144 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128110431 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.106444675 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117756625 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10432889 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128624977 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117467341 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09195405 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118458317 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106972783 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113450504 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091135379 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125153409 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091636627 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137821576 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137899177 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091839561 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125511394 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090988325 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115506364 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090126386 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137972324 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094180396 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115784316 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093686133 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118706276 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087790638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114370202 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117498448 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088927913 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115895269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094547395 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11543601 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093755059 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132624374 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090972711 seconds)
  done (took 11.877006589 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091414148 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115615435 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094678404 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116144802 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091107026 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116335386 seconds)
  done (took 1.587499215 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117963059 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118826459 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105148587 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121889799 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156725603 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105935609 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131352291 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124959924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109023646 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128724644 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131045951 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10603124 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136453482 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122149978 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105121079 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121786069 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105331551 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126372779 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127690587 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098773624 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138200355 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122117924 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097651533 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.1332204 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09424829 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121869207 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12986582 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104517878 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12759077 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.099007851 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122368233 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118379338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097942401 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125150393 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130785377 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097010687 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12194224 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.094400922 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127416096 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118661725 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105449043 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122930524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102400811 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121056092 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124630063 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09645849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120238288 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125985289 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105319301 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120061504 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095690225 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122005932 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12113146 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095788486 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124162448 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09952828 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121500385 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130844308 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.097594415 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122241403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093794121 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120767052 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125768141 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093430694 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131746137 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120131924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097662769 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122556691 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097830374 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122049364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120643318 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093891655 seconds)
  done (took 9.298944307 seconds)
done (took 34.113554191 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685819334 seconds)
  done (took 1.642084071 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.841395817 seconds)
  done (took 1.802115113 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.069499928 seconds)
  done (took 18.059760406 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.479999033 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.563347185 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.99917101 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172141551 seconds)
  done (took 3.174827332 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.944796716 seconds)
  done (took 1.921548316 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284215801 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236619612 seconds)
  done (took 1.48331945 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769976652 seconds)
  done (took 1.743905194 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.432723647 seconds)
  done (took 2.397565061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322315915 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184118449 seconds)
  done (took 1.481390538 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553013692 seconds)
  done (took 1.524812202 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.067916203 seconds)
  done (took 11.045030091 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266670527 seconds)
  done (took 1.255051151 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304093649 seconds)
  done (took 1.283558927 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.524489375 seconds)
  done (took 4.505719203 seconds)
done (took 54.289684258 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099042317 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128139596 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102905388 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125335853 seconds)
  done (took 1.430834252 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103166334 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121811665 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102206058 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121657097 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127518233 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098172879 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123947209 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10317826 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12117812 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097088986 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121518614 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095890127 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125421095 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123953952 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094537682 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124481533 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100292476 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121977782 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125370543 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098301347 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119911181 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099683941 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125697127 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094948823 seconds)
  done (took 3.676125962 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101951853 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119979379 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097773464 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119599104 seconds)
  done (took 1.426544473 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101641932 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133139171 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107285615 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126566829 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107443501 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132926328 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118796322 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093203417 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119961468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101787566 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116574654 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114653541 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132897686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126175355 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102939807 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115891552 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092399342 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132722076 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09977339 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126880237 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118534305 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10171358 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116422167 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109478223 seconds)
  done (took 3.732537914 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171188477 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129408531 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14001418 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096496048 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160786551 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141799789 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089071705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142710161 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089185796 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131652519 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093186348 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161071086 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130677584 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089557682 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115752333 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088265741 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129465896 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130778307 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091677499 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128143595 seconds)
  done (took 3.443255513 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097975085 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117991561 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089635706 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116734319 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099931639 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121585273 seconds)
  done (took 1.633538465 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092258546 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115566962 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090816666 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115851247 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095530755 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115550427 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090328893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115562706 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09165465 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117361048 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090861407 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113676179 seconds)
  done (took 2.234715873 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505777919 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121212327 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121064675 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090448346 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122720028 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091317579 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130576358 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094412509 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142364736 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089969105 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117062897 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094588304 seconds)
  done (took 2.710675974 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238192655 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126115283 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279199261 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344758922 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15371133 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164657166 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.304635004 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163806116 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193719828 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152263903 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199148839 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224544097 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151826468 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19415885 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138317624 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119132577 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217960513 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225564687 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153721452 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237830951 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181209712 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168866134 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181793596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151391782 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139468946 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163468288 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094886334 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130472759 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236959781 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180428678 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190715075 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188620591 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122580553 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233155815 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232891667 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198140081 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284142536 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136743151 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142055876 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168111508 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257023594 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13948638 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211713007 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157390179 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132990982 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198706644 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162899761 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174931203 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146792532 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141108776 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223318169 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218633588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188335459 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139998297 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320268755 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152346999 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160177765 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191351356 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226695835 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22873224 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192486718 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122255724 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190224586 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189483481 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211144883 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154522188 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178235676 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149426456 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18497213 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192486719 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167942466 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179589792 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2111248 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138176406 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17167742 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174651346 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172497818 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261159697 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186796944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123450413 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171023429 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123796643 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132467858 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196984854 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12572766 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216049939 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145358736 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165948751 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213668757 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160755922 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162789319 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1949352 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212419622 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12294609 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112631195 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155693637 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155135849 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175281145 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114225938 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159292126 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157782377 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131980067 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17089863 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125275988 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186719064 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092403744 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169970384 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21265895 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100593616 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162991923 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153161086 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1523507 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181081021 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197686801 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141615633 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135480225 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210049493 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183296517 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144497348 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179691889 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227368171 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119226136 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151156942 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229516454 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219752161 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142468048 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203017012 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149481416 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137303406 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133848635 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184198553 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15780443 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163733396 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106860763 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210279921 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204134552 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126344094 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113043433 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226868373 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107489826 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134526491 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157518568 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150680203 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139257954 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.116737856 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147872131 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177256746 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207086333 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154300943 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166223986 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121339188 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235224141 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141626878 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153164572 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123936287 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123612685 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.18975524 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226015927 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105714626 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233906851 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171018152 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20010129 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169067523 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137266991 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180056608 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130677857 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094746982 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220281594 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166478977 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162358811 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196045724 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197920111 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.203012387 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187173169 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168220441 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174677648 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168242465 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155491738 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111017669 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16243259 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159778808 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124993369 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142544154 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107538805 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15185377 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143830678 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134186428 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199631596 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172504614 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218573486 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161568267 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14976213 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184550862 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102509339 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205722735 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178044306 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147667194 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197465405 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194870562 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188294222 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145497469 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229466364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094452166 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126675047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142050522 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169372607 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107834821 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137654215 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164512081 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184137011 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177638926 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172875422 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234853323 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174841133 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192381205 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123332805 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169866906 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17996791 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180215672 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180873393 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116430164 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150495206 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179663787 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149981371 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2584218 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168455058 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176370495 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227549507 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125805234 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133706391 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152086583 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179723314 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156169849 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174499863 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148787404 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138281218 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154796461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10412832 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161446265 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206638941 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137856684 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209424426 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150206321 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187624682 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127877426 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164233857 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161592044 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162518124 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083094048 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172029289 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195677636 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144333326 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162860949 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183880724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133009388 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307976619 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229860262 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192080464 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138317304 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15603248 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135012151 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163653549 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166893698 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179983333 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159204806 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216087334 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159200107 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111018704 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139077009 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150025245 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15345257 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107310598 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148202138 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176632016 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139758039 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183673967 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15622798 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160463073 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172881351 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152033107 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145079593 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123202765 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246398826 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185411029 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242980031 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150101551 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175551094 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209174236 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127563515 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105745466 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134016625 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180679404 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137079753 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195431616 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190286563 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227380761 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18303381 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178064506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140222449 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120328208 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158381965 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17002552 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205062948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147776786 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149204798 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199275492 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139740262 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105140896 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167449732 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314826805 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120462089 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217432097 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080833247 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281567517 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125866548 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10578673 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164596629 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232508535 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136297201 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153119334 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168189841 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162706937 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165268476 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150527146 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219079321 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215040004 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200880721 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209290928 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105242616 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159403555 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170301377 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215805989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157498394 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11200313 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233998979 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195505341 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193600058 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143826908 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17014132 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168820001 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160850955 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189209061 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136667216 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206772713 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136222653 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221152608 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153513493 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112004988 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175450935 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216204624 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142712887 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183669829 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185229703 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13713266 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105709545 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161911428 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206390347 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148592764 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102069724 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17845065 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127537835 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197815533 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265087135 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13547278 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155711898 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121546797 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136832668 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157764049 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16039255 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139145305 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140167893 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221137995 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108060792 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214905246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204695979 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171520239 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167982422 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148517594 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689338357 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131910007 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19491755 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149182018 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183741433 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151607548 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173818645 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16118812 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170234306 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198206425 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161665225 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233917422 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19309 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208102196 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105619907 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160892711 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156783043 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145491873 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154794086 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169025735 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161783868 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147504501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180042264 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166296167 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134817589 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113696432 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227834258 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149218585 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183453631 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181185948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112008613 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200873806 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190413125 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134681717 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175806521 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204292634 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143942419 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151823957 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135103687 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151566829 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236701997 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126672523 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190599449 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214926996 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161744868 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16866388 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119607645 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222647563 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158595746 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188456708 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145727495 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157251818 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158674844 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139281319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103566167 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157605852 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164512034 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.153392516 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161224118 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141618241 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218937146 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097223334 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145887557 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28808194 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172345114 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246569322 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136713292 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108240268 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162608725 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150261291 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178414716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179682432 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136963874 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136603391 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136432011 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129699429 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11311698 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157285453 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193663064 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161632576 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238719662 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138176006 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252065614 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141319501 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156608147 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088548824 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133547678 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152116313 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148072998 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151994504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194490157 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267405804 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147215095 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107406086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150678904 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127418908 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108970977 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166190091 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165711773 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207147781 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116166401 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109740584 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157843226 seconds)
  done (took 82.3012197 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164712146 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132936516 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148318712 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2028873 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17659318 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272435442 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211504744 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254166191 seconds)
  done (took 2.638486529 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094721179 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147669082 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162904081 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133115925 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093067497 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120429231 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339740597 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133172843 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091995078 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.149178184 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147867734 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118995495 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.527855525 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.11872912 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120880178 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084576854 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118200009 seconds)
  done (took 3.773462034 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.190548319 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.489685076 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.020064415 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.212973135 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160661915 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120760105 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.694995857 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116046943 seconds)
  done (took 12.08820656 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116349864 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137661714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.125007469 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154298238 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142927146 seconds)
  done (took 1.766005552 seconds)
done (took 123.831020656 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098883309 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127899651 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098829778 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131436657 seconds)
  done (took 1.531075065 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095769264 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071965798 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101631274 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075538781 seconds)
  done (took 1.427822985 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190677578 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170401666 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388654576 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072208964 seconds)
  done (took 1.577151725 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11649407 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133052515 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106331979 seconds)
  done (took 1.445592739 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107872992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129611755 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103991364 seconds)
  done (took 1.428597507 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106613752 seconds)
  done (took 1.193217352 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108712369 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138266209 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10994764 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136568166 seconds)
  done (took 1.580061091 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099528711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127566559 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11018999 seconds)
  done (took 1.423200995 seconds)
done (took 13.052892751 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104201884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420135101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386240029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139123773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722005195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38130745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043475915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147951888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166771355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09456729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139441993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671844666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03528487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378874115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993592246 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376807967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679411473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122409531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09225553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123337307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026373528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093601292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121734176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093699764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707199095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398470929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123175703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343638502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121528603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126454322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384013999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12272739 seconds)
  done (took 16.956298681 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096088554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174408997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09925538 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123359178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12414806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0952058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124529262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094875313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179674647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122632842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111175518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122098994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098522376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123630496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143864967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094439386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125331597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093276846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122329245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094764073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14029751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120476054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095605982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12154657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09641728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136465922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095110276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122171264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093316547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127902945 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127458104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0957272 seconds)
  done (took 4.82614594 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141102251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183565321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128971999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126691186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170207715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123997067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199562969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11909864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184353951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123684556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140066113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093372904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157383393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095030115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143280501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12207101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098099345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123124223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0929561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124226265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112010377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122223077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123258412 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095026803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122482245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108863479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124964316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094292431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122767373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126836547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100632742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123723905 seconds)
  done (took 5.16607966 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098414512 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126549195 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110351824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139191228 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096142434 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126068538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097802711 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124782446 seconds)
  done (took 2.014685695 seconds)
done (took 30.050346946 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111655262 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129837145 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107385193 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134502168 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102896628 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132658361 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092044594 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134956847 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.106679161 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13185695 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137070021 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092523221 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123737124 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09350286 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135089338 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098748054 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132536227 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102918804 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13396078 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133439626 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09562437 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133354798 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.1044127 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13247951 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105544308 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134335261 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109365213 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.128766415 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122840531 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096237172 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124256564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104385978 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123814945 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106247238 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126167776 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09877988 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123615836 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095124555 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133066362 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105007599 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129486746 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132793116 seconds)
  done (took 6.02207044 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107922958 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139810121 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105742578 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081653798 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117612955 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080784423 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137275889 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07996646 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110172237 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108779569 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074447187 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106553978 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07941981 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073073688 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.105987962 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076220501 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108129182 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076236362 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077095999 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106811164 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080551303 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07333763 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108996853 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079851742 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075364068 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110669951 seconds)
  done (took 3.582423848 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101366443 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135161449 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114832625 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184168002 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16095231 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100630917 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132071213 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.112243727 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138998883 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120707038 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097884192 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149454763 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110332045 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13030417 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09303946 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138143772 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.107499702 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.124301657 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12824678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113684198 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138655918 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103631259 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141574595 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.104300442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.122603535 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095210885 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126888339 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134830572 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099531157 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131849924 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098093487 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125387772 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095257654 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.134669954 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126001479 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09620027 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142124262 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104066072 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131934671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.094203012 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130195253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094633535 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143862226 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161354871 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092847493 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130584379 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096573276 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1347264 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.093541162 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141837411 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131428629 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093819456 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125132305 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093567223 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121315813 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108821737 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124026748 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09586686 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132124474 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098609464 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135927303 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.096713426 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138694982 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121433977 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101597032 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120919619 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094037343 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120246003 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116095757 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123208971 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161705051 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094266128 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124357055 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103075316 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131197885 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100385531 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.123009128 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109361986 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132619656 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097164723 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132793036 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125269112 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097008749 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139809943 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095643948 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123633458 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095323414 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129386995 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096387582 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.123997176 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106897245 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123303576 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096551288 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141590544 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121612477 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095672969 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129015942 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099221347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123019656 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107538432 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129349673 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094195301 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134528157 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123026076 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098124391 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132352667 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099923245 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121948873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099521987 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129785037 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094242493 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124591132 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09649983 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125548277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102272302 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130321713 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127445144 seconds)
  done (took 14.90575151 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230631664 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217714365 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189109302 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296735793 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105542655 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147384861 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215066122 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15798518 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093734619 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162441871 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172188178 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183051834 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172049251 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179164303 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16948153 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123091375 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112931821 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16629979 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21621178 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291048386 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113683342 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133700989 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163864936 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162297447 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106831846 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134800674 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142449867 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106710595 seconds)
  done (took 5.780369358 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109090961 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156427194 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098860823 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146559161 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150232041 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094071077 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128956933 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095587784 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13690418 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136682279 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094471315 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129606704 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10229418 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13349109 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.093545156 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.13382053 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133338715 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096232624 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126249598 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098871819 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134761044 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102813047 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129118418 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093427016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134809258 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092861213 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.118747687 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144108195 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094640115 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146649484 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.091749751 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132965297 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137247094 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095553692 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123771732 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096811238 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126424031 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09744953 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125828437 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093166783 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122637271 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079278232 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122086218 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108382388 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130219497 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081349974 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130370145 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099983005 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126377024 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.091863113 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.126822675 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.096870222 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128518888 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102843579 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12652484 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.094620821 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.127105425 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.086209214 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131267361 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.096154811 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115580822 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092090459 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129578536 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.089127088 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13256047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.098408144 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123251139 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.096613547 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129265536 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128982716 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096577599 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130515276 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092661387 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126192927 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097366517 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12875358 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097445214 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123997959 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094161846 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124929701 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076574944 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123105829 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075378216 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097609552 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122064073 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093671357 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127359476 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130113782 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109533116 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126682805 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103234678 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12583309 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093799835 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128603618 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083438384 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128915271 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110646819 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142309211 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124411813 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.092662897 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140355241 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097005917 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123949278 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077177853 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133690146 seconds)
  done (took 13.084222118 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131617925 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155454742 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096030279 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142683135 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158075789 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.1587906 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102722715 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132480805 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097348631 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143873087 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095913933 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13309236 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094601448 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139307392 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158642169 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105549063 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126574425 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109006524 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129075708 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170582029 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113436317 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142541614 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111391431 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125413455 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.10036916 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142542431 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161586528 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108705442 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138534197 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.114099505 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.139316447 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161418261 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114798737 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129062079 seconds)
  done (took 5.514422161 seconds)
done (took 49.984940456 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.231552493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.420995999 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194085195 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.109589589 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.228531781 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.198190589 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224095011 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194381387 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.676328681 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192821545 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45330373 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.76558602 seconds)
done (took 60.01203508 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.261347795 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351969312 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483918273 seconds)
  done (took 3.957039253 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.75654639 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.112027318 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465541938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194740449 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196157174 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.559228611 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.893832877 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.573716713 seconds)
  done (took 28.115293671 seconds)
done (took 42.212452925 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.193047537 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.251663806 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.233307978 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175297665 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311547435 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.220632102 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.613346763 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.223273554 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212242354 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179218709 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.215953619 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.211038789 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.207519494 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.571467168 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.2000672 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200757782 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.270363636 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.769691524 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.602000084 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210149985 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.223172987 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.252264387 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231563883 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197512043 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.226169814 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.195944111 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196564932 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.196703683 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.847010221 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.204933404 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.209758661 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.791877224 seconds)
  done (took 190.968184539 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.1971125 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.226686282 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.32827967 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243224581 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.684445315 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.398663315 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345505792 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.764969182 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218665852 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.207804243 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.530002568 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197789363 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.591208454 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.168395959 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227231012 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259181578 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.507707413 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.560928145 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233411117 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.35798034 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.221215997 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.436392303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.356057853 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.451574846 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.198428276 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.23311325 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.204365416 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.199475539 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393391281 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.418682585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.222117049 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254717293 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.830696134 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051732529 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201494967 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.242537495 seconds)
  done (took 150.28723353 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1986112 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199068819 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19961828 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199859927 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232058875 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199078085 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767182503 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78757242 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.713137126 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.461642075 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.633088275 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513372604 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.203128648 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294196944 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211781617 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199547618 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216130209 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.24406738 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201334554 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199984654 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787736184 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217243468 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.219528838 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397574434 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215964269 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233577716 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590645965 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200272761 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232336829 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532668329 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250523442 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201037368 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604239402 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.455066751 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316433201 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202618236 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233725144 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200974837 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483182078 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202112786 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201774504 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204452437 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905286337 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206425575 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.769386898 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201880325 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.181931383 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20511936 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202729099 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.499642063 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.953442327 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22188211 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.202597338 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.204751562 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200820612 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201511613 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234821397 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.462076141 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299724995 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.219128534 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205461829 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234524309 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201617263 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.27677879 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222454037 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.463407189 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274606558 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.318688895 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779760922 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203729193 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297261584 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319366657 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.1984442 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198767913 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198185343 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19891212 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309119306 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198386846 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.601444792 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373025772 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.215635098 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.600565175 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.299814088 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19780948 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.606295825 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203289611 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198489535 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942078084 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197869607 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293151366 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197611136 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198474964 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197007735 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196925969 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.597723497 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770721769 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.469925327 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203062142 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198157344 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.452626828 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202000529 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.61685332 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.742664936 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.879041888 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203244985 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310676768 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37317908 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215264302 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198099011 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.577934752 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.2043083 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253714159 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203293383 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595723014 seconds)
  done (took 365.449424442 seconds)
done (took 707.826617823 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.803347626 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.810291378 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.915492947 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.793136773 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.760269876 seconds)
  done (took 10.207565888 seconds)
done (took 11.332220531 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384067182 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.383882568 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256712852 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.384830875 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231306626 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400851462 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363547581 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221019186 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299144816 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280574246 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298747308 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252925062 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23403923 seconds)
  done (took 18.116332151 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516457036 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525902814 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264333784 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527778166 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241277269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519272061 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402312371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416172848 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420319922 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234866153 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215166133 seconds)
  done (took 16.410634311 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524982505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537937741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268663665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529486271 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243335463 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528512863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406772492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425414636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41997089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235889498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215580617 seconds)
  done (took 16.463136813 seconds)
done (took 52.116522562 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210243361 seconds)
  done (took 2.336999085 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246108249 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41164806 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229824031 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216543119 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211716547 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.2128269 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217035518 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212077538 seconds)
  done (took 11.086257858 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208881607 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208510372 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211010888 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208595003 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208733745 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211173267 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208641276 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208981085 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207998675 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209020791 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21236196 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210986192 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211138947 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211709155 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211925377 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.21149447 seconds)
  done (took 20.489147425 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212181433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210325023 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208548078 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20950198 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208813081 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209385736 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210744178 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209538965 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209036981 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211162934 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210707653 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210621417 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209280756 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209373545 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21031009 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210500392 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209997749 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211062674 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214077309 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209933467 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210639707 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210011823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210800838 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210237312 seconds)
  done (took 30.177222198 seconds)
done (took 65.217558997 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.817526132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.834604397 seconds)
  done (took 6.781845141 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213450671 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212689832 seconds)
  done (took 3.556287753 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213375458 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212726733 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213181124 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212897363 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212779855 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213065855 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213447703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212823121 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212854524 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213205463 seconds)
  done (took 13.260619035 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212599495 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213282745 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211595019 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214352067 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213236396 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211661522 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213803081 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213582377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213985706 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211486365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.21374476 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211278364 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213405857 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211841876 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214289081 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211662324 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211309547 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212096752 seconds)
  done (took 22.960370198 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214117969 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213460539 seconds)
  done (took 3.558124975 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212986077 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211859075 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212210195 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212938968 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212352567 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.21202809 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212630779 seconds)
  done (took 9.618035309 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216080413 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.389184098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492376354 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823560147 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216398328 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219104669 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.045235381 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218403413 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220884873 seconds)
  done (took 13.972251647 seconds)
done (took 74.837278948 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.23100632 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.223962663 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.496993723 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.234837465 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.227889818 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.556372663 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.24650625 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.347946311 seconds)
done (took 37.698668752 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.214826076 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.189573036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.02997194 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200202867 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269227239 seconds)
  done (took 18.821769308 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.256121885 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550349324 seconds)
  done (took 4.939381057 seconds)
done (took 31.110386951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218259434 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216550851 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214143093 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216032759 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.215150881 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216869435 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.213872474 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.215776429 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216751361 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217252706 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216973101 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.217473161 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.216636276 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216965674 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215740863 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214143498 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21723643 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21511404 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214883993 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214557583 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217248202 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215470867 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215457769 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.2142509 seconds)
  done (took 30.317149255 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217896375 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216909202 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218027026 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21739227 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21521079 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218538335 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218260331 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216200801 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218369857 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.21805083 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214885529 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215842545 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218272416 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216043264 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218449969 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215997554 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218698458 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2160279 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219343645 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216406129 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218007439 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216861923 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215882966 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218458293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21633491 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217217794 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219068799 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21699552 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219047197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216514852 seconds)
  done (took 37.654292297 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224132402 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226881225 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220146693 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219741066 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220165839 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219418107 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219877348 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21974825 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220205408 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.219981422 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220214974 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21947885 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220306819 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220448397 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219850348 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221068631 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.2208075 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221161806 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220225978 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219773661 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221386444 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.220663399 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221406092 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220462956 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220598008 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221056727 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220810707 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22105777 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220629269 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220925155 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221454546 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221991261 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221887113 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221992411 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221056614 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221490494 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225750195 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22864823 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221487885 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222335982 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222208221 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220661218 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.222738038 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.221160861 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221650031 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222258012 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22196294 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.222035422 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.222159644 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222857542 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221621311 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.221957546 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.222454426 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.221908706 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222512379 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222626619 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22317721 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222732155 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222358563 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.222403335 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.223226098 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.222754769 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.222928376 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.222804487 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223614248 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.222815364 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.222797193 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223179177 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223147937 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.223813313 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.223942148 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22405181 seconds)
  done (took 89.111097793 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223976433 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221853784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222236828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221165604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221687981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224325294 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220731045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224134299 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222397024 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224357228 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224715482 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222279291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223016568 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224890321 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223921728 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221615671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22411362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221397032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.224701899 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225789483 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224715089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223210447 seconds)
  done (took 28.051030568 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225679536 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227442272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222289247 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225703501 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223377375 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225599772 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225645778 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226310768 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225883146 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222691337 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223196514 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225230058 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222360812 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22350504 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222852906 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22457664 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225771057 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224932218 seconds)
  done (took 23.184468434 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223733503 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.222838603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225533622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223088677 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224465633 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226706488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223330439 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226935837 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226256792 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.223766956 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226758656 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225691717 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229168763 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223933527 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227590847 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225390674 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227432304 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224676829 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227622127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224583096 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224917544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22670479 seconds)
  done (took 28.102939731 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227730357 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226791618 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22529622 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225091546 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22441506 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228290335 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228807807 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225910777 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229514492 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228604182 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225844174 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227884895 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227502867 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226774384 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225130879 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225697541 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228084268 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226251097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228596841 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226170131 seconds)
  done (took 25.681625904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228377188 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229539024 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229365373 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228904657 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229465604 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229139574 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229255137 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229816155 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229196581 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230085866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229538055 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228958344 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229534661 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230500853 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230019686 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23034007 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230349556 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230548395 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230873163 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231082593 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230631586 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230346177 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23070609 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231343775 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230971804 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230977707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231048695 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230996517 seconds)
  done (took 35.58688518 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231249914 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231355052 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228521778 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22932888 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228890399 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228431563 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.228741732 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.228583988 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231291676 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229080889 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.232374086 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.231248313 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231742037 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231945356 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232433873 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232053283 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232042233 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230005742 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229852491 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230492967 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.231735322 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231470859 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.23329244 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229463945 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22970827 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232982366 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229721347 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230146762 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232657027 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229993791 seconds)
  done (took 38.068453671 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.250922298 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250445593 seconds)
  done (took 3.649311636 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230835365 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23269645 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.232299393 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231326326 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230648895 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232966207 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234855621 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230627159 seconds)
  done (took 11.003906978 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233575376 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234862573 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234560162 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233483018 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233824824 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233750288 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239938569 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254293416 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233499594 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234662595 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240454383 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241499128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236038937 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234387413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233761202 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235221222 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235156043 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234675369 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235869192 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236288323 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235221119 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237029067 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23657467 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232986407 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236617595 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.245879264 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259186645 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236904842 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235717555 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238489913 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235350019 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233929811 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236319992 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236348703 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237415303 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.236267545 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245585983 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254192631 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241960709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256870388 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237379414 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234850691 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237971221 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238080656 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237024253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237333938 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.237306452 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235456363 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235923448 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240418803 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243276952 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236388651 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23513119 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239022816 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237710924 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244738494 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.255608935 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241117652 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246096691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.248122144 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.269158213 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26307275 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239348545 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.236955425 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248015742 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262863991 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244477216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255460438 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23626518 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237861001 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243954584 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270061912 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263644935 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238964183 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238871428 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.239164679 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238227969 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238949423 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24581113 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260902604 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239463959 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23921467 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25386644 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262310328 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23874447 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239528727 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23995461 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239559162 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240416097 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25072415 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258346769 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240322215 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239016169 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239927666 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239887794 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.240259742 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239032956 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240746139 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238141817 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241355926 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24164963 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243267248 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249411574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240837889 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240861319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247373921 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260962701 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240628211 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.247616453 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241463398 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240415621 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242691802 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246883035 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239437091 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244343215 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248990942 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.240550833 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242803766 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241043008 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243652727 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250821887 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269400545 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242453275 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242586321 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246631204 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253959071 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241645752 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244813162 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243429284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239748438 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240058462 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2438142 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.242747308 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242647984 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241703137 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242401974 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240338398 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243187394 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242869447 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243061183 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243494185 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243311213 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243628621 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245369881 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243323257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245455676 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250128742 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262281122 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.24401938 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243232632 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24104253 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243891251 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244017155 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243806867 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242419999 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24442445 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243449686 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243873654 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244267623 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.244764299 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245492685 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245050534 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247961609 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.244329121 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.24765439 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243688258 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242790431 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245152901 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24549192 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242942376 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245790035 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242997835 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247086361 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252905807 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245889238 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244415462 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247126273 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245021968 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246152222 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245997788 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247964751 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254720693 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.245578821 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252146275 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.26537318 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246261948 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247073659 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245811272 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246483389 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246557511 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248703098 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255213615 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258007223 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271867024 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247346647 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251852056 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247395086 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251019647 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250937593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246782274 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247801628 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247592188 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247066449 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246798039 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248034793 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246755102 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246850371 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248501617 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247906257 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248132872 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248384603 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247456031 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248850884 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245116845 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248810518 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247583499 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247391032 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246245624 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246800705 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247537666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248747985 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247402467 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252892168 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246449969 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249545739 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249757476 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249069183 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248129153 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.249902776 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251110653 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.248415705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255189391 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26734109 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.249862704 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255335937 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.268198805 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24832477 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251212015 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249581229 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246562528 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251874079 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258198097 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249836126 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249785594 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249326243 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24968914 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250251274 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254472097 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267362535 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250002489 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.251946747 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250288805 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248844245 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253015905 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.25029773 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251119329 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252423067 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251896596 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251868076 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251432111 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250533116 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251557174 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251742687 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253231724 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258678182 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254696479 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250667921 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252932732 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251811004 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256004851 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251332646 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25149256 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.250819031 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264377647 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276646094 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257951001 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.271981643 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252803023 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257629051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271465805 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255049341 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252719519 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252537619 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252090628 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251813645 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250685842 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252970986 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253353852 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253259929 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.252664139 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256679576 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254981829 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252942938 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252099648 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252666525 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.253947428 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252224294 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253886629 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253352977 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254968617 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252033047 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252374444 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260715577 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273995412 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253437148 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.25336377 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.252268124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.253047922 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255257728 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252790879 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256868506 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261005441 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257343676 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263704837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255521475 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26334862 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254328145 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257085448 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261832692 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252540612 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252895446 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253890169 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255463162 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262154777 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274872936 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255595433 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259500155 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254542358 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25548332 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255078732 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256027416 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256097364 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255704399 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264049331 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.27495542 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.259957115 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258188467 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253837339 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256290834 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257043793 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25495181 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259836034 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25533668 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257170507 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.255176097 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25597293 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.256680745 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255912398 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257176343 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.25461335 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.256643778 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263099207 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277620812 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260329979 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256879217 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264151293 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276448795 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262665664 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277220807 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257849381 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.257715901 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.258538464 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259023558 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256327843 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258291413 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257702743 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.257654445 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.263401776 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257422794 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258772168 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258303126 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.257914464 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256760101 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267774288 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282407713 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.258987318 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263436586 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256860462 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259450882 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262827827 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.25855687 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257894419 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262154912 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26979759 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267289786 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258919349 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.259131926 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259908535 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258955134 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.259552708 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260398585 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.259431554 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.260044043 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258914353 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260356132 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261369037 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.260477529 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260253794 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260676048 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.260172396 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269495564 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.278655588 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260688123 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260666407 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.261813369 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261027415 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.260011617 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261174684 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261045109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260457716 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262091681 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268340581 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266470116 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262794247 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260203814 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.260905195 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260692971 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.261099732 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262107177 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.261631831 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261315854 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262084469 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261427427 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261428618 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260781257 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263170128 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.261660138 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263454145 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264554422 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269820863 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262193817 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261331422 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.262928413 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26309895 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261050767 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.262116762 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269473373 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28506511 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272673373 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271679755 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267112022 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.262114598 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266556121 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.27229032 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.261729195 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.264506978 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263184119 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.262735508 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.263513039 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266926944 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263905788 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.268916029 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283005787 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.263447069 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272666794 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284281957 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264485089 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.264567149 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268293201 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.263806127 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.2625544 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264950769 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.26349401 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270647837 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285744689 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264279758 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265519729 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.262965953 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26639237 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268235198 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266005756 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.264780782 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.260695387 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265858486 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264297552 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265532013 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263168585 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263025284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.264856986 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.269124086 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.271335327 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262909741 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267292273 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.264870256 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266151531 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266741312 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266834996 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263640511 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.264356287 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264588931 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265594546 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.265225492 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267293411 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26443719 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266242435 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268508322 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266933256 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269220612 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277568555 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275731595 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.264283455 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265594941 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267967602 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270002966 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265946256 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.266165151 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267323316 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.268218358 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.267680779 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266615458 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.267888666 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270976211 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283322205 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287489648 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267923429 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.267850417 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271046528 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.26814598 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266005026 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26902114 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270067668 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270159545 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275871965 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267687577 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274569719 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28813768 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.268753404 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272432871 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.271515227 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274789744 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.270044861 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268264672 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267953801 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272383436 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284718031 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270083157 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278858591 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299151617 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289278589 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.269898651 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269064552 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26741388 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269199959 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270538029 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269317715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271090018 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271449256 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270162585 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270116234 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274847901 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269944367 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.271493242 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.270359249 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268625228 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.269343289 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268591007 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.269133431 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271056343 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269892499 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269436204 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.270070313 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270640457 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282191401 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29687998 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.271498338 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270466851 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.268723678 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.27388006 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.275233079 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280565763 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279514574 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.270399146 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271109651 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.2728778 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270217902 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270736019 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27163962 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.270724634 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271109037 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269846922 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283663357 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297465826 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276151783 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271504977 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272170604 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.272627212 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272348793 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272773563 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272735991 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272666462 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273661212 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27638984 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273074564 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.272892278 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.276146756 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280641116 seconds)
  done (took 749.918035146 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272050115 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270263246 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271385428 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27068542 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270260745 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271013573 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271951327 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271917915 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271336821 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270915213 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270837815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27184844 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271552288 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271451908 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271920867 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271527843 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272088207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271730895 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271877364 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271648482 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271922513 seconds)
  done (took 27.886168302 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274568121 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273240009 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272284784 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274376443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272592348 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275537665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272098808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27493115 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276089783 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27294457 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276628601 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275343502 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272840028 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.272907931 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273263867 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275478171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275768669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272475413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276299436 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273812724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275589656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274363494 seconds)
  done (took 29.219753354 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275491371 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274690558 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274029533 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.274140053 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.276258982 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.273075708 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276268466 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.276048155 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276929746 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.275452397 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.275296557 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.277946992 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282099003 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.282411627 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277209737 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.277753279 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421229471 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276391423 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.275840715 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.277002321 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.273920994 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281739356 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.296921806 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.274818868 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.275847055 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277056015 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278780309 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.277269258 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276777065 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.277986127 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281306495 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.277890164 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.278792384 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.278828689 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.276597137 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.278854019 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282289736 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277707599 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.275807784 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.278591638 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288569705 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29977131 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.278520546 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284153525 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299537682 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278612079 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281504277 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286627613 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277069068 seconds)
  done (took 64.016888755 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.279513027 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.278338512 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276829195 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279167293 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.279453014 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.279230549 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.280104803 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280010558 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.276617545 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.277020663 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279731545 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.277860048 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27660442 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.280348695 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280084271 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277635072 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277461031 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277494729 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.27764128 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277528188 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278834154 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.279918733 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.280887957 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277911596 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280812701 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27861145 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277726477 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281664736 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.278284894 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279082843 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280971484 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280857677 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281953326 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279151642 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279192562 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281898268 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.281675142 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279298548 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281133632 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.278811265 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.281996019 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281615925 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281783375 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283114558 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279772597 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279442033 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280010313 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.279650704 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280914421 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282012984 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283162604 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279529325 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281970927 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.279743655 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283234219 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281615031 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.279996517 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280146351 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.282105572 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.279656117 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280063749 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282530317 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281487134 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283134493 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283066006 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.280974826 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.280672286 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283440648 seconds)
  done (took 88.236290629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281580174 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28123885 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283073609 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282102892 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28173516 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.281549739 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281323997 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282052729 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281561364 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282051782 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28320403 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283885283 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283661996 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283363096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283969508 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283764204 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28280742 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283125543 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283102948 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282444117 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.283515061 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283345109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2833119 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283021504 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284352552 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283392388 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283519644 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284293552 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283877063 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283806911 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285673747 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.283650229 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285211334 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283533536 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284888795 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.284830745 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284240128 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283593428 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.285446506 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285553431 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284231484 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284648586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284206827 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284610035 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284303456 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283901053 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285280486 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28444762 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285713285 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28520426 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285119418 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285406708 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284848193 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284542865 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285474058 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.286578038 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285118442 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285430499 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286170536 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285320182 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286354682 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28749442 seconds)
  done (took 80.805661851 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287554104 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.287277918 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.283959355 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.285002428 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286725517 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284301042 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287170831 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28841724 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287529855 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.286975892 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288064971 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284676284 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285166665 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288022536 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286375659 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285001871 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285808597 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285258976 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288443649 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.285089446 seconds)
  done (took 26.925295948 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.285456039 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287768738 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.285506814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286237367 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288432153 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286474737 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289064497 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289220553 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286383421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289195744 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289010213 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288342295 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287333329 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286847062 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289200247 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287982993 seconds)
  done (took 21.801898381 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287210594 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.28919383 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287755873 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288631281 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.286613741 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286501767 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.289915863 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287141259 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287800349 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.29073356 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289533742 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290054116 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.289635241 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289805557 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28771399 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290797279 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.287648652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288010218 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290774304 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288820693 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288610099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288137602 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.290057521 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.290933831 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28811696 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290171621 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.287895521 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.288712421 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289394302 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291293423 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288835816 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289657261 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289623792 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289329609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291568753 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289744666 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292181118 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292184526 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291564474 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291278812 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.291759882 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289595886 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292036165 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292523427 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.28875223 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291895078 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289520762 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290616658 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289309033 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289754889 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292235258 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291732464 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292374295 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293498477 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292796126 seconds)
  done (took 72.143432462 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293211657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292213203 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289472333 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292271818 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292921331 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290490692 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.293767613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291876705 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289927879 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292939508 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291655812 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293736336 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290306007 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292882538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291796372 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292973667 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291948054 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291254637 seconds)
  done (took 24.459444344 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291209235 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292315205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.294497862 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291293831 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291105429 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294241082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292124306 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29506831 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294211992 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292075607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291514657 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295005648 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295156848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294753022 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292785565 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292354911 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295886501 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295031798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292713358 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292592327 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29512471 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295203889 seconds)
  done (took 29.660652642 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.293221256 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.293091338 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.293290249 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.310111715 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.313295239 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.316679503 seconds)
  done (took 9.02445362 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302948751 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296519044 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293496182 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297035522 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296358807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293619463 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29378859 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293855107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296703349 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294335399 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293130895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297224711 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295956504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294348936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297085571 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297345492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294456726 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294563203 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295831845 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29737885 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295219664 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298112316 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294608451 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295129315 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294908979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295339097 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297251346 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296320475 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295553749 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297363926 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298147068 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295440842 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29911251 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295885142 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298615307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297843753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295575829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298593026 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297953446 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295701862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298591924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298729597 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29820962 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296006695 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299056541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295678909 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295355797 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295809266 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296754649 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299394597 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298063316 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296529681 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299316979 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299185331 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299471815 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300474859 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29807411 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29687934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299444475 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297819961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297398632 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300007895 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297232318 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29807783 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30044526 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298405046 seconds)
  done (took 86.830071257 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297837348 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297519746 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297882538 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298240798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298067556 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297999671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298071167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298201666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298018624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298705834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301504501 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298191898 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297802345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298540607 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299998756 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298631191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299056501 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299223271 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299339765 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302538938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298344126 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300865316 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29924592 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299446027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300164369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301687379 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299217882 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299714899 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299348234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299623709 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299662374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299979977 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300185611 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30074817 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300323739 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299803217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299666619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3013 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300722777 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302225558 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300303321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302213921 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300817298 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300227615 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301083541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300805369 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299503994 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300803295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30081596 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301621816 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300224124 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301889732 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300713625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301090202 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300520096 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302150334 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301046752 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301065977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300602387 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303677405 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301423686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301706995 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305079153 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30203982 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3013118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302100499 seconds)
  done (took 87.024117573 seconds)
done (took 1749.497604695 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464428829 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418425715 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30116559 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.297151575 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302088632 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.312872571 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.300139412 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302151013 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301614434 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302037965 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301852208 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489243476 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.303416071 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303961177 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.302922638 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39726682 seconds)
  done (took 42.615637849 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33289069 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310024082 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428481647 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.333325013 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331197121 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498907504 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367208839 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307907676 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.491530049 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.357352102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.032572069 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337484255 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307747936 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.513571366 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326822456 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.499277453 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574190814 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.948081959 seconds)
  done (took 30.513637949 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.788007513 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.306375256 seconds)
  done (took 9.310241318 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.327840068 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308239366 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31142337 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309969667 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.302649468 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302427577 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306914561 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.304010242 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.197307649 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.440264494 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.313731037 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.318612597 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.328674593 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.308004626 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.306108012 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347745433 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462577543 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306741152 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308562024 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314728501 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.307640659 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417922743 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350681637 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306572943 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439156512 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.180600222 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.309352403 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315796839 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442110402 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309237833 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307950466 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308630537 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309132798 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21226901 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.799935586 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.322019072 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33365639 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317448077 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307061172 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.469366263 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31019545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31536742 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.300021178 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.790903625 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441624701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427982576 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.584874821 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.327527733 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310377329 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.373450272 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.315412296 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309265749 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35312077 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.097033583 seconds)
  done (took 110.977056072 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.330603251 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.69450576 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469055636 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.318705417 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.089774802 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004243887 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320018509 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.604274907 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.341813535 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301272211 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585690536 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821577819 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327998141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.316153985 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.308287906 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.300165893 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301201472 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.074784559 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322970583 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.303448679 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800925026 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305219608 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301471012 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.43776638 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337971077 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759658645 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.759597505 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.769459221 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314994459 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300098844 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769059002 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325950229 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.354466621 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302247914 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.571301824 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.666438869 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657919811 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.318508902 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.300592639 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303495039 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.325648898 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75461082 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66281665 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317808502 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30541531 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759275388 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31698596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.310361604 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301043133 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502077267 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.169260168 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302396357 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.739272242 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.307112711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.591710422 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.359794561 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386787117 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789484419 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318416824 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.402716018 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360707552 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301242926 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305953847 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30492317 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306135009 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653179904 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70238782 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303798365 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65293978 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.782772628 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319925645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.833818482 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.118575171 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327248143 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.355240123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303529318 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.834382046 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818712905 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.359678015 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30251844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658967632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.326178153 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591295385 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322135211 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327805645 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813907285 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.304974618 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.316959795 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.315261722 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.302534915 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.926712036 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305332389 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.57720148 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.338005908 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303595617 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.303440107 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.305741958 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304572235 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3093172 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.309754987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83864527 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.326240378 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.420898526 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321781751 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304209687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326241266 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.307478474 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303922201 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5208875 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.765721961 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328318369 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306148043 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.304622205 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307980406 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.450403295 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.312109596 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.630301941 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329470871 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305553739 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311570304 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.042286598 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342291515 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304832007 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.332353628 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.201471223 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.515143239 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.334592686 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.305032772 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305468277 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323870081 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.617566719 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326870263 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.356643286 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309204985 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019595962 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.341080249 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316816947 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.832977917 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.309908003 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.206094267 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337849677 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307732207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608945188 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580150715 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.600617086 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310440332 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.324883504 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012723438 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.326548263 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445404134 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327121893 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.364653884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505309556 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.442230355 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309969493 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.913778985 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307470514 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521351004 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308549548 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604716976 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802861678 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326954464 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3120182 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.018233518 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.039563016 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.956326814 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309472451 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.590430137 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.283531408 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.783663306 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308008987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.308328267 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.753062818 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310454194 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31524221 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.308566062 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309333978 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.463321384 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482063416 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.917248453 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31116051 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777967332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.407574512 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323546854 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321367542 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312644125 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.658085048 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.399245337 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.30894335 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.319744249 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.310475743 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319291744 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799036532 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.169618515 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.315454993 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460907153 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949864665 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.333526194 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311660111 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.950745726 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.622770143 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841218336 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.371594003 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.63735334 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.33653315 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349121684 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.891983399 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396090579 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801643949 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33366376 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.315955515 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9095879 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.334027322 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.361731223 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311147945 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311677967 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.851726955 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333907477 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316747249 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.624485243 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333237 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559933394 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.311881836 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.358513432 seconds)
  done (took 1105.357590203 seconds)
done (took 1299.98687295 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.310867731 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317283655 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.297234969 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316812299 seconds)
  done (took 26.470275182 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.330256757 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318371426 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319697709 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317604724 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321367759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.318335449 seconds)
  done (took 9.154010349 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.453259446 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.320375531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318195953 seconds)
  done (took 19.320231782 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.529127235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.616590455 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.655487092 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.532655587 seconds)
  done (took 10.563338632 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320640391 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321032596 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319770034 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323305406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.33094153 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333425129 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322589819 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323146295 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.333120015 seconds)
  done (took 13.155530614 seconds)
done (took 79.891829781 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.314371384 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.92480481 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.342429626 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.288423806 seconds)
    (5/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.347303925 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.2949362 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.572798205 seconds)
    (8/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.309838505 seconds)
    (9/286) benchmarking ("sort", BigInt, false)...
    done (took 6.35211102 seconds)
    (10/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.306817399 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357978531 seconds)
    (12/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.353200724 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.304740642 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341703629 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.379243105 seconds)
    (16/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330000417 seconds)
    (17/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.830267031 seconds)
    (18/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.488375736 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.179154134 seconds)
    (20/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.998291593 seconds)
    (21/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.134369044 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.421811109 seconds)
    (23/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.153546924 seconds)
    (24/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.334205466 seconds)
    (25/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.088301257 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.306463843 seconds)
    (27/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.297573484 seconds)
    (28/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.537898354 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.310188752 seconds)
    (30/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.294195557 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.295700206 seconds)
    (32/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.191397222 seconds)
    (33/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.508215024 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.332731312 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.203285366 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.314808307 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427223869 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.31101943 seconds)
    (39/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.059037144 seconds)
    (40/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.148938974 seconds)
    (41/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.295762093 seconds)
    (42/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.297051554 seconds)
    (43/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.379400734 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.249462834 seconds)
    (45/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.297520035 seconds)
    (46/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.159070635 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.430300512 seconds)
    (48/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.38208327 seconds)
    (49/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.746098822 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.597218176 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725606523 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.967055457 seconds)
    (53/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.296932427 seconds)
    (54/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.377752009 seconds)
    (55/286) benchmarking ("sort", Float64, true)...
    done (took 6.330774658 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.357808458 seconds)
    (57/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.583765449 seconds)
    (58/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.10214192 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.690114429 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.569741382 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.395021761 seconds)
    (62/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.318110267 seconds)
    (63/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.596834126 seconds)
    (64/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.317908853 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.317513302 seconds)
    (66/286) benchmarking ("sort", Float32, false)...
    done (took 5.338811337 seconds)
    (67/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.297678639 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.983091353 seconds)
    (69/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345019767 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.640187347 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.829514342 seconds)
    (72/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.313760203 seconds)
    (73/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.298433218 seconds)
    (74/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.299600281 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.974756906 seconds)
    (76/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.298472499 seconds)
    (77/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.934424343 seconds)
    (78/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.307125001 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.906118013 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.416046287 seconds)
    (81/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.42158332 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.578669981 seconds)
    (83/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.330188911 seconds)
    (84/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.682782133 seconds)
    (85/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.301771618 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.171576304 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.319554588 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 5.538424159 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.54153436 seconds)
    (90/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.420011034 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.023839534 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.13004317 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.299822949 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.898032686 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.433009585 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.299738141 seconds)
    (97/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.563112479 seconds)
    (98/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.320885055 seconds)
    (99/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.07576356 seconds)
    (100/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.299827561 seconds)
    (101/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.367714349 seconds)
    (102/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.321664845 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.018974745 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.876963049 seconds)
    (105/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.320457193 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.260792211 seconds)
    (107/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.099781372 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.271154686 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.456910507 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.836003263 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.520374379 seconds)
    (112/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.424656234 seconds)
    (113/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.406217375 seconds)
    (114/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.502628417 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.553796584 seconds)
    (116/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.530363883 seconds)
    (117/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.194705373 seconds)
    (118/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.331547573 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.335796794 seconds)
    (120/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.647440832 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.301985801 seconds)
    (122/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.406884004 seconds)
    (123/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.754796207 seconds)
    (124/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.348238829 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.343500571 seconds)
    (126/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.306086629 seconds)
    (127/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.826338968 seconds)
    (128/286) benchmarking ("sort", Float64, false)...
    done (took 5.63311022 seconds)
    (129/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.906003587 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.84019686 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.364065071 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.588853261 seconds)
    (133/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332604388 seconds)
    (134/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.720191173 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.102929759 seconds)
    (136/286) benchmarking ("sort", BigInt, true)...
    done (took 6.322511555 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.584345701 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.729893423 seconds)
    (139/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.822123488 seconds)
    (140/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.57918217 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.825499613 seconds)
    (142/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.435472516 seconds)
    (143/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.34236371 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.435260452 seconds)
    (145/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.349185962 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.302491759 seconds)
    (147/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.388468076 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.124025002 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.349783926 seconds)
    (150/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.850600025 seconds)
    (151/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.751901689 seconds)
    (152/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.460937083 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.343477954 seconds)
    (154/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.163654842 seconds)
    (155/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.140420571 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.322534996 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348626632 seconds)
    (158/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406622437 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.379259292 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338665438 seconds)
    (161/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.351699604 seconds)
    (162/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.419908495 seconds)
    (163/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447294789 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.788678326 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.33406427 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.344579682 seconds)
    (167/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.303875563 seconds)
    (168/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.342634122 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.21895519 seconds)
    (170/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.340818987 seconds)
    (171/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.307303581 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.447148179 seconds)
    (173/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.043368025 seconds)
    (174/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.371032838 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.646156851 seconds)
    (176/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.304666444 seconds)
    (177/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.740514157 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.78427599 seconds)
    (179/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325516782 seconds)
    (180/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.927166707 seconds)
    (181/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.368714264 seconds)
    (182/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349575288 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353353015 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.306015865 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384182214 seconds)
    (186/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.445565864 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.416034333 seconds)
    (188/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.509775348 seconds)
    (189/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.692168062 seconds)
    (190/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.810471924 seconds)
    (191/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.326453439 seconds)
    (192/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.426098707 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.325570725 seconds)
    (194/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354532402 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.353048005 seconds)
    (196/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.511567961 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 5.443685801 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.401533663 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.792514372 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.213332967 seconds)
    (201/286) benchmarking ("sort", Int8, true)...
    done (took 6.327137864 seconds)
    (202/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.323976399 seconds)
    (203/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.830271738 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.447012499 seconds)
    (205/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.37786907 seconds)
    (206/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.821372749 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.993482736 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531430264 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.353695601 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.199688639 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.780039846 seconds)
    (212/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.194360094 seconds)
    (213/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.799139025 seconds)
    (214/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.414797343 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 4.348993666 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358245719 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.327781001 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.350948816 seconds)
    (219/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.454650489 seconds)
    (220/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.327785303 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.389197686 seconds)
    (222/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.308225566 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 6.328780703 seconds)
    (224/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.114560356 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.743020566 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.211875525 seconds)
    (227/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.803943991 seconds)
    (228/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.433002355 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.308093172 seconds)
    (230/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.588602709 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.311980984 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.453485224 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.346575216 seconds)
    (234/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.163896945 seconds)
    (235/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317098837 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.722776617 seconds)
    (237/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.30909148 seconds)
    (238/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.457230836 seconds)
    (239/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.718350107 seconds)
    (240/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.331548013 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.75469065 seconds)
    (242/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.389002282 seconds)
    (243/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361318535 seconds)
    (244/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.970279892 seconds)
    (245/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.970173762 seconds)
    (246/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.714804448 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.562387819 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.703807786 seconds)
    (249/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.325955275 seconds)
    (250/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.341973627 seconds)
    (251/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413654076 seconds)
    (252/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.188568135 seconds)
    (253/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359699823 seconds)
    (254/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357811375 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.714390733 seconds)
    (256/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.571673698 seconds)
    (257/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.315637656 seconds)
    (258/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.395765761 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.721139106 seconds)
    (260/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.339434125 seconds)
    (261/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.973638863 seconds)
    (262/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.88567566 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.351102974 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415104368 seconds)
    (265/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341446794 seconds)
    (266/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.446123224 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.209830412 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.413981066 seconds)
    (269/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.541845077 seconds)
    (270/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.376336673 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346553753 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.44174206 seconds)
    (273/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.328235613 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.142380049 seconds)
    (275/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.691553525 seconds)
    (276/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.434720822 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.990716079 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.313749315 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.374379813 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.4182615 seconds)
    (281/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.311361192 seconds)
    (282/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.325142332 seconds)
    (283/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.787473403 seconds)
    (284/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.662268768 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.354984423 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.359041118 seconds)
  done (took 939.513214293 seconds)
done (took 940.744025856 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365182502 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368153162 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.342687919 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.364415221 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.462182054 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.371279532 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.354657178 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.345068237 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.390907392 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.393212923 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348784993 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.371115285 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.351871161 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351542789 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.343195822 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364444031 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.434013779 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351566861 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.367453253 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354701857 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.367313097 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350019657 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393725123 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.371492212 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.348169449 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.348326902 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.354471288 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.371836687 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463179888 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.355310697 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349594993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.36404004 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.432360692 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.344079329 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.341349566 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371556195 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.363173124 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355547525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348533823 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.383956897 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.850947638 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368734836 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354620204 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.346809095 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.346446731 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350562731 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353527929 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353336091 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36610289 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367960592 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.837920063 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.384489988 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.356336669 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.347801727 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.357293464 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.353181157 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.350589679 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371178588 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.372847152 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371627366 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.419947804 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.351446627 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349592435 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.369839729 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361562589 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.875305805 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.360007015 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.351512945 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.854479492 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.370500878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.876686502 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380121977 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.349266001 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.368741871 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.387514116 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.436291181 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343324422 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.347439354 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.362324682 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.352502979 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358290138 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369086874 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353468187 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349478014 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371246445 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.375681892 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357925059 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357240653 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.359413952 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.375129502 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.36367285 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.368570255 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352706902 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34493663 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36000356 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353083212 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.359249316 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.3579189 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354705293 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360817576 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.855076227 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392020619 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.347363231 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347159289 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.349835407 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371212799 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.855605199 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.374723683 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.37121463 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.397255719 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352783589 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.424805171 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.360391485 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37540318 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361650151 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353800422 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.346440275 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.426693201 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.845722833 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390294364 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35306789 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.35605185 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376514852 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.353513259 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348278745 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.441168181 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35255628 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373188049 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.478941462 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.362065064 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.390851554 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.356277317 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.35443409 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.377200677 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376112767 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388886057 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355853535 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375950688 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.374340184 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348153316 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.369716874 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.36292197 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353696409 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358491546 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345731431 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.37508486 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372757603 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373503126 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.374487219 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.479630075 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.351385602 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.428872321 seconds)
done (took 229.20211186 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.41186652 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.34967283 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.43481763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350328441 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.450490817 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452875807 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.347628796 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349202761 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348743175 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.728503893 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347937958 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.349202513 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.342596515 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349517988 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.433827066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.351702191 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.348176803 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.690854351 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.351196198 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420205481 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347010387 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.349101614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352470123 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.787627832 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.345925835 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.350650116 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.421051007 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352349641 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699740552 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.350991378 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.350266297 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.700170117 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441481601 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369854029 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.362103166 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.359238627 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453093398 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371533297 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433692713 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.4335029 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.43810064 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.390479105 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.351032234 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.35321869 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354605068 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.352518871 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.352042271 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379553908 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.350633152 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352181036 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693409315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363879144 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360905003 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35300656 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.350908854 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373505099 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352301216 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352956402 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.442757207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353666795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416150726 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.790479248 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.730348053 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353867925 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.351181409 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.352992594 seconds)
  done (took 149.765910039 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.419543475 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427513235 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467034418 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371078544 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.404191733 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.471666443 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.37071623 seconds)
  done (took 11.191484311 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360381228 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.356003127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403940855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.403987632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353915551 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.531787095 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355588545 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36570573 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351707166 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.407314147 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.356894349 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356746549 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.363081039 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.348874056 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.403255493 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.365295732 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.470036291 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.355994816 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356148698 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517207297 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354196217 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364028931 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.408537169 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367645089 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357586147 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.36199625 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.179231717 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357199449 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35377977 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357014185 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354591085 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.431452501 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357979929 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.354834363 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354696567 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47222483 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355893122 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354393038 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358245618 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.349854231 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357526552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.357334413 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358037597 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355526567 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.358095134 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380031949 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357402412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358057987 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.358096817 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358631532 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406990118 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35854918 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.355953642 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.356197225 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.413563679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36620449 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358555683 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357255812 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359317866 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356690499 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518190151 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405813993 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359288518 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405036942 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36144109 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362502492 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360336085 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.359185479 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413236323 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359745443 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.407066338 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.3563367 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.544543835 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38197222 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364227828 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363782178 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364623537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360119207 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.355359469 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364586215 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.357308253 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.359402913 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365469734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361403861 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358109819 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528219978 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468649579 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358529145 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372326387 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366095331 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.3586018 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.413923917 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363349896 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36206307 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416046769 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477202057 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413501648 seconds)
  done (took 156.008199885 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.364785286 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368152647 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362562735 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.383289337 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.380077678 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.359890233 seconds)
  done (took 9.485061876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.363259805 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.363197402 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.361313409 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.361461534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361681958 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.361824275 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360284126 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362939346 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363936189 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.36190795 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.362364216 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.365663439 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362987603 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362004963 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.361011899 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36282368 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.361892804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.360881796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363371686 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362813438 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.469748972 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362005509 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3618718 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362756876 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.368014721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36230455 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370164218 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.363762794 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363411699 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367598107 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.381616973 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.364827889 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.3635652 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369484802 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.366972 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.362654838 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367595962 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.368209793 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361324631 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365123123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367219265 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362721917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364735669 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36798728 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365370915 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36953505 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372904294 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3708372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36453841 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.367928326 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.368090477 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365096389 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366044597 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.368775503 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365081083 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386028704 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.372772453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365035443 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365876941 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.365866619 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368950124 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.3665313 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366540267 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369234142 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.364139136 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368840734 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.365648424 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370545209 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365833029 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366929135 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.370840116 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364845512 seconds)
  done (took 100.710577807 seconds)
done (took 428.41877912 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.84212118 seconds)
  done (took 8.113872369 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.698949584 seconds)
  done (took 7.971671047 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.976940804 seconds)
  done (took 23.256133647 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.411158214 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.393331246 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.367757131 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.36698018 seconds)
  done (took 26.811341481 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.841630798 seconds)
  done (took 8.112592931 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.361247993 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.359136874 seconds)
  done (took 13.993870049 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.596203295 seconds)
  done (took 7.867596511 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.371120162 seconds)
  done (took 7.650814229 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.360133546 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.400559937 seconds)
  done (took 14.047524426 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.339713622 seconds)
  done (took 7.612674075 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.800341801 seconds)
  done (took 12.073830764 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.371193556 seconds)
  done (took 7.646918948 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.421169497 seconds)
  done (took 7.693337844 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.767069961 seconds)
  done (took 10.038956242 seconds)
done (took 164.164409837 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.358833566 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.360754377 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.360124596 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.360298606 seconds)
  done (took 26.712079553 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401982761 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402532621 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403618399 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.413273394 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406248484 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.402935666 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394595302 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395419131 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412887045 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405634334 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405198247 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.405518787 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403893754 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394903994 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405521009 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404952908 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.414376337 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404557586 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396123084 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40632221 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.371152295 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414335977 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.406010164 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371046518 seconds)
  done (took 34.91653658 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890599396 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439607252 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521524571 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42105935 seconds)
  done (took 7.54734714 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42085989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.423744352 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434579233 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47291943 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.507703613 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.433885282 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.397068448 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.391384858 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379486506 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.424158234 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.499462905 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439518005 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520566211 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.371035677 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563721207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.371210015 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.371181938 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423145191 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.474841885 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.48830904 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371967323 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.422918577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.425911937 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440657895 seconds)
  done (took 35.745820275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.371770627 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39046892 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371837486 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.37080456 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.379909862 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.371218997 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.372088952 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.372539433 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.370784707 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.377827302 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.370201093 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.384636885 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.372087844 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.37060075 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.378245877 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.372333824 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.378038132 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.371647802 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.371566857 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.378397841 seconds)
  done (took 28.773689079 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.364389864 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218481103 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.717111199 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.620362966 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.364289706 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368035227 seconds)
  done (took 27.930959372 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.445959623 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.605327748 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.372293126 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.749870308 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.842314311 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.389540923 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372344291 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.627809951 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.968470895 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.964103845 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434932746 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.442365526 seconds)
  done (took 20.493780557 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.366758843 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.368986082 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.381440318 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383881156 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429411827 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.406197371 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.379552557 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366731884 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43389255 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.451677804 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39369579 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.432070755 seconds)
  done (took 38.072999873 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461600465 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419024793 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.36820378 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381026388 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101807568 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581900221 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434751138 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096040094 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39231597 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642933857 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377325715 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463670948 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626742001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381886893 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371752218 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.421130568 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620205548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869782718 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371889832 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.612387734 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402846927 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378628762 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.705213935 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617434438 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601270944 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353387003 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.632015848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145637616 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673765764 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391737171 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382379896 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370929999 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645166355 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042874275 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486560981 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594779316 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392536806 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.939299972 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.361964543 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.608713471 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392593779 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375961845 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381829646 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371371222 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306391501 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372451694 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12325535 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397742942 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.083395876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371780836 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652158054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471754095 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.376561539 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.945471762 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413935052 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.38229396 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.377098137 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464864075 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961053321 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.905780621 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382754988 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.311683394 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37142774 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.61528551 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019048384 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.39690388 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376020367 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377141161 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30853797 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.615180438 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394262965 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50982676 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399732162 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03427909 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167542103 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407437306 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306146529 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937166385 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378985256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.311511556 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602497343 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14974065 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313862882 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.321990311 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309730065 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121411438 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384074918 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.869052509 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401643182 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11928757 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619845016 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414329142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400085295 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598265891 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.254905628 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374990635 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.378966393 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494273908 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396663311 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101300547 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329699127 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.379992182 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632287598 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.586707483 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388659926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.438532042 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89372243 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412258759 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.3935626 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375495828 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602501947 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.011917967 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413669722 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.901244925 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39674411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152373737 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160415271 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391813359 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.383606858 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377434267 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676938851 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.20658998 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262872374 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444751877 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3824564 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376166255 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.655429563 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231708312 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.282103781 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.585062174 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397187385 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.391416047 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.378364115 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337044827 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.383774324 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378380304 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.155694194 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602463831 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391361128 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654354414 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313315053 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515898503 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396810122 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60381747 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.673761028 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406892971 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640035831 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379128846 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405323309 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396820695 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397585985 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479039245 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401266708 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.390722042 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636766801 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.38376802 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383158684 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.653296654 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165349362 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386163727 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.385439266 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378884278 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024820228 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371665095 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382955314 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272780148 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.395670997 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449360114 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386033107 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606027801 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.739506324 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397777396 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385698169 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377860289 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605734287 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390726488 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.643490322 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467254885 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.875075529 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023322185 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415061883 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.314417334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.092713488 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.074853348 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381373712 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.572712674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381656053 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605657482 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414595196 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381105661 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024139875 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404383747 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.638901996 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.394132392 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394122921 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.387121016 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382845904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.707336269 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956067448 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39185197 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399035891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526257621 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.396251216 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316422056 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900602802 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388431488 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383403941 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.1620418 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418083503 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.657541103 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217205854 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663969168 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384596645 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68200027 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.751653058 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.419609087 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.39864329 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398061285 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392944199 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.408521949 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391751699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.395343968 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.650594044 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.83795142 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950924046 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193920446 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974833401 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.740169011 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.418209231 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.272006748 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116730502 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339147167 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04367301 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632075726 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134062008 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362002147 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883902925 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.709583916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21424725 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669152747 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618275788 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713013811 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.419656409 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672797154 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601940484 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419539946 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3916041 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.31889696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.902324563 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966595967 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407248491 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464819623 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118304714 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406981081 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163298319 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.412624566 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.153259809 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815560316 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955103984 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78139316 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391052608 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395400329 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221540604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410618176 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916338347 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032188214 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414825238 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.887732402 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34765725 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615511114 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.417294161 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383126714 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.118521336 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.391792027 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.646903976 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668308921 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326066829 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397958229 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952291426 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265244511 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.393379295 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388699135 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178522994 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393779122 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70383022 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.39405099 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.77640538 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41583621 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322581343 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322795838 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.081229453 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398440782 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35825119 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892118622 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.396642021 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392024063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42875505 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242301828 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647308552 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.402859074 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014663676 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636753693 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390670606 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436482141 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.392280223 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399836831 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.370641837 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271217437 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085029666 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441020776 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616254791 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.419960914 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.289045379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.421354904 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60573722 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284237066 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389093203 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663273088 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.118589828 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.402718657 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200337367 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434880661 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398618812 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408607576 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4090378 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408966391 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479983005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617269807 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420726362 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40023866 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816811704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421962985 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393766224 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.404757125 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484280296 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.943892684 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.762685642 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.167453986 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012964603 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221190909 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039258068 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693253469 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3937678 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392743598 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325612741 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539695857 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921383477 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665567691 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510902289 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.410817527 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415285301 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391076964 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421579057 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609414205 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666993611 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267056745 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407256676 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060822052 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.551460298 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403427466 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.603539073 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899295588 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963304615 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51649174 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408275719 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134329421 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68782782 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483948725 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392605532 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986983075 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.415605358 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.171504702 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.398852048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393419933 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558272887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672573434 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073969002 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.422450104 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552942721 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.167573296 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.663759054 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654782375 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.896570513 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625830018 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040118693 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166768428 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661714343 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463982933 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623021488 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.525899422 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541579748 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.397764042 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294412862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394286888 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242774909 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.105279633 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.405384697 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021808247 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683039642 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.397028917 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.398981196 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418141243 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.405344207 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619341687 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153452594 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623817322 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406087002 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405487062 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.969281842 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023307407 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700442304 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334671986 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.401090556 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649388971 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652293834 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421815453 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849929344 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.106912768 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966041554 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372064464 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419081654 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396347174 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151758511 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035215918 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.766475273 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921484127 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057964033 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407243353 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677545157 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.401772471 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400285673 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678813184 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.400634321 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397858287 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633257487 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.04218723 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232271214 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.402820246 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.738889463 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.340879021 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626497224 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466308827 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339390331 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398404888 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.842158369 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423104788 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51795778 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409389058 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.407106378 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406193385 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.136518554 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691040905 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.403552967 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.378426967 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.379252374 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410716107 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499049607 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985957525 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425096938 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072739762 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.753345213 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657740839 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405698868 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.385588751 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403719137 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401362422 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123992317 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377576337 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420124584 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971635909 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.414687848 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416481429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402984493 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.616761803 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612463133 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401165716 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632069883 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422598762 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422551672 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.299423977 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172855129 seconds)
  done (took 1691.276663839 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421076392 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.451115158 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.439440939 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.41446306 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456323883 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45513397 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.48772152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.467417397 seconds)
  done (took 52.902452349 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.407115721 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.564668851 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.432777675 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.40847784 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.409605583 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.414513386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.896248964 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42710724 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.410030327 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.409825575 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.410121744 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.411084855 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.102114305 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.41062535 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.415692323 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.395422975 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.408772188 seconds)
  done (took 66.650161217 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.747426868 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.676005199 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.576072896 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.445813597 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.409549707 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.402542589 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.656970876 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.42962773 seconds)
  done (took 54.654943092 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418905531 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420007734 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420869957 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419231492 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.420261675 seconds)
  done (took 8.410171337 seconds)
done (took 2095.362746117 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.407154428 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.410356248 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406617248 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.410738008 seconds)
  done (took 6.947177585 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382145371 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.122926208 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.387606071 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.403944853 seconds)
  done (took 18.608000454 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.424952712 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.416031278 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.146236538 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.058627315 seconds)
  done (took 5.517502796 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.153075218 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.165770864 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.150788818 seconds)
  done (took 7.780500773 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.403143694 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.406519513 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.40631155 seconds)
  done (took 20.527641131 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704812378 seconds)
  done (took 3.017005331 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.55088204 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.599919566 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.71841084 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.72681446 seconds)
  done (took 7.908730538 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.7945401 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.780623209 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.589913398 seconds)
  done (took 6.476583762 seconds)
done (took 90.937086222 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.417754289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.651496996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.619068986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.390369285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.634834662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.613686892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.614904889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.354794561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.897412285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.888816252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.394502949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.635953168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.561762772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406281549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.561769723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.405355466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.636047309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.46170451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.075833483 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.27338176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.620837131 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.036126266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.223421179 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.050331502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.639000664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.571337959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.625804549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.651127764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.254818656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.640955373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.56642662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.416127115 seconds)
  done (took 197.104831238 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405131684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404609409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404801471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.419510861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409764436 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405539741 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.405346075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423073992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404466047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408361074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417624806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.406353933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.40810415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406025778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.424745887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.420607299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.405320437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405020921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.405659679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423695308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.404798725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.40577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.40583198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424052299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.406518408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408155472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.408404168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.406519151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405560456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.414228946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.40748966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410771278 seconds)
  done (took 206.437430225 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406474606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406347421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408773375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.424518841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.424651028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422452931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.424649785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413071621 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409084831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406832255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407287329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417762494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408682383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437212961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408169812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439806427 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.413528218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.407134475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.424697113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425319515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.4198732 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412093792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408174728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421573675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.409859183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408525966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.425272311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436329973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415605108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.408228928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408569871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425962544 seconds)
  done (took 206.65308453 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.604014858 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.416117612 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.417016355 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3546405 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.417937709 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417090178 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.411385311 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.63649274 seconds)
  done (took 14.992897362 seconds)
done (took 626.502556423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.76786292 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.470309532 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.622535065 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.43812142 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.250817344 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457157361 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.438657557 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.616406894 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.35249007 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624523183 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.736435432 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.454352893 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.888193225 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.435777008 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.703459127 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542596835 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.311749651 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.436170501 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.762319785 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.012667452 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.705749339 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.924646927 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.636067913 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.358800412 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.900635707 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.923206677 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.181468779 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.302081913 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.456519715 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.772096696 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.144224397 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.47355203 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.503448984 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.50253411 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.559140916 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.538440727 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.450888596 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.502647474 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.644643529 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.686012295 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.016236468 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.170392123 seconds)
  done (took 95.995822444 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.402286209 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.401988623 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.401298812 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.401274519 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.403731281 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.402115212 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.401522653 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.401352186 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.402793551 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.401490589 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.401719401 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.40386859 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.403590079 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.403453675 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.402799478 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.402063571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.403221219 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.405010251 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.40328866 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.403092227 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.403892595 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.401946212 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.404417627 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.402129268 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.404031165 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.40345745 seconds)
  done (took 37.79439048 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.422450159 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.674881533 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.847106664 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428515654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.423100646 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.425987505 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.507109599 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.425037962 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.425559056 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425905045 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.581838246 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426618521 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459373878 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.87344643 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425203955 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424540185 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.424211837 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422996557 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.685568212 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432302743 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.526493188 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.424589561 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.505862486 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433186458 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.445323466 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423839763 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428372274 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.019114806 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44344264 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.584041787 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.269560236 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.508466978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.954726109 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.877239812 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.273922741 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.430065568 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.427042327 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.587707276 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426163886 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42423344 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.507557313 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424630674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.858595484 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.104102986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444744324 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.424930912 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.038174718 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.606702188 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.685880502 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434172516 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882427847 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42896565 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.42783067 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42802451 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.685825595 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.432506625 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425974002 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.045445343 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450125836 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.508731045 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427155409 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42623818 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.692757688 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.426231703 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.68224716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.427789356 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434655622 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.447145802 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.860230246 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.430330328 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.132247072 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.446369027 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.428105215 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.586387239 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.682630784 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.075724651 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.450432897 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.69747836 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971902268 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.526758929 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.430918681 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.010684192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.531213107 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43033121 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.430125127 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.429658464 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.429036005 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.475991765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.507330417 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.067344881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140019688 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.072822836 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.532091318 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441965707 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428900523 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.050547649 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450373003 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429455719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.858782364 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131228964 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448150019 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437191266 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.12979601 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.450202332 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.513311843 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.434440519 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.869109411 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.430166328 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.47574181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.429908799 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.435751607 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.45321973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.512296747 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.432127002 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.431214213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.104737925 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.613673775 seconds)
  done (took 188.281023083 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.431606986 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.422738729 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.424935412 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.423536277 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.422462327 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.43074882 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.424525068 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.423554584 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.42950103 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.422992818 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.424898123 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.423806733 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.42367966 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.424687969 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.435698642 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.430900373 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.03700616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424740569 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.425910984 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.442247123 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.233931446 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.424955005 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.437211049 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.424667465 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.426303467 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.427373329 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.426262119 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.427222055 seconds)
  done (took 154.709020048 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.434533097 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.026360943 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.452228883 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.571772296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.453708771 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430328878 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.568545713 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492563685 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.451940098 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.430031249 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431212828 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.751228262 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.434463943 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.97630863 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.639110789 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.593552315 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.975000942 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.452944203 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.431539385 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431045135 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.573731826 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.435137601 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751264654 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.028447535 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452196893 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.027442757 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.417308209 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.43432639 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432333907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.030394737 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.449777522 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756729445 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.516460106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.497323263 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.049712885 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.995357707 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.997555916 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.591330847 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.433462066 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.4329964 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.432855035 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.417627538 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.032174858 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.45614308 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433755309 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.021633352 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454609479 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.435064094 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441185499 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.43355151 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497498439 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.515911486 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.775578609 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038939876 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.534885663 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.446442222 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.573855136 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.822365259 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437677919 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.978646163 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.417672912 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.038757864 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.456355699 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417708436 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435700732 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.440328343 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.595130818 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.575511811 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.980409207 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454023012 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.980512555 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.614488648 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433945846 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.435514805 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438031527 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037312756 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.001066531 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.613543488 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.577552484 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.643484307 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.420263051 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.435672101 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.419528533 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.51819091 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.435905307 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.040533308 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.999595041 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.455534286 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438321494 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.438604082 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.438733194 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.6281277 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.058521887 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.538025154 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.970075041 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.779124053 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.760221188 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.438532573 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500146986 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.454912943 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.762570666 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.439737681 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.498439287 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.891707047 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.763163643 seconds)
  done (took 171.359357304 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.692447368 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.732099516 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535555948 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.587610401 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.04656901 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.018575191 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725533731 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584355047 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.552438308 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.705606194 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.678124437 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.530741297 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.660420082 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.519097856 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.189321208 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529703064 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55573815 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.592340204 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.601488018 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.522753635 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.133362733 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.728240697 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.63733943 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.394236007 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.565330523 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.232882589 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.021937181 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.973276311 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.615683127 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.822263139 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.987072067 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.616842605 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.430881027 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.149316924 seconds)
  done (took 69.209484068 seconds)
done (took 718.66797744 seconds)
SAVING RESULT...
DONE!
