cset: moving following pidspec: 23605
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.568813013 seconds)
loading group "shootout"... done (took 1.147673929 seconds)
loading group "string"... done (took 0.418055502 seconds)
loading group "linalg"... done (took 7.770221453 seconds)
loading group "parallel"... done (took 0.148763691 seconds)
loading group "find"... done (took 1.366141212 seconds)
loading group "tuple"... done (took 1.89705478 seconds)
loading group "union"... done (took 12.553575617 seconds)
loading group "dates"... done (took 1.303227701 seconds)
loading group "micro"... done (took 0.225504017 seconds)
loading group "simd"... done (took 4.274097856 seconds)
loading group "io"... done (took 0.983152862 seconds)
loading group "random"... done (took 8.686406888 seconds)
loading group "problem"... done (took 1.545443884 seconds)
loading group "array"... done (took 18.732373767 seconds)
loading group "misc"... done (took 1.491033423 seconds)
loading group "scalar"... done (took 39.56783249 seconds)
loading group "sort"... done (took 2.992451067 seconds)
loading group "sparse"... done (took 11.70140388 seconds)
loading group "collection"... done (took 16.969840817 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525291427 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123896504 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133049526 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118863936 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15346909 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116062114 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123515951 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083620634 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.898607839 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146437201 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112105221 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439078959 seconds)
done (took 5.425222052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17257801 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086281668 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078068405 seconds)
  done (took 1.303935134 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065744634 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128201885 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066406819 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066912183 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066853634 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066417034 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066435165 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065972465 seconds)
  done (took 1.667047168 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071823388 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070733885 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065705638 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06720543 seconds)
  done (took 1.411017453 seconds)
done (took 5.77779869 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239928337 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.107443206 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.303961301 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.324101052 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.414920364 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090909081 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073229887 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069844324 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130561903 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323763373 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119388532 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.190324376 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09667868 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.178777006 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.987054342 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.129244991 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085353184 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122511638 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092391388 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130504925 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.365180645 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076569105 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081816236 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070530489 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067462698 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.668577857 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.6567078 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144793151 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082829718 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.080633659 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118693938 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.633788508 seconds)
  done (took 10.426484882 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099563874 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096924302 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068312771 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124180811 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095990657 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06906931 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074344769 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067630464 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087845737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12631518 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089149391 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105598111 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065634825 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068619481 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082788674 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196475323 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079335376 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080460929 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06794505 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077886498 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106012955 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077321556 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079201473 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0783664 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128063202 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171674463 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095809484 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097488642 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06642624 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079550699 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115027124 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125063263 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066016282 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068168393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123028261 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094099658 seconds)
  done (took 4.583889934 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.109348249 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090484197 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101393666 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.618660786 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065748482 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148549078 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233726395 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072132304 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.392858546 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.157531515 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14632865 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142196728 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123118411 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070068566 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.266846611 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.122395294 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.273296631 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066117171 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065491087 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064506245 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074579137 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066363295 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062737157 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.075148918 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090220489 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086299049 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.176036946 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.985271343 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.290498632 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070000862 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162054762 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08640431 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.365703747 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068756147 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.093810251 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.400197477 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123717295 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065162892 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16034862 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.129463054 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06410513 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114462013 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077191283 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068576099 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070462155 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068002692 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078227722 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0775396 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10121702 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067338255 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064706878 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166803724 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064444687 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066117119 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067091544 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150570003 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066173465 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.149819141 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064496566 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068798088 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094577736 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070276421 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.086376192 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113591455 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.329486973 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.034367467 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068091237 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064712885 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092380955 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.912483172 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079308992 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067385913 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.083945964 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067598655 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069792297 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067559979 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.076497676 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071503484 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067862586 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107693483 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06615329 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069045017 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065296526 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071244528 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096882534 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063914976 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064363963 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.462535819 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097052042 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065782875 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076421879 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103867242 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06641242 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07241314 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.0671243 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.071708038 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065554704 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067059198 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071839322 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091180335 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068872439 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112145763 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.154149611 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.0705898 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063754216 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067262841 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070986407 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069932914 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069235715 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065759679 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069548251 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06767994 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064757518 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.115774829 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064982325 seconds)
  done (took 21.592942185 seconds)
done (took 38.849211269 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.240155253 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080813953 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081367072 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081868105 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081456696 seconds)
  done (took 1.795992885 seconds)
done (took 3.01886186 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107061714 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.067440606 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100707629 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100406122 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063804422 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064124446 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098726996 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064330551 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.09785083 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100282459 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.1020365 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101545662 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.06629269 seconds)
  done (took 2.362226709 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068659636 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079688896 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08195751 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061687083 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071453061 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07996652 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06158048 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079148489 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086926125 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080655369 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080363764 seconds)
  done (took 2.05070562 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069197937 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079591035 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082643332 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06201766 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.0718762 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080494261 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061673545 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080140966 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084372812 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080706092 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08080224 seconds)
  done (took 2.040951402 seconds)
done (took 7.664993586 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073990682 seconds)
  done (took 1.26298107 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.530040519 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.514448178 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07640504 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097211572 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191213337 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.105463864 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.229705549 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.080280994 seconds)
  done (took 8.197184808 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095188811 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067586132 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068794618 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078681206 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068658043 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06824628 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069485596 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068265554 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068985578 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069106593 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068713564 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067467508 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068231235 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069490898 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068887115 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068503379 seconds)
  done (took 2.429323598 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095481343 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094576111 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072001434 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074051037 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071513621 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071704963 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073424107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073235932 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070561504 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072155799 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07508261 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074327433 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074368173 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065155888 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074506111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075632221 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070202463 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07384447 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073645515 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075452766 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074614507 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063279837 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072452453 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072856916 seconds)
  done (took 3.10801431 seconds)
done (took 16.207037527 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112869326 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075403354 seconds)
  done (took 1.396322583 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076388115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077864566 seconds)
  done (took 1.375160128 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074754935 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060934283 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081711158 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071685846 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061831115 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06144168 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079639077 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061974418 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061921798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061756036 seconds)
  done (took 1.900212496 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063379115 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071069237 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068284513 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.076512202 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068219951 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063323632 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065956818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063636099 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070132124 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062212506 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066489942 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081848074 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066542743 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083296178 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.066440076 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066571369 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069053398 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065761085 seconds)
  done (took 2.46625712 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061838229 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062387552 seconds)
  done (took 1.357381474 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065455312 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062238763 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065264692 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064665194 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062716934 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061711556 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06277501 seconds)
  done (took 1.66874776 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.362687572 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121808263 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325444556 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069257163 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078147721 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254250244 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063710111 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068453998 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06828688 seconds)
  done (took 2.679662702 seconds)
done (took 14.079104385 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079105434 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085652379 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095049663 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.403302232 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091255361 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066602378 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112147828 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.174451522 seconds)
done (took 2.348288843 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208017481 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.303520641 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.860109312 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066314143 seconds)
  done (took 3.457687267 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335057522 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085314056 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07624964 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066228186 seconds)
  done (took 1.806032312 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066490919 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069315075 seconds)
  done (took 1.374458175 seconds)
done (took 8.087947752 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064725637 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089109716 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063482284 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064197387 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06348554 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06396638 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063736482 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064526245 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063329777 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063929199 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.063522145 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.063182997 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06353072 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063722633 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063936197 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063385469 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06343601 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064065268 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06420926 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06407449 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063686941 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063786547 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063983552 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063822659 seconds)
  done (took 2.820237416 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080972809 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066144886 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067200718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067010085 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067567571 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066948976 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067688754 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066197018 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06727838 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06564686 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067612684 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067202792 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065469341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067788248 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06546868 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067735545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067253642 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065642868 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065583584 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067249902 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067382363 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065687055 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067719251 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067097115 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067317114 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067443796 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065662875 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065777662 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06732634 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068298356 seconds)
  done (took 3.270320445 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064616008 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06020058 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060879392 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069113754 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060481897 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061750136 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061438453 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060211797 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060561423 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061582989 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060712159 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060110802 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061356979 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059885697 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060455074 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060799151 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064712313 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077730668 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060695623 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060550344 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064182717 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060345761 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06040484 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060676507 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.0608883 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061559254 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064460575 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062262634 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.061753564 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.062091095 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.061345698 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064202799 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066500711 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060310447 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069152474 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06443168 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060276297 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063989801 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061572218 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059921995 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059780169 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06048632 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060281074 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060595376 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069166673 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.06028157 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061116327 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.06085345 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060024988 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060299137 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059810493 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06220791 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0656326 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061650558 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060023722 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06111076 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059798326 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061089982 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.06005699 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059839031 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060002207 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063162708 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061666971 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060755119 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077346774 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061769608 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069149239 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059956398 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061047562 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063350023 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060841726 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075732924 seconds)
  done (took 5.747952879 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084544357 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085568052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065271421 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06506679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060835426 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060595075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068841462 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060714838 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065593668 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079435905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060716668 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064821754 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065024981 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064680175 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061164561 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065402011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069346159 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061446522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061762896 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066007402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061983749 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069787916 seconds)
  done (took 2.733877147 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146279843 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066601582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103337742 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071522348 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069240879 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071308386 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066623487 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066946858 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066591751 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067553319 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067269709 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066710323 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069465821 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067427286 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067535611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068115403 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06804144 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068673818 seconds)
  done (took 2.592107339 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076578782 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066487464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084620044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065965141 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066898309 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065728657 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070054406 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07036929 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065924745 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0659668 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070751008 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065971774 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06563605 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066072646 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065608681 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065832239 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06581666 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066242191 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070500324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070000294 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069896579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070996201 seconds)
  done (took 2.768181393 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077264489 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064975281 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079980596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06726544 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060922675 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060699606 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067322108 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065292191 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066910968 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064882841 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065942515 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060944695 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067276855 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065529673 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068519473 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066003592 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064831097 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06615117 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065131561 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060647471 seconds)
  done (took 2.580480556 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081108745 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072853183 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064262921 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069626311 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063577575 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064275308 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070121536 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064206616 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063776518 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084760634 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064629587 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06428194 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070129126 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06820186 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064007297 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069706203 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069839545 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07230169 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064359969 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063925985 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084040793 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063851128 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06999343 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063674932 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064032411 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063960797 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064247342 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067932092 seconds)
  done (took 3.166819538 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064385428 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063080517 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064488074 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06368951 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064364416 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063577274 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064176197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064027799 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063387774 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063962661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064266714 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063646332 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063406568 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063333743 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063477052 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063490423 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063278035 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063651065 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064108519 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063605072 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063844816 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063791219 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063365135 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063400787 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064024168 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0634894 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063799476 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063843115 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063090519 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063925187 seconds)
  done (took 3.172010704 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073521441 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072231654 seconds)
  done (took 1.404331327 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062960445 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077818372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06060657 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071426934 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070234439 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063780218 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070085498 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069279859 seconds)
  done (took 1.800447906 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.075046664 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.09639623 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062693266 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063461258 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073871121 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121898733 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083006764 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072020751 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073867054 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064250315 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.06300269 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080644354 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061967364 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072975984 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063741145 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069313915 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067599335 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07618834 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073355381 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060676986 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072606541 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063297059 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061076745 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063747642 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062430311 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067839873 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076270389 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072867153 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069529773 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059836845 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078998196 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060702245 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062250823 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069684849 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07304074 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060884146 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09446738 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.06119581 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067114464 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061219784 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072882109 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079188765 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073625028 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077915002 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062691175 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063320704 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060640564 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063165039 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06354585 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069579476 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062081912 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067882011 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060408634 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062753843 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069983553 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061786812 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.069430597 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070932474 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074103017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071483124 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070734442 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076873126 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070661994 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.071378275 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06180528 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077736529 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062744879 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072395093 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073959014 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062221348 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074234108 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060362237 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059628586 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060535822 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091892379 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06286286 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062629236 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061093578 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060694906 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062526995 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069523099 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067556488 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06749126 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064979624 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074799068 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068529964 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060848875 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068743253 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077565695 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063952777 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06098676 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075871117 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064405559 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060772875 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080713314 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069819341 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.063116476 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062423605 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064370278 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075081093 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062443949 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060000576 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068248199 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.0627984 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070617959 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065450988 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067465102 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060487972 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069430268 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065191547 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061341084 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058973168 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06414952 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061370474 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059014309 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068044818 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060627167 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07348285 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065194633 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072518631 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07257846 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069358361 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073400557 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059903847 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059091476 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075466306 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068214037 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061045514 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07565436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059673884 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069335353 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059901131 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061514689 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068302897 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059224109 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061834778 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059561288 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064987877 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.194407524 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064077305 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067286867 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069916416 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073403385 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.063289426 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069303607 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062119738 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075696917 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069479557 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065540284 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065245858 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061921344 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071677287 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066918285 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068797177 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060602462 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061493681 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061355143 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069618341 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070390797 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062694222 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070533594 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065054184 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.06135017 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062017874 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062084448 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063956818 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065052004 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062195836 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067709915 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069162793 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074253031 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070018978 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068554965 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060406995 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060688304 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.063747748 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060866562 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064993459 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06882285 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07473616 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072230867 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079478213 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061135346 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070538844 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06266842 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076596365 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072750756 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062232799 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066503661 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059549205 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062909891 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069169331 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071707936 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075204328 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074955761 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065309818 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064884032 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061294453 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074264422 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061414524 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068817645 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069197656 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06613786 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061503105 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063048742 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069561234 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065882085 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061935106 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074454573 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068267769 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060757811 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073818762 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061420086 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.0710699 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061186826 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064527415 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065631141 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063617983 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069327962 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074910701 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060659507 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063590087 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077206362 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063273644 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062876005 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068118476 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074203639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065370279 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068550356 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072689132 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071220099 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065021665 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069318427 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062070802 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069157938 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064641998 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071797916 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060771867 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077064276 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061087062 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.077628564 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061291895 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071678924 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062697926 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070190535 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.062145908 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076636309 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.063130146 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061975127 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072255426 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059783485 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06865957 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060264482 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064182525 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066072468 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068984236 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06251513 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068809383 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061521747 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067421903 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064120209 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067345329 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067813398 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063554726 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059944714 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066338305 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069621211 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067140315 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060921989 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061579921 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060789449 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067759515 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061207069 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061465131 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067379551 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064271299 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06555917 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061951109 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06246141 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.06220435 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067303504 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.203957538 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079507216 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06968802 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068081719 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070322057 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061642817 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076663155 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061535501 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067942769 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059759656 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068352467 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069326281 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061055848 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079313953 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062380872 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068220696 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073379653 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068615347 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063784193 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078725121 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064406993 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068788174 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069238976 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065359617 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067156815 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063045789 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068221578 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07032609 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071431943 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062089155 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067366939 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069332913 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063432327 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070050057 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063303938 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068826507 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064224326 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060145097 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065418622 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071772342 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065399793 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065535689 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06188052 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060069773 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061952817 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068686164 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06584331 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068808291 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075172555 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060522064 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062580629 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061138082 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063815562 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077434609 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07035743 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06882881 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065842258 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060902788 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063385153 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063437681 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061721541 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065037789 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061079884 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061188082 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070670894 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063045754 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065008494 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061573503 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062603923 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069563462 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066389916 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063230684 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068519682 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060832551 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065068298 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06081257 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06343431 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064999038 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06113329 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06429127 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070046474 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076050803 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067076484 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06903936 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062383164 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068347539 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074627119 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069568472 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062598253 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069299324 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060865979 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077471129 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069738282 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069019173 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070056403 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062269909 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076313331 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065342897 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069995437 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074467576 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062627917 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068791973 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060793397 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074962065 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067343169 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060959256 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068255612 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068365913 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066847969 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072329056 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061970362 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070312845 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069583913 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066031154 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.064094408 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062881735 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068626941 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075148137 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062170625 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065660171 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067266644 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067257938 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064697721 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07172583 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067215053 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061584687 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062095016 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063694997 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061314804 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070967142 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060709396 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063907417 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064051733 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059878559 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06623713 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074291334 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068590799 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068618748 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060341194 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059537877 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075455834 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063105683 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063764676 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067485766 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068261115 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071166916 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068241346 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075088393 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060546513 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065544636 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071096844 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061227286 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060226415 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063591648 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062134637 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068203073 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068800946 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066308729 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06237868 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06629782 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071704754 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061341178 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064745305 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064746459 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061028671 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06900531 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066940616 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067704986 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061684952 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060155736 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062800411 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067964171 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066406262 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068542328 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061287583 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067259199 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073070521 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066347294 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06325827 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060009288 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063629726 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067727321 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064638918 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059747318 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064631947 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06372453 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06772361 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068203273 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065010874 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060266348 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075348781 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067653987 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068720377 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061235853 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061454751 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060905017 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059473713 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06956394 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059806222 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061188355 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063933744 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061205355 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074951533 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066560924 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073374132 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060724601 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063967139 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060071517 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067739413 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063185914 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059330634 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068645082 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058738144 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073028422 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069858625 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065422055 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059289881 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06445121 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066484379 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072446672 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068169933 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067971189 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062270952 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068799284 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061609682 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068603087 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059724398 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058767711 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068564731 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067326737 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070571571 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059965231 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068300778 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061559233 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066944728 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067348034 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06223038 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06136932 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061338869 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067416622 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063961839 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067988638 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063751035 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073528042 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060758293 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068878702 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067645654 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068623238 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070630986 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070198743 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069327278 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059713048 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065572768 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066551776 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060654787 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063262121 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062064916 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077956428 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061789493 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060781892 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072094048 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065931305 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059069654 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066530287 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063293761 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068006366 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061448327 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068858527 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063487396 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060000379 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063861927 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063738363 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058370461 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059265896 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059979446 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068267685 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064327182 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060646479 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075520446 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060581616 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066769066 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068672128 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065508978 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061044446 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058323188 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060141524 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.322624233 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07994738 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068637519 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073977436 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067868937 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074984206 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064479437 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07310383 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07342819 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074211985 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065939612 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066954451 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080369852 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081024595 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071160499 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07482062 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07293062 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066610302 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086884767 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072442074 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065874462 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.073700668 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066286243 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062838522 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06202534 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.066469928 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074765064 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063010689 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.066090562 seconds)
  done (took 41.608669617 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105117737 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066302197 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064923151 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06413504 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072343716 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064131367 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063188847 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064382492 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064533862 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065824335 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063392384 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063165303 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069666092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077582388 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072002692 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066764519 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062299257 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063150928 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062163478 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063370595 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069645629 seconds)
  done (took 2.848420482 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071738968 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079390937 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075291366 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079003306 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07106112 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066830313 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074171646 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066699219 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074800889 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071939984 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07548276 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067261355 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071962611 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071805328 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072160985 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067155313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075249779 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070897964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067019996 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074272674 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06721083 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073989439 seconds)
  done (took 2.979203221 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065674032 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06457771 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071005942 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062809589 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.061501005 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06590201 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.062002103 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.066113147 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065465668 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.065864076 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070829532 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062902785 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.061921661 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.067516398 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.061680614 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.063419315 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106645941 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.063275149 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063064035 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.061869004 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065416562 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07034117 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062278091 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062487084 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065509863 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065302236 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.061508018 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.065657822 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.062644189 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065746415 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062865328 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061463899 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069247711 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069050395 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06552016 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066257729 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.064002273 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065407262 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061941262 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061722018 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069631942 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.063648594 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.062139733 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063332493 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069924163 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.06158324 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.061372434 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070478093 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061710446 seconds)
  done (took 4.607993417 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075472362 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110031664 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067613616 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091283035 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07564435 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069228977 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067639219 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092645115 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063726906 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064528811 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077276719 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077502722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065234994 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067891411 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069082952 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065935278 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066704273 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064460292 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068228422 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064644521 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068849602 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069594236 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07596046 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076718774 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066755635 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064346144 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064710823 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06650963 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075862915 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069108493 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066633825 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067727887 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076177434 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069629357 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064575203 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064417052 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076595082 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065469241 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064855978 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06376751 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06459223 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066307574 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069240924 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076775472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065501538 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069280577 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065654355 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062450604 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075913931 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064645273 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069145203 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07633118 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066221567 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065898617 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066799609 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076235176 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065688074 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064482724 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065719751 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075468939 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063332489 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066254079 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077172309 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064681043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068914169 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077004172 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069981849 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066277868 seconds)
  done (took 6.303533232 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075512683 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096040356 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07987181 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079554972 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073300369 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073077456 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072963149 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073184728 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072964003 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076798053 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073379933 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113168168 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068891695 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074457205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073534363 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073647998 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073425981 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07389564 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073635473 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073122548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073123184 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079391936 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073288373 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079366051 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076101957 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069484819 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074073771 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073086677 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079238202 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072866217 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076233689 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072964982 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073130173 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079411563 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07588012 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072901881 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063025864 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073152621 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073117161 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073068552 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069613448 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079120706 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072802594 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069183385 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073325659 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073145345 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079057673 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076267039 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074523723 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076768682 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073040167 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07979452 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073088891 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073392957 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078661086 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08181419 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079081244 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07892364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072441076 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079106906 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079198017 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081486338 seconds)
  done (took 6.13362645 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07937644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0715305 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081522001 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064532737 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062118601 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072384283 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061427042 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061773948 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070112403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069590404 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071679028 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071404225 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073502346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071631982 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071379402 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073738555 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071770407 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071848802 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069207073 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071691466 seconds)
  done (took 2.843555289 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07815657 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082194756 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068316349 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07091822 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067008398 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072274184 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066521197 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067630842 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067877608 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067174866 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072818796 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072464977 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067556627 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071447714 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072422039 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071467421 seconds)
  done (took 2.558139476 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084854161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071956402 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076445744 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063145077 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066529197 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06225195 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062776628 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061846013 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062148389 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075614649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062782916 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074156685 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063556538 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061653895 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062225197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068205574 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062259242 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063025955 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062800973 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076043408 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06948894 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064022024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066814026 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063129425 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068745573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070191701 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06407697 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066344875 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062407893 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062928753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06793056 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069363878 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062351095 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063074477 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062422391 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062464368 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06252431 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063000041 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068771634 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063086234 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061175267 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067968021 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062751916 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064316254 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061915018 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063676116 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062275392 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069047288 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063648758 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068504152 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062923277 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06509123 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063841863 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071113877 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06539912 seconds)
  done (took 5.043947915 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079969126 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067025537 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061358318 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061485416 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066717234 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086079957 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067438222 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067620925 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068223185 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061727463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067473418 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066573389 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067527157 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067412473 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067565589 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066975933 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061008653 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066925591 seconds)
  done (took 2.651412848 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07423525 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067916057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072727924 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068395969 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067794844 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067211934 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061895929 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061327794 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061933216 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06626421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066279572 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066077034 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062377535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066657258 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066430529 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066212583 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065984047 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06193138 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066666837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062012508 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066494562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062132833 seconds)
  done (took 2.872487996 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096614576 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085320793 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140108398 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079614405 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087402144 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07176813 seconds)
  done (took 1.984393824 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095273952 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099674161 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066261775 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066737733 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072000132 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069947864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070289536 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071480036 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074206448 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074686916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073821708 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074752008 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074536511 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076561142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072681092 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072668522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07035555 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070123909 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066665393 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079654864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070486132 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074517513 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070291265 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07000562 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069981339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076422255 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07431137 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074945707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069858295 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074754109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072158544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070310002 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074928625 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074983418 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066948821 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074307924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070655196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079011122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07250327 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076176568 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066636203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072432833 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07466339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073571281 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074197371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070308872 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073712095 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070071718 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070422526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084346613 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072489449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076573923 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072531492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075273071 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074137688 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080952123 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07504031 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076044707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072800641 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074955443 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076104546 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072695692 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076338964 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075069268 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072568404 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076248275 seconds)
  done (took 6.315269791 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106081179 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066914287 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070275427 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074848302 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076034015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070000122 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070592755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070177521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070049023 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067749654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105123173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070789929 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076660196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077163293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070467346 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070042788 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070398841 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076609473 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067537837 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081001133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070192641 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075873422 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076102216 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075818688 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074451599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072091434 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069756284 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070304209 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069872113 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069987951 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073958424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070320542 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076006893 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067177333 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076418249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070178198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069844613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073627193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070598502 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071882547 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076263544 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07899471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070446868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070369922 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075294988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070066475 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070269897 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067218072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070159173 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067261947 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074654808 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075436734 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074843383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076406641 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070444108 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070424242 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070424974 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070602318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070388214 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07279076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076512624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070128198 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081217667 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069967602 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070404908 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076365536 seconds)
  done (took 6.296459681 seconds)
done (took 128.344244591 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214459232 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183323158 seconds)
  done (took 1.813639178 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075605761 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105562165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082740636 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135115844 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070129189 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104971489 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103650358 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081766012 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069824835 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070195097 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070530522 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073844913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135805737 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071083944 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071636553 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073757568 seconds)
  done (took 2.837377314 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106556809 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.219431179 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109710603 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069232976 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103132296 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076471577 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071757941 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082474077 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075168978 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070377243 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076253759 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074305908 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070203888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07412611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07510406 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07615905 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070306211 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075833893 seconds)
  done (took 3.018683216 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104225804 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094836075 seconds)
  done (took 1.646570942 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179579459 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134958856 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204495927 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.335540324 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.145616018 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.417725044 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139387073 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.136444542 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116710187 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.132401301 seconds)
  done (took 3.381277477 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105395472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194749333 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295353795 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119652814 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075335405 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.106172985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121474463 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081443911 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080576047 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079517652 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079694308 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076571482 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.0993437 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075407111 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075212686 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076525475 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102638177 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074862402 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075268367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075497922 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103678102 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069699135 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075823598 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07413587 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07734852 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077836566 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071446089 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069576076 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07494277 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075544202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077716805 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.10423455 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078107555 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103369904 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074898834 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104092843 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077428819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073580032 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075567176 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07379415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076925019 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077235524 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078300623 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077042427 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070505607 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076918916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07114473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069219862 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079033358 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070600581 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078674379 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078050158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102811144 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070427321 seconds)
  done (took 6.231747635 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109383706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105727325 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070176011 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111894293 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103944578 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070153007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104642054 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099112618 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10613483 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069943227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068662118 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070898405 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077634939 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080078718 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114276321 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10756157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072097718 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070023632 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106964517 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10719006 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069217209 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100936721 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097817 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105822467 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06801765 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070126257 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068370761 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069876982 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074567349 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076185032 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069220339 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077055995 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081895546 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075822782 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068185195 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068455603 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068460379 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07689485 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077185083 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076865633 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075489687 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067402804 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068313437 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069638882 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06911752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067733998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07583524 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077260965 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075646847 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068823897 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070260664 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068295211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069013921 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076734866 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075729816 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077595013 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076777713 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068632682 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068229657 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070672133 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077658029 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076938962 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076506115 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069356305 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079764654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068808184 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07818274 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081604475 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069011077 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069606991 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068244024 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068359915 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068880197 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074852726 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07496034 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069121838 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069032823 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068983754 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076584721 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075859357 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068500016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074930692 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06783626 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068278038 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069517634 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069154045 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075106435 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076481363 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069918678 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06809481 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06868622 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068457572 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067638433 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074886351 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076646404 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076623173 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076164169 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068919466 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076425211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075775533 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069226942 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075637757 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068440759 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069777952 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069354784 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075777562 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074746241 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076492463 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068446872 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068180043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075248332 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077941007 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068270162 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074491698 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075768045 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074475053 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066577426 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076727485 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067446218 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075464082 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067736281 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210837763 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069360367 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077340085 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069715281 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067972156 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068813193 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076286924 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069994955 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068793042 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069818624 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068837111 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076432562 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079529739 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070605679 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07606616 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076322062 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070007802 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076554715 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06878454 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077299673 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069013972 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069457855 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068147785 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078892969 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068316279 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068877916 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068773194 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078083493 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06861635 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077254327 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075386357 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068633551 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079308799 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077452515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075143648 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077738374 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07000262 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069159073 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068756085 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068828676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074651511 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076199404 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069443533 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068457157 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07587244 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077765181 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067675265 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076253626 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075930323 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075718967 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068595632 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069040742 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078947521 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077828864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075943948 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076412122 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076375153 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069447019 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075639129 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075729274 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068674456 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081178819 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069183335 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080241734 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076369472 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075045365 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076578281 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077838036 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077745791 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078052101 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080599323 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067961151 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069044065 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076289323 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068693227 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069197218 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075745144 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06962089 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069587532 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080386689 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068994287 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078303662 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06842209 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076621821 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067875052 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069608122 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080919439 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068991845 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069706886 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07885389 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068858246 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075754157 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07834873 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075984242 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068726927 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070055106 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076984408 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076794136 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068183656 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068418238 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069766888 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075101172 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074980519 seconds)
  done (took 18.382161194 seconds)
done (took 38.76873522 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21165779 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159575571 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189318073 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119882529 seconds)
  done (took 2.222230067 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108473669 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099998356 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086639017 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065201383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093073783 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065432207 seconds)
  done (took 2.008686261 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30723437 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208933631 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185962831 seconds)
  done (took 2.19637865 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211702102 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199619574 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465050563 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288230684 seconds)
  done (took 2.756534288 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140009902 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082797559 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064394383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081390509 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122440817 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14863631 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093088562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117789145 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075078289 seconds)
  done (took 2.471977316 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147897436 seconds)
done (took 13.305490189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214321829 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.15573125 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.10012672 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071844601 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068571255 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074324477 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.260078922 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 0.131839424 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.216134662 seconds)
    (10/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.106848199 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075942798 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06757269 seconds)
    (13/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.166268272 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.235077057 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.234139093 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.180629074 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081386366 seconds)
    (18/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.072673407 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075097211 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074908723 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139461784 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.235816838 seconds)
    (23/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.074210773 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07436475 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140640317 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.179506176 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.195194747 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120222088 seconds)
    (29/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.199281154 seconds)
    (30/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139018418 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125636161 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083577328 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.173699619 seconds)
    (34/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.239021361 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099934896 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089050419 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189562829 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066109788 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178474672 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074555321 seconds)
    (41/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074399126 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093653724 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074050016 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.196063921 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073794367 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.138895729 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066034468 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064591777 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099676799 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.07433394 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.148590839 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.188277218 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 0.179420831 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.066644592 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085047662 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091727167 seconds)
    (57/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075717451 seconds)
    (58/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077292584 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128156391 seconds)
    (60/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.073070433 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064929031 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074124352 seconds)
    (63/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066222261 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157874145 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136739214 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064565518 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18005556 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120126111 seconds)
    (69/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065819712 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.132300126 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145194556 seconds)
    (72/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07118174 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.207914989 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117079273 seconds)
    (75/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066227882 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.135871898 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075484864 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09969957 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06383763 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065555404 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163155701 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168318075 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065261378 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071761578 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115872445 seconds)
    (86/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071300271 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090156871 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196618422 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.348308823 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07937677 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106983248 seconds)
    (92/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065740529 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085658926 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087010015 seconds)
    (95/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.164484629 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066783954 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069319931 seconds)
    (98/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.13977558 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10442215 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.168717793 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065021865 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073174946 seconds)
    (103/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069154768 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090106288 seconds)
    (105/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.065274948 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066018302 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165674503 seconds)
    (108/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.124592488 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181361025 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072320765 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066636034 seconds)
    (112/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.13738022 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120341312 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065027808 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079362458 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074220068 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072297438 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083106526 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140118133 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066123725 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077779167 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074049456 seconds)
    (123/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066599758 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156641579 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074272143 seconds)
    (126/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.093058336 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066502012 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088966904 seconds)
    (129/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.145635547 seconds)
    (130/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.167910392 seconds)
    (131/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065251548 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126496665 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072464377 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064637334 seconds)
    (135/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066308217 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075465749 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066347975 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066279354 seconds)
    (139/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065996706 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074089547 seconds)
    (141/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065590057 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065324176 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158872549 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06474802 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122751352 seconds)
    (146/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075212473 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117814415 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073657928 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089387234 seconds)
    (150/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065997311 seconds)
    (151/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.064852528 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064796179 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091919805 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0733181 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064740704 seconds)
    (156/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066122267 seconds)
    (157/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073754616 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064954341 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064500576 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073046445 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063960869 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094439777 seconds)
    (163/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065609888 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075302154 seconds)
    (165/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.064569744 seconds)
    (166/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075699956 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065403689 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.0659764 seconds)
    (169/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065251271 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064366357 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074804777 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140228821 seconds)
    (173/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.094217208 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187976049 seconds)
    (175/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065722591 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090806894 seconds)
    (177/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069530726 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067307361 seconds)
    (179/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074105383 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080406487 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072324988 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.132231534 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065143396 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064476777 seconds)
    (185/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.075630677 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064997776 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159029966 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076297226 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071579415 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066166711 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156335405 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142127727 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065103328 seconds)
    (194/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.069579306 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128845904 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065198976 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086650561 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111793503 seconds)
    (199/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07085162 seconds)
    (200/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.07886546 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.202682356 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170247545 seconds)
    (203/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156161647 seconds)
    (204/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075442576 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071724977 seconds)
    (206/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072568496 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064838521 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064532505 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065950166 seconds)
    (210/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079111565 seconds)
    (211/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066152763 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072030239 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064471269 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065007564 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077501306 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165115924 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.241370585 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089545549 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077144688 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139348111 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066987342 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068371352 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081217634 seconds)
    (224/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070934337 seconds)
    (225/309) benchmarking ("sort", Float32, false)...
    done (took 0.135136839 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069564779 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074512317 seconds)
    (228/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073665756 seconds)
    (229/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140388903 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066211309 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074791206 seconds)
    (232/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.067159323 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067518444 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066385395 seconds)
    (235/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139756295 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068148559 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065081769 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066879185 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.136489887 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065261598 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080162644 seconds)
    (242/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068670464 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088503221 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066414695 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07397019 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072835294 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066766126 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065576874 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065049881 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144292841 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065105441 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065053 seconds)
    (253/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065769543 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191334908 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065453078 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066269471 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064480316 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06594678 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066232103 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092650331 seconds)
    (261/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.066307581 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066136412 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10897651 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172935381 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073375435 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137175369 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090589035 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072410351 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065929129 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131962635 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087472506 seconds)
    (272/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245996596 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06598653 seconds)
    (274/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120176152 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065530986 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068845941 seconds)
    (277/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066330233 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064881727 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067908071 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074451195 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06509893 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068608059 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13369017 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193889697 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064805342 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06582566 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066588974 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091470623 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065983851 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066356847 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075938532 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193929987 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074254675 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072261841 seconds)
    (295/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068368339 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064728255 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064574348 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065997205 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073276167 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065940714 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.0916508 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088726175 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086053473 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066009157 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065149079 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065054072 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064550541 seconds)
    (308/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066141203 seconds)
    (309/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.06624087 seconds)
  done (took 32.757764876 seconds)
done (took 34.263739643 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085962905 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096892487 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072783426 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091364321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080949733 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093537972 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.0732114 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077891743 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080377312 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07966683 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078303645 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071362108 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074335765 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074701949 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072374326 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095422101 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079331874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073756032 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073697487 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065460731 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073908655 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065762913 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065181025 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071666519 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076991373 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072691181 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074863821 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074678047 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065595013 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065791238 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070546036 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074423485 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065939943 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078254824 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074452726 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073366267 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074826383 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077786277 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065756291 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066105384 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07505674 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065536253 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073154677 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071851968 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070073318 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072217552 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073383984 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077424422 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0954907 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070209739 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075782364 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076304919 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076736226 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071219641 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071038939 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073944047 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071749441 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095078615 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073722936 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069527947 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075409064 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074657075 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071564494 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07355822 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073360802 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076426329 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077305652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071851338 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075096803 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072369208 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065264119 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073837728 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073714023 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066038346 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076277385 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07825824 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064616853 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069722184 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073154869 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073563858 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065588474 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069200761 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064935646 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070005445 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068696512 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071310834 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071102273 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072523914 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065002158 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074018662 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072452533 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073305595 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06490578 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077773901 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065597326 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071685928 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065824943 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065670704 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065082923 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070441583 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065040022 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069078003 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074172772 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064494848 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070113194 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079067889 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065523474 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072521691 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064574282 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065038795 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076463505 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075597829 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065195479 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069445119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064981511 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070700839 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06508069 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065381139 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065176493 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065275755 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06924937 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064886052 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069011178 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070174992 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077216736 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06476538 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069605131 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068813898 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065222182 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071603051 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065263488 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065096727 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06501498 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078878643 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069654184 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065497551 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070804655 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069509243 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073598838 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06471314 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07383759 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070862938 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069408803 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07120702 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06404706 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07557982 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068990563 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068107 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063807294 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064294286 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063356986 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064371319 seconds)
done (took 12.557578695 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069712554 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.11427159 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.089165208 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091083969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080991471 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067066449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072494748 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.087688758 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06771832 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.092835217 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08557801 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086941278 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.106018627 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065063838 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066323928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06722498 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067983405 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076495823 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09066027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087924832 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.102347486 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065846045 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.083322831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085751157 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.081209535 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088576082 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067525066 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067214669 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069386427 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084791617 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090301651 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069556936 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067515728 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08716314 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.083434842 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.077788636 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0669682 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.073129524 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066512573 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066158262 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067765941 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08434907 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07302464 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075726715 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06737269 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074227515 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067973081 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.080735767 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.082755406 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073236175 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.079492105 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.087506294 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068909563 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080823177 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065332355 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08027289 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.073677384 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06684481 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067103269 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071549268 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066475048 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069303699 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.075391226 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.073320309 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070056536 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081704533 seconds)
  done (took 6.660646495 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085670503 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093910774 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082996929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082953173 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065776351 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06640246 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066870772 seconds)
  done (took 2.147617564 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067000075 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087635617 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089905843 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089614678 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082141178 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090497408 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06743221 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097518066 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06537201 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086758863 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.118107514 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091852153 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070337129 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077625231 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066585213 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.081336539 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066556149 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074808263 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.082724444 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091214352 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070637807 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09317328 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079704174 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067198611 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.099536866 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078866124 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065932672 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067196821 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067776315 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067780105 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068075535 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107299397 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078123231 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079719206 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067610064 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066674294 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080591761 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070164217 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077026502 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076382388 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079159609 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068025662 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066063561 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068158813 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070088296 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077499855 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065827182 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068664181 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067763033 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086070665 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065655321 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078634294 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070506963 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07150787 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072271935 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071160005 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075328067 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067945021 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086245348 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074418538 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067566161 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083094747 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082408727 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079010854 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082547429 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071187469 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078256522 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07883947 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068421076 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068860326 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068010862 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082455261 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067117184 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068532014 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069851938 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068166004 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077871269 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091141677 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090888184 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079047482 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067297886 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068480052 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.077973465 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09076336 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071027294 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067972002 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070077902 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065566075 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070644213 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067842826 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072003248 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067588954 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074128012 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068519965 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070013958 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082711647 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065725943 seconds)
  done (took 8.952331974 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070702247 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067186949 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068544398 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067204143 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067426112 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067534352 seconds)
  done (took 2.045276074 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09035408 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067080337 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079745215 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067520875 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105398706 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081703798 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081453441 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076256283 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079816622 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078877631 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081954496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084945432 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.085404918 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069529274 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081420561 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068597564 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081363039 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071733785 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078830558 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069659493 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.07943037 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069372844 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069727226 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08560056 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07033949 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068335983 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075971625 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078990107 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.0781976 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075718711 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06874398 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070219318 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074501603 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07573109 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084599442 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074225891 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067337867 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073105782 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069172264 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070176921 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083873887 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069353675 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069821558 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073613409 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075455803 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074577631 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072743569 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075138857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081294115 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072918586 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073245219 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067970151 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070567681 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073393198 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074530464 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075455109 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073101429 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.081391796 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069189407 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074369403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067097755 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070308806 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075072362 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069795152 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073285992 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072832122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074698236 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070640899 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070177654 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067394477 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073824685 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067449439 seconds)
  done (took 6.999438565 seconds)
done (took 28.431542889 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536308009 seconds)
  done (took 2.116461594 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616832434 seconds)
  done (took 2.239197895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.554665679 seconds)
  done (took 8.175293934 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404509095 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46669157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749068653 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132388127 seconds)
  done (took 3.398508869 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.696584037 seconds)
  done (took 2.328717093 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228757603 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215671669 seconds)
  done (took 2.080397727 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.345823289 seconds)
  done (took 1.976133514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.05005117 seconds)
  done (took 2.677252801 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251347626 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159496352 seconds)
  done (took 2.046348939 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.438299347 seconds)
  done (took 2.062430843 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.296904114 seconds)
  done (took 5.929548048 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232324746 seconds)
  done (took 1.899618176 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231158875 seconds)
  done (took 1.867194014 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.722042504 seconds)
  done (took 3.350388953 seconds)
done (took 43.776933416 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085094894 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084330851 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084179197 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080088572 seconds)
  done (took 1.937686194 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.076962428 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070631381 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073721436 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073886758 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071836291 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07284005 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073232661 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069933677 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071471245 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.07030926 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069040562 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070745821 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07323152 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070137466 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072983102 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074217591 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070280753 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070806503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073405906 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070597806 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073904853 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.07034276 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068573134 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069590756 seconds)
  done (took 3.35524699 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081380952 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072665962 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075252306 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071379069 seconds)
  done (took 1.940109614 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.079464473 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.087194785 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087345445 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092009242 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076411705 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.07683838 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084844182 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085308407 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065750956 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088439289 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067825439 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067407355 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066604412 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085093323 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.084490555 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063246378 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064688314 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076809709 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076229579 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077891772 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067725242 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065656239 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076512022 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076358215 seconds)
  done (took 3.47778431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084595824 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065575385 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083189435 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091909732 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092200463 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066013601 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.0834079 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092775685 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13617239 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066009059 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071508038 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065728761 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104097548 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06594057 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082667241 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107694246 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110766064 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06972902 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097614275 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065767438 seconds)
  done (took 3.353229315 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085619951 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070295965 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070993313 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064924192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075857199 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073002688 seconds)
  done (took 2.091222211 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070897419 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069056554 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067327068 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06923847 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072093942 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066995049 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066333351 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068051756 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06787818 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06701998 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067581035 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065939655 seconds)
  done (took 2.463156969 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.158331015 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069698767 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070206533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066451818 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072071461 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06781746 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08168522 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068652249 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08532871 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06672386 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066812224 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069102732 seconds)
  done (took 2.586150665 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11018889 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185189559 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102260328 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073309307 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217400338 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099593592 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091014648 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.130037624 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093960825 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070474038 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107593536 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140201613 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107963977 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.130636654 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094370987 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149247317 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153548227 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102420793 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121741402 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086631779 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.07213601 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151543579 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071366313 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097848221 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131220003 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.10526637 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118073046 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137591713 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095898019 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.094192573 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097952589 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075454025 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155082872 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.090235301 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.110818425 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120893469 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131221454 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086658283 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086850045 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163299067 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15226887 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127614515 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128110526 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13858915 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07974296 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.112048821 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085958176 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109625316 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146430831 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101804987 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076803505 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107987961 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.111770086 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13612669 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.244361499 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086890012 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167372019 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.123986174 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120591928 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08199097 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108960099 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.104937868 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110747537 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165308669 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144445148 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103887741 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137771999 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122500904 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10086726 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.102526561 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.113988166 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086870055 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118991264 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122396373 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14425729 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122120935 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123995039 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111500504 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082769474 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11173723 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127004633 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095296798 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115641132 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155865845 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113360782 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091840979 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11010733 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142685891 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073013056 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159673847 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094477309 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122116564 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101892503 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143292984 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103797139 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086271631 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108507542 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141519884 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102590238 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129785591 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099190199 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117720215 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097946228 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128497121 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081897181 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101957877 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104588542 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098505067 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074529447 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104471603 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306232967 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118342918 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07743652 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113801022 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097970944 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077988914 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12036353 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143614388 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083012201 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076624661 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15113113 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.098337667 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117829932 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111255448 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.096333492 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134600736 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14588136 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095555825 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090601142 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076316701 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186141789 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076429987 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145079506 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086112664 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125192148 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106811611 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132370794 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141560435 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095564145 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079250487 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1070128 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.115647964 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103467116 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114437162 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078361975 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109485213 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150690551 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105438137 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090804573 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096775356 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070959185 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121611106 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077777834 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098324322 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097226833 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095742701 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.094549348 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148158179 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.097580444 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112921995 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098707157 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06849493 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091714501 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151180932 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082985333 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108910961 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130634135 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097186985 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068755041 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.119773542 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073518625 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303595264 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115412584 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108575493 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080434903 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128145292 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070809381 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075368337 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129454195 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105465032 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103240846 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138626698 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107807557 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.113486075 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.110136067 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.106559221 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101470552 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10695479 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.110368066 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118842078 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085836097 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15154639 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099205685 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079151559 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088443742 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079547022 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078738771 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127298414 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155601003 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114068673 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104437219 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108298113 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117065649 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108562667 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092010583 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080232634 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136468462 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076625391 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075465561 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116126523 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113612649 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090978262 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140184164 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080153028 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138439232 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124598368 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095358178 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12645456 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070819272 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071273424 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082169769 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115579307 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121723698 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079947456 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079996793 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137715875 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136736946 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117015902 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103502972 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069694701 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109242762 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141802492 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.115501616 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081008975 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108799233 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08479597 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127130343 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094845947 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161994127 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10336865 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112024345 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090036856 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078945054 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073555635 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096008136 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126606475 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091117874 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080761779 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068557372 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073964816 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117542726 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089812592 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113026258 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103543326 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132552506 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073816116 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100362994 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110005059 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108243506 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107268041 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107013774 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094958189 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089940598 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105688082 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11859585 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073709404 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151029783 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12770656 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081404788 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097486736 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093703291 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108144867 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104849447 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112654475 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106590159 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124595029 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122427272 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100795857 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088677863 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095355145 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092945869 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.093297447 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08016632 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101565891 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116610726 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100705074 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105691393 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095296074 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090850058 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108255087 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109636671 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088840346 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.113980093 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152952807 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.097019222 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.414034087 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107356668 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111965922 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108775295 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118111004 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132956581 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149830814 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07478882 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07925961 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.074215204 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131463016 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083089774 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121172011 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079847943 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111102602 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128152465 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092743643 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070412602 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104066458 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092257523 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096199076 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147405641 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112600065 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075984431 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107574588 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110332755 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098813529 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159241301 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101832977 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104029616 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074367774 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121129412 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076926953 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11757862 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140307127 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083014508 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.0851285 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072593646 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112238216 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103333853 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117924303 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091371711 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105185335 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122280251 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133618055 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104062288 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119348024 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14049411 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115642485 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094969903 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158031793 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138349793 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.146488199 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081548171 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.090190442 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106786672 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106902767 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102742357 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078384644 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080159034 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147292037 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123337693 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.070390685 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261630485 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084310098 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.089506853 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117651705 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116459687 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083591311 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133205054 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076853298 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108782791 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096612879 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127800638 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123275937 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155445636 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099284801 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090711468 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079194125 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155189469 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.083728049 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136013198 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124237225 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10530103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071436997 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098842081 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127301183 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.63886617 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109416299 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077111686 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139026075 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107972048 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162520988 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094927417 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.120236941 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109335863 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103277647 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095985835 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130903985 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095940084 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1102997 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.176603085 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121409155 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108129288 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076005185 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086972396 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075391313 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.091126719 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083332903 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101527773 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108767432 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103973545 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105474416 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089022928 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.10820289 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117240012 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11426295 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105073549 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091198865 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140707494 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106685389 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291374595 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129419684 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080558769 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076343991 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.108387682 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138832335 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09764859 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094407982 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079540525 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.092236386 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157338766 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141397191 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103236082 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103200841 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092487366 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101836941 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114776889 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118900527 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111294435 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086707598 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.102530258 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104928693 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080137079 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07619395 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09841 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07154036 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091319601 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129163086 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109564611 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091970813 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105109628 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080346219 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108636331 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146979149 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10479564 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078702357 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077898317 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077486947 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.085558483 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104895992 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111747237 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11463963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148326929 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103153688 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096248642 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.080636488 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.224384881 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090623244 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098511104 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.111208197 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07699819 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131956782 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09204024 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090683227 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097521371 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104699993 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157279012 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086871473 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11036786 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114058102 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117070598 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104090669 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107745435 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096582253 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093187442 seconds)
  done (took 55.190838675 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104725758 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.140756677 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152358078 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081301687 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.095434058 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121138984 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198112608 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188159094 seconds)
  done (took 2.911048366 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068055447 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094817054 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10131018 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081921329 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066392666 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067190746 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227723112 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080431466 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066141423 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091079495 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075863559 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068871403 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422946536 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065963543 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067266654 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074610734 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067393679 seconds)
  done (took 3.575083318 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378552214 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612462518 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364215478 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075142459 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.739561204 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090495046 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.263046726 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140119674 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08021356 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.503846396 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36766591 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130935963 seconds)
  done (took 18.550400455 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080413289 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077399338 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088528164 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087985989 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076466647 seconds)
  done (took 2.206458632 seconds)
done (took 105.30713373 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080731259 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.191513463 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067078358 seconds)
  done (took 2.080235804 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.09034959 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087420268 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087713995 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.085515322 seconds)
  done (took 2.155987619 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075284874 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075942534 seconds)
  done (took 1.948588112 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232875397 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17352149 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095088638 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084560025 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08051384 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081114061 seconds)
  done (took 2.053208709 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072942879 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071538379 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074448639 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076323912 seconds)
  done (took 2.091400395 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06905438 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065685593 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068299181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070902249 seconds)
  done (took 2.07355194 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085034216 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08415464 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078934667 seconds)
  done (took 2.045899873 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102144557 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09282164 seconds)
  done (took 1.993209955 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080863796 seconds)
  done (took 1.88763491 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094396285 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099129174 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129666493 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111945244 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139375304 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116705187 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08159618 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08677866 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076467632 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083379304 seconds)
  done (took 2.821744323 seconds)
done (took 23.526860951 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079188493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372536623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361271954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089825674 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66955916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362744826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983694806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091090989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107225061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068216664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085873693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649663447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972231655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33090983 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962086907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329240916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651946247 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068432873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067723371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068135431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968622886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067648574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068842047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068315838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650148629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372479968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069366463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323862815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068548956 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072242825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357728228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069845162 seconds)
  done (took 16.30552847 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071588383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120391749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073136053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084852081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071286686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070166302 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071269059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068678258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117049851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068523198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086341325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067990268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072106716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069558049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089199699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068441767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070870515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069310996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068797448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069400445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087779562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069027743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069897083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069749285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069536095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081762345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070599888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068636496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06965851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073194397 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073587035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07036959 seconds)
  done (took 4.239402848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117933049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123775336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073801413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105096549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116423776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070211968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144548392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092163359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119874888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069417979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08612866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068352617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10280024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069617381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090437952 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069046836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071861005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06941114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068591594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069569613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088062627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068801296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070067794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069520395 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070024409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084116605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068921275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069125942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072245402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07417338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070493534 seconds)
  done (took 4.497533283 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071588162 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073138742 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079914962 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080322212 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067201854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069854175 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07044754 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067820321 seconds)
  done (took 2.405094947 seconds)
done (took 29.266071746 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078521618 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067811364 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071331262 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08617348 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072672393 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077565927 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064468313 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07446963 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073954921 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072176423 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072543465 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067298747 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070105948 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06507841 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071723127 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06633722 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07940286 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069938926 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078265034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079022501 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069616036 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073070851 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074802561 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079174582 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079230203 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078788003 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076365257 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072748829 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067670567 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069897344 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069550687 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077098224 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080508215 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080971887 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06676511 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067021966 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071014025 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070011297 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079993517 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075847768 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068563565 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075939554 seconds)
  done (took 4.868177262 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085233041 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087161313 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080634191 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078918676 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096081011 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081648853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084792855 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076603802 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076844444 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084171456 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073602561 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080738561 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077809272 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072460975 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077002849 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074683379 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079242695 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074141949 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077367203 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077852616 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085847375 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071826775 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085893607 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078427729 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073658363 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079221582 seconds)
  done (took 3.902057936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074748818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085250554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091634206 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142647319 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109149076 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085542858 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08055071 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09255164 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096264366 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067360115 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071855811 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091639902 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091488728 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073093013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10947241 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083513353 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079595994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069441856 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073917455 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095749443 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087434098 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084688424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094016392 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083900818 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066915837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06984315 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071781265 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081991008 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069579484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078074569 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06983318 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070749039 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068127932 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077862231 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069768475 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067536142 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087393722 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078370567 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080323379 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104371531 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076864184 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068681871 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092842464 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126764703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066402996 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070921835 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07073061 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079071414 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066588518 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095048331 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079157926 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066843794 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067918285 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066677491 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066658382 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0704536 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069705747 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069424281 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077410118 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073417363 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08623914 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072582815 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086189267 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067042605 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077489406 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066549105 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068566476 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066309872 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096055503 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069056747 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11016063 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068111199 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065965198 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078412713 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077991672 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07301669 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067334571 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085990493 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07797468 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071236077 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076071424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070131295 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072114602 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09932388 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067709108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069804147 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066183486 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071070374 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070136756 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067877643 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078948517 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066835954 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070888714 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086956895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067371493 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068001588 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070580372 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069041849 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067150559 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078034931 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071524008 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068831653 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077774417 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068402156 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070565713 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081402048 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074731544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066839453 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.06906571 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070943444 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068637228 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069176434 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071166526 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069380132 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074463907 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074161223 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07293714 seconds)
  done (took 10.884644483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166534927 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153965306 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069436135 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146883193 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076778345 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080430044 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147201788 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095403737 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068437357 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069064402 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067575284 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107330232 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.103634399 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113917475 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079558973 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068702497 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093826994 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113054013 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150527708 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146110397 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090532455 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075724676 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07014674 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069134632 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06922578 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077117016 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084562471 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076410159 seconds)
  done (took 4.596694906 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078654106 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103070074 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072386338 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090808907 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087959409 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068648679 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069755176 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069696813 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084518807 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076843488 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068163371 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073598954 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072044652 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071077253 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069230366 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074516159 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074942066 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067869292 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071787477 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072923466 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078205538 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093236036 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073459875 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067952654 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071011833 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067680374 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075953789 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079891548 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068197108 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103669899 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065801496 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072329252 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082248249 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068306823 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067793429 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06825206 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068275087 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068485395 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068350373 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066459197 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066832634 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072056539 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066881066 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07567289 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081133563 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075012091 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070312435 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070600623 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070967971 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065701421 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071004104 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071037123 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070727412 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075523852 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071947811 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071146071 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068939282 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09372045 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074023385 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067662577 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067126298 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066666435 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070273879 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07758952 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084107219 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070510174 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066629373 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068502729 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.080732668 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081498442 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067138793 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07356001 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065558458 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068715249 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07101925 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070328052 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068848564 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066703397 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067628451 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068608501 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068332066 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06777391 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066917231 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070367154 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066733097 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069775797 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068641379 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070086219 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077145131 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067123096 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071511341 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.0691833 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066531686 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07023327 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073425982 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071351745 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07816494 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078769002 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068518739 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070103666 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081363816 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070275871 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067898845 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073864245 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072485536 seconds)
  done (took 9.503863801 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091744138 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071422294 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084801936 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091009906 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077640163 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072828066 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077881937 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06783021 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083711825 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07256612 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075888184 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067129686 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078538839 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077224675 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06865467 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078661114 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071367763 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08575768 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08242532 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066592306 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077340148 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080031695 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080223536 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08250148 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08169413 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082932772 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079477857 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078210336 seconds)
  done (took 4.051588821 seconds)
done (took 39.621300632 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.919028913 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.147166952 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.886599552 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.098632387 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.940845826 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.106571027 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.017637725 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.901240986 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.098349121 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.923280716 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.249861499 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.36438615 seconds)
done (took 67.593746589 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.913844499 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.031329934 seconds)
    (2/2) benchmarking "String"...
    done (took 2.136609588 seconds)
  done (took 5.978277599 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.104690414 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.546831968 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.142801187 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.880647013 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.88603123 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.309269036 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.650366251 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.321397825 seconds)
  done (took 31.553895891 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.09724747 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.100675111 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.591055283 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.620995608 seconds)
  done (took 16.272492871 seconds)
done (took 65.729389951 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.891076379 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.881416304 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.950395939 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.914964796 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.88972468 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.883587283 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.88174847 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.883738357 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.904221039 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.935406612 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.881308872 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.899288218 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.883275801 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.921606667 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.377562792 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.928068208 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.90606277 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.884039183 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.897659441 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.915465813 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.885949964 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.884545963 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.30882202 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.049699425 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.498951281 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.987974559 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.138127161 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.295523596 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.890873145 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.883836383 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.098267405 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.031471167 seconds)
  done (took 207.278547077 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.884082988 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.905754504 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.984117008 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.917010703 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.345853403 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.064270971 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.978749497 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.361464627 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.891905714 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.884559524 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.151986322 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.881783465 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.136341449 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.916961272 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.925066046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.981495783 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.126685901 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.121562417 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.923462871 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.030918972 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.898387518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.059683078 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.995628448 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.096206412 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.916585659 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.895073328 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.914022053 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.904246259 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.070811972 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.109674632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.898469246 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.929553794 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.087740166 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.754504731 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.908098191 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.895726156 seconds)
  done (took 174.565881196 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.070309894 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.897610577 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.886922376 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.941809955 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.00478215 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.891820873 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.555677821 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.89738932 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.948738929 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.886667198 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.889416639 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.88934987 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.886036706 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.901616269 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.994529105 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.88465287 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.902746258 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.89103695 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.913094049 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.888338265 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.890903205 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.888066735 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.889722425 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.888007819 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.887980238 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.890670505 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.058485271 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.132716348 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.88924612 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.890976452 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.411771219 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.901333425 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.909573404 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.893621144 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.982574827 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.943426069 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.996523083 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.890735513 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.107213583 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.965393115 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.888985232 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.892304969 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.95278011 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.901879339 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.890260896 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.890491234 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.898116378 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.957909675 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.131034991 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.8906082 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.014534228 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.366531413 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.890158776 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.890108322 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.892146273 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.454414596 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.886917252 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.887910608 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.896501647 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.901346368 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.889668736 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.890473752 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.278117342 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.965091101 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.092403398 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.098345309 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.894943786 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.893466229 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.891397955 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.4802847 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.038782716 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.890333532 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.891638375 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.893647589 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.893056667 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.892111187 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.896500492 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.013586568 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.897913733 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.009144731 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.977047825 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.010867519 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.892810704 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.905980821 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.705902354 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.896068193 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.963167911 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.925458682 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.707605828 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.891896135 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.266092341 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.644741632 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.891428771 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.893428076 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.906665996 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.891963813 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.895278854 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.89268871 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.972274895 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.89038083 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.01712785 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.609659957 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.210949599 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.888134513 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.893079291 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.893065931 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.901864583 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.974976093 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.013262718 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.89492221 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.961120215 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.897601853 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.895285691 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.984250194 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.892470538 seconds)
  done (took 413.117439151 seconds)
done (took 798.902554748 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.54044556 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.513067789 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.610486721 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.531549351 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.506336368 seconds)
  done (took 14.522949866 seconds)
done (took 16.348098411 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.909725341 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.898679764 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.951034699 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.974308634 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.909950067 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.916017152 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.977925362 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.914109683 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.943134022 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.949448592 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.981611101 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.977813375 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.917512668 seconds)
  done (took 27.044999061 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.904880422 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.045799111 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.13297479 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.936607958 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.926590809 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.136377615 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.959992463 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.036500866 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.042488349 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.125325217 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.139239845 seconds)
  done (took 24.213463522 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.903860123 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.04444335 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.141919619 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.938118364 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.906743883 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.130824097 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.965388226 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.041710188 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.051298634 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.128079462 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.13115536 seconds)
  done (took 24.218940601 seconds)
done (took 77.30568297 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.898794164 seconds)
  done (took 3.721795063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.917354257 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.076288932 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.893788453 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.896697884 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.894222544 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.894745475 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.895289559 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.894615492 seconds)
  done (took 17.192386676 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.895172114 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.8957437 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.894922133 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.894003537 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.894054399 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.894508387 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.894147244 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.896681703 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.894213496 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.896129086 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.894719969 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.89415317 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.893883196 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.89375166 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.89546174 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.895490867 seconds)
  done (took 32.139384784 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.89419319 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.895512778 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.893730464 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.894615453 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.89607078 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.894529449 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.895522097 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.896562788 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.895136831 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.895813427 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.895336947 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.894267628 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.893649227 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.894374484 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.893554705 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.89392724 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.894244386 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.894263959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.899229906 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.895560738 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.89801348 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.897134451 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.898525452 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.898100267 seconds)
  done (took 47.32195627 seconds)
done (took 102.208224098 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.597351856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.481945015 seconds)
  done (took 9.902021414 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.902169333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.897063534 seconds)
  done (took 5.692195803 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.895840963 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.898369485 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.897233537 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.897697686 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.895858177 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.895853418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.897653803 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.897802638 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.897462255 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.898314094 seconds)
  done (took 20.795111979 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.896530985 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.896558513 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.897087651 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.895471205 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.896993733 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.897008807 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.897643555 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.895943837 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.896839003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.896556193 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.896960014 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.896841979 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.89606117 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.899121478 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.896217573 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.897642904 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.897826705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.896119048 seconds)
  done (took 35.967278521 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.897286753 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.896320893 seconds)
  done (took 5.618032493 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.897023178 seconds)
    (2/7) benchmarking "second"...
    done (took 1.896991609 seconds)
    (3/7) benchmarking "month"...
    done (took 1.897844171 seconds)
    (4/7) benchmarking "year"...
    done (took 1.898635114 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.898347125 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.900772291 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.896660461 seconds)
  done (took 15.112402903 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.899043937 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.061934262 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.125001105 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.533515718 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.899777735 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.900203072 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.802867777 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.903869629 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.902808658 seconds)
  done (took 20.855156068 seconds)
done (took 115.767597281 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.636470022 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.899980909 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.176693243 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.951065942 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.920103731 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.193672047 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.929218991 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.211284034 seconds)
done (took 43.746622757 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.92761658 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.896975199 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.92296156 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.924690255 seconds)
  done (took 22.571792856 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.897480244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.268121276 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.919297455 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.743290115 seconds)
  done (took 22.668244279 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.263852301 seconds)
    (2/2) benchmarking "read"...
    done (took 2.284235264 seconds)
  done (took 6.380847061 seconds)
done (took 60.379828518 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.899873647 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.898322437 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.89863966 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.900127004 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.900051453 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.901382554 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.899095321 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.900635404 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.90004228 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.900062828 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.900480033 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.899808855 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.899694029 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.899915443 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.901831659 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.90154333 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900979783 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.899237766 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.899798631 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899906091 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.901768431 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.899605204 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.900202318 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.900007885 seconds)
  done (took 47.431613604 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.902653108 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.901920849 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.900620718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.901945891 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.900396495 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.901649118 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.902505267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.901258733 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.900653854 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.901242152 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.901171007 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.902414825 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.900523813 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.901669771 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900189651 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.901259989 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.901327048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.90234116 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904243259 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.901434479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.903546614 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901988042 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.902791033 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.904527158 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.902329232 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.901479622 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.902877631 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.904283776 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.901606761 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.902166762 seconds)
  done (took 58.886127651 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.901685462 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.902555528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.901779286 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.903170045 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.90261363 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.902472634 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.902104477 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.902372602 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.904026576 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.906697153 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.903236419 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.9035227 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.904418624 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.903515444 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.903787173 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.904834442 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.904142063 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.904052115 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.906845852 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.903106613 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.905581013 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.903961542 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.905138163 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.904982046 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.905470906 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.904598005 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.904081058 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.904321686 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.906702072 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.904183766 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.905526971 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.905545857 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.904621697 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.905123046 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.903529998 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.904128082 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.906021687 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.905827401 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.907182142 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.906584789 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.906023612 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.904981788 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.906332018 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.905587862 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.905586993 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.907388118 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.906291078 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.905962573 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.904848537 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.904411426 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.906564329 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.906073531 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.90623497 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.904419157 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.910873656 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.905707271 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.906771351 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.906873652 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.905977422 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.908236729 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.907488289 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.907851372 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.907344984 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.90664021 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.905496251 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.907174384 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.906667439 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.906541967 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.906682368 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.908156066 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.907394281 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.905676274 seconds)
  done (took 139.015619145 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.90827687 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.909395791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.907800204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.906777546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.907312862 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.906888217 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.908269104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.90684414 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.909410207 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.906615867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.906696827 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.907840411 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90680977 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.907809803 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.908046286 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.906475445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.907515531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.908824813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.909240488 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.909515531 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.909300488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.909399542 seconds)
  done (took 43.809776661 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.905632045 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.908746925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.909793119 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.908804305 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.908539402 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.909462701 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.907112451 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.910624243 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.908907195 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.909998678 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.908487912 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.911231385 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.909817627 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91057227 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.90893147 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.909455411 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.907154304 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.910264318 seconds)
  done (took 36.19935511 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.908247367 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.90865665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.909015998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.908488571 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.90982503 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.908930517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.908812792 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.910362495 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.911119691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.912003736 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.908608246 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.908663628 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.909551094 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.909824062 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.910139824 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.909289687 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.911217658 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910666391 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.909378222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.911030393 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.910928247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.908863316 seconds)
  done (took 43.851001578 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.910914557 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.910652557 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.911189893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.911356769 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.909631297 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.911157186 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.911328519 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.912599908 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.912189073 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.910871404 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.910811585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.913841959 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.911532823 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.911656506 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.912492562 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.913868804 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.914352569 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.912023871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.910592517 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.91435585 seconds)
  done (took 40.074971116 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.913261457 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.911781613 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.912956831 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.911499979 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913245753 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.912019668 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.911289838 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.912417339 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.913740587 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.911470567 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.912953933 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.914910293 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.914060861 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.912195238 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.915576073 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.910429432 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.915604402 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.913297509 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.913142047 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.912268463 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.914922078 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.912566802 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.911818626 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.913024215 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.914492415 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.913056812 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.913487032 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.915270749 seconds)
  done (took 55.406913359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.912794277 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.911591356 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.9137092 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.913624553 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.913438964 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.913321571 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.914507155 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.912388268 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.912907427 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.913891627 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.913901275 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.915256798 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.915292508 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.914328997 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.913723996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.914421319 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.913860846 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.91378205 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.914000081 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.913348803 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.914725644 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.914528515 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.913854129 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.913330271 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91370312 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.913984325 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.913797822 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.914873939 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.91447901 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.914356636 seconds)
  done (took 59.256451202 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.934122331 seconds)
    (2/2) benchmarking "in"...
    done (took 1.933740907 seconds)
  done (took 5.709114776 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.914047714 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.915370788 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.916076752 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.915508607 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.914106483 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.91421712 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.914627445 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.915015723 seconds)
  done (took 17.160595425 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.916392487 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.919134472 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.917245363 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.917193685 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.916267118 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.92564865 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.920130997 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.917912071 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.919600635 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.918768843 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.920328079 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.920398546 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.925330366 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.92114765 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.91586569 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.917328441 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.918613066 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.920941703 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.917783517 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.917216855 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.920619454 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.917628248 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.915797997 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.916408587 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.917064862 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.920085988 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.927102061 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.920267111 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.919327368 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.915896261 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.927283836 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.916461091 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.918867278 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.924150274 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.917967221 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.918749024 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.927061634 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.919308423 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.919099373 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.918081622 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.920954179 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.920634643 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.922444385 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.926347228 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.91756459 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.91807091 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.917670657 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.918821167 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.91969812 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.922404863 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.926054622 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.920404444 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.918253878 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.917711455 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.921622066 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.919231987 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.918832386 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.921307038 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.926551194 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.927817961 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.923641215 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.940223186 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.930483188 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.920076466 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.920674363 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.930175239 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.947621681 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.922789646 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.923144372 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.918424483 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.927246059 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.920507047 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.920517895 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.921087675 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.934001661 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.930031826 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.921178006 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.919150115 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.920855138 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.920212351 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.923851867 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.922269577 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.922592861 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.921732503 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.931870075 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.950746772 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.920001419 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.920238655 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.922704205 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.924931172 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.925814562 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.924773896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.921855732 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.920968154 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.923909507 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.924249007 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.922989962 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.921513605 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.924101743 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.931285625 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.922290217 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.921368473 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.924819863 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.929400519 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.921641307 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.923083076 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.922766302 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.921603451 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.929397994 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.921696782 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.922430661 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.921879779 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.924436408 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.928011323 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.924566548 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.928547228 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.932149947 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.932260439 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.92772453 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.927435808 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.929221794 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.924913977 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.932777707 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.949914267 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.922600727 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.929615242 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.928784506 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.94006623 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.928307956 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.923478467 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.925690653 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.923209985 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.925106641 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.926864621 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.924093256 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.925501869 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.925937236 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.923451613 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.924501464 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.925031124 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.927646416 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.926452482 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.927227935 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.92469024 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.928287271 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.925702565 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.929260827 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.932196934 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.92827649 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.925692853 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.9254142 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.92961635 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.92940013 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.92515933 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.92386534 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.925105568 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.924742707 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.928035098 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.927744215 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.927031279 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.924762168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.929354615 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.928133642 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.927013627 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.925385557 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.9259219 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.926966241 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.925366596 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.929239381 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.928226228 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.927972244 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.927378847 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.928684892 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.925146077 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.926559465 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.926525213 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.926005371 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.927637788 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.932111311 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.940518297 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.932814668 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.937874829 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.927562304 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.936111425 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.925670673 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.928728464 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.928864209 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.92727541 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.927763885 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.928922246 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.929562209 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.931318641 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.949116207 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.94031025 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.932133096 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.931879519 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.936065682 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.931991941 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.931315155 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.92690819 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.929350392 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.930090273 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.92704767 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.928247552 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.928218893 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.931055447 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.930341387 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.928373281 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.934312195 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.929391145 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.928452061 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.930921548 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.929063585 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.932571596 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.930693086 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.93098937 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.929749837 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.930633792 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.937233285 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.933263273 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.929050573 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.928468913 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.932825821 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.932386594 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.930089039 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.930920017 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.935354817 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.930093942 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.93330175 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.937559068 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.933926218 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.93197175 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.932698803 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.930539973 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.933526221 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.931085404 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.936426088 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.940138828 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.935479433 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.92981366 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.937870744 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.930669423 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.934181273 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.929993813 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.934040711 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.930866167 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.933124474 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.930953965 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.928402118 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.940345262 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.933785549 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.933968089 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.932925606 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.932967042 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.934890217 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.933985935 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.932481331 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.935867663 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.94308223 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.938343181 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.935020406 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.935245572 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.935659716 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.934365417 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.935051913 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.931650153 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.944295537 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.945736973 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.93059 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.933230106 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.93279934 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.935115533 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.93174732 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.934254639 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.941093928 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.935101024 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.934978963 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.936407186 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.931462113 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.935679918 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.940533646 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.936374797 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.938447964 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.934752409 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.931298417 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.93287194 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.932222325 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.93506361 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.932734151 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.93488973 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.936231122 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.931835312 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.933845568 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.932161644 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.943965453 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.9350209 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.933774025 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.941356397 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.936400856 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.934020648 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.9356798 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.934577948 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.933851834 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.93587046 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.933441385 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.935971034 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.935776064 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.936394752 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.946037987 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.93714285 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.942548526 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.933969693 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.945307127 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.935172633 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.935590892 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.933582995 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.935497062 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.942540729 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.934127768 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.936819444 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.941808503 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.936352281 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.939129975 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.939381453 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.935078177 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.933949575 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.936547853 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.937326182 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.943403705 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.941301221 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.935039711 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.935181125 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.934704795 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.937089011 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.939992798 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.937599407 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.937450821 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.938659055 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.935828623 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.936001174 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.934810687 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.937052885 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.938509884 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.938140562 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.934768012 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.945416026 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.939133259 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.939480959 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.941890833 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.93647536 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.946571742 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.93871074 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.938425116 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.937897732 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.935448094 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.94012807 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.938284592 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.938572758 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.939900929 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.936944622 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.942563788 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.947889863 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.945790195 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.939872817 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.938150532 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.938238869 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.939332687 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.948429729 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.963179844 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.936087607 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.93870405 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.941350361 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.946086908 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.940862626 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.946013733 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.942555523 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.949842285 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.939172524 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.9406986 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.942298302 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.951083727 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.937922287 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.937660109 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.9381297 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.94376648 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.94171903 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.93792902 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.940997007 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.939599144 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.943481299 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.952354252 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.939735243 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.941378505 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.938738456 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.938042131 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.937387556 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.940808826 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.939686046 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.94034607 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.937829742 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.937929851 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.939877148 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.944949017 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.941091377 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.942842672 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.950555688 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.938632372 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.938938604 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.9404363 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.936974748 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.94216387 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.938939664 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.939827011 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.942439359 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.940021121 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.941924925 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.944349465 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.951064725 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.943092717 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.942172253 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.938416725 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.945585593 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.943579306 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.939553615 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.942442773 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.948715817 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.944412662 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.953232737 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.950671404 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.940353257 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.942857106 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.948432685 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.948019048 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.939393141 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.942128201 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.940338645 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.943206969 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.944172952 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.945341721 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.941210882 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.945683796 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.947416324 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.942735439 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.943716231 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.942366334 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.940119892 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.944264426 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.944788873 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.948121509 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.943589447 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.941687466 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.94338037 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.944386013 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.947602774 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.944744643 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.943243011 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.941405503 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.945753601 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.94710674 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.947481245 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.943817861 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.943736048 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.948252869 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.944187645 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.942667039 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.943763844 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.944660884 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.944760965 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.949000633 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.954460788 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.944930038 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.945705303 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.944514309 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.949388107 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.943401017 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.943918722 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.944265252 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.948295971 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.950235417 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.948467789 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.945853973 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.94564806 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.945546187 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.94781885 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.94595129 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.949585416 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.944184871 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.944228675 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.945761729 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.948778701 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.954972024 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.950811574 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.949014951 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.954893618 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.950287942 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.946343838 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.947748379 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.945338894 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.947621342 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.948130865 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.950395927 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.946948219 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.949828376 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.944642063 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.947398846 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.944124933 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.948697074 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.945551748 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.944553188 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.950096797 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.957077879 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.955215927 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.946606478 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.948975741 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.946874693 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.952656949 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.95928329 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.945246798 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.945220344 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.945436402 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.94811257 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.9502377 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.952856326 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.956295268 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.951212817 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.94736443 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.949948787 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.968109728 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.948529137 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.957459985 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.982811848 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.950091759 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.946972557 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.948239998 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.95040313 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.947579521 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.951787487 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.946596823 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.955159517 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.948768196 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.946688904 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.955582659 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.951310115 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.948098134 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.94790532 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.949011539 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.954442177 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.949682464 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.958018333 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.950396962 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.949376473 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.950268489 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.951633365 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.949666549 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.948027369 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.948096331 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.952358319 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.950011563 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.949266285 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.958862671 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.948159345 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.95078192 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.961304363 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.963111551 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.947699916 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.948111398 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.948326812 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.9551214 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.953321038 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.947674707 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.951986533 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.957755603 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.952977444 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.956277647 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.952029025 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.952500923 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.950940724 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.948035571 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.951108224 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.96124436 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.962131763 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.95237637 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.95113508 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.957250377 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.949210959 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.95789746 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.95563858 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.951255025 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.952310228 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.948603214 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.950376303 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.950128287 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.953573674 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.954846649 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.959076968 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.948918286 seconds)
  done (took 1156.066537987 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.950345003 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.951529686 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.950701328 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.951306653 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.949572853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.951355543 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.949156052 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.951877153 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.95042148 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.952460814 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.953101557 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.953585411 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.952539093 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.952386292 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.951380183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.95090365 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.95042104 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.95260555 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.951420139 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.950421404 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.950087732 seconds)
  done (took 42.854311879 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.951539611 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.950882731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.953325333 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.952405468 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.95556637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.950506183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.951355404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.950996629 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.950206635 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.953609001 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.953860499 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.952051254 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.953182183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.952128646 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.951944341 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.951540188 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.952339944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.953427817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.951272768 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.95520302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.95156042 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.952469069 seconds)
  done (took 44.82796303 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.952307177 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.953456161 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.953944348 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.953130745 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.954423269 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.953406495 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.954728303 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.956153973 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.95408331 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.956016188 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.961503447 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.960561385 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.954753696 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.955372507 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.953818167 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.952031302 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.097855922 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.952896943 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.953194848 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.954538445 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.955811045 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.960453205 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.9543358 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.954030441 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.953551491 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.95595394 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.954980308 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.959230519 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.952905934 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.957153927 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.960786796 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.956797127 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.956521928 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.96168471 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.955437872 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.958610249 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.960908383 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.956586267 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.955977952 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.956519767 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.967793316 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.98266345 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.957764144 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.959357318 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.962532671 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.95571494 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.956682852 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.960200023 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.965503165 seconds)
  done (took 97.921190315 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.956984113 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.95651003 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.956248197 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.956939541 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.956207516 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.957208497 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.955622281 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.954755763 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.958092643 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.955759368 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.955945627 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.958047221 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.956251119 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.95411359 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.955138769 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.957351465 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.95580311 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.953982787 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.956823519 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.954798009 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.955408478 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.956409337 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.955399327 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.958286047 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.954847939 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.954648716 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.956384786 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.956251221 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.960696761 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.955646678 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.95785756 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.955269657 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.954965176 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.957614877 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.957076671 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.957983421 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.957280795 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.957405581 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.958526786 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.959308191 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.957925847 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.956219916 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.958835007 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.956701159 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.956357462 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.95615218 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.95702727 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.957093061 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.957631167 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.957404909 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.956739022 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.958264091 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.957712065 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.958099645 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.958879136 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.960536513 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.956484148 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.956483179 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.957312947 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.958349856 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.95884179 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.957326564 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.956625727 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.958573238 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.956967777 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.959940659 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.954110744 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.955718308 seconds)
  done (took 134.94851853 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.957713883 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.955781151 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.956825591 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.956713997 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.957905399 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.956416466 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.957868433 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.958097213 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.956407852 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.954485157 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.956037148 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.956683251 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.958531637 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.95627553 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.957934403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.955803305 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.957445968 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.956380592 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.957598193 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.958070013 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.957190647 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.95911226 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.958408438 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.957838893 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.964347323 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.958020131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.959068177 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.961934741 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.956114204 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.955170114 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.954334782 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.956910545 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.959007857 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.953481367 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.962209902 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.959080827 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.960230543 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.956916331 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.957107648 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.956296961 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.96075436 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.956609648 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.957656768 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.954365908 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.955187575 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.955556773 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.957136395 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.95363493 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.95621355 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.958188491 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.953470734 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.95520814 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.95617036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.947720634 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.947781668 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.946776967 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.94865959 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.948999283 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.950163572 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.948824179 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.948235754 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.94616371 seconds)
  done (took 123.149219139 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.950784181 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.94760587 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.94508876 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.947035243 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.949514777 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.949205232 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.947823676 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.946955627 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.947410144 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.948374502 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.948893656 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.947512776 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.948881969 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.948506226 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.95090517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.95190444 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.947144173 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.948096363 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.948295297 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.950234634 seconds)
  done (took 40.846084498 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.939716712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.942463135 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.941695277 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.943050314 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.941319154 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.942206166 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.941489088 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.940464963 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.940662039 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.94142673 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.942856015 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.93936509 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.94054056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.940592033 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.940021176 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.940265138 seconds)
  done (took 32.932897466 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.940766281 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.941639957 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.939782726 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.940524408 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.939718844 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.941199419 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.940018561 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.940030697 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.940223084 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.940225748 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.938667032 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.939159485 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.940550165 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.941300121 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.941638343 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.941508735 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.939462087 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.93945876 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.940218104 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.940793109 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.942612521 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.939762523 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.941265626 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.942493624 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.941088418 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.942054904 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.941060719 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.939882545 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.940567844 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.941347131 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.940060903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.941522216 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.940495725 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.94039664 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.941913937 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.940021974 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.941510233 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.941570533 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.940146228 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.943630052 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.940160589 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.941252856 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.939648102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.93969506 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.942434461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.940541197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.941318694 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.941957763 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.94023665 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.943091179 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.940768245 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.940816404 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.938886342 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.94066935 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.940814806 seconds)
  done (took 108.608114374 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.941104836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.942705181 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.939924206 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.941807742 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.941293478 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.941055673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.940154056 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.940321132 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.939075384 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.943138887 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.939750411 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.94013235 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.941018396 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.943279497 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.948788297 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.937394272 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.93616423 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.937377884 seconds)
  done (took 36.804373884 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.940932469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.936359682 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.935179076 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.937242901 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.937652068 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.938710359 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.935721602 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.937773658 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.934647768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.936285282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.939606419 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.944101803 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.935448348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.936038508 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.935321242 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.933315399 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.935966249 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.934682107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.936545938 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.934750225 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.933758118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.935212791 seconds)
  done (took 44.468912298 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.9330574 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.933651668 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.951225633 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.956616809 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.951323148 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.966994959 seconds)
  done (took 13.555007517 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930524109 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933348822 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.931730405 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930448957 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930428993 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.93082094 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930835926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931645027 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931627017 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931434097 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931753219 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931740719 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930516145 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930175291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930302168 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.931389359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930974767 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930826099 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929408935 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928999553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931338703 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931752631 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93146027 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929852732 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929933687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931738426 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931438081 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93242048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929779348 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928819428 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.929903642 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930409443 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929201294 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927221189 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927446935 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929296134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92868767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92872641 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926996807 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928494848 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.927505082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.928353888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.928943534 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928059623 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92977573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928528518 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926934191 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.929054029 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.929551558 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927195842 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928120752 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926725188 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926952728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.928491433 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925799148 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927019779 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92689502 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.926772229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926809822 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927653294 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927236102 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92715678 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928448668 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928236981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929474492 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927026206 seconds)
  done (took 129.20036953 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926639406 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.925993075 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925887477 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927492122 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927040862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.926222633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92850223 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927748169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926741424 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927467774 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925847977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925698176 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927077078 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.926599436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928879688 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927494295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927207084 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928714493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927825989 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927112255 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.929290388 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926953031 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927753531 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928373298 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925163772 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926716969 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927137029 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92820844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926470658 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926386549 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927669165 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92701775 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928941173 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.925880332 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926214637 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928017804 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927126889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928887112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.929000908 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927631009 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926769171 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927681078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926568936 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930821565 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926450382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925880358 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.925796802 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925595316 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927090018 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927196121 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926974419 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927750342 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927779556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930832076 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926757567 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925382565 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926040856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92626289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927434038 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926995265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926029894 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927525376 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926502584 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928377603 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928729934 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927189097 seconds)
  done (took 129.056094504 seconds)
done (took 2683.874413038 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.967862329 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.125572241 seconds)
  done (took 15.947130486 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.101033307 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.05203698 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.938981822 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.970439259 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.937901956 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.939655643 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.965078833 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.937625571 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.936292173 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.936532139 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.936515248 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.12144645 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.996178396 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.937170318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.935151306 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.028415768 seconds)
  done (took 53.54177632 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.939224661 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.937514524 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.950106367 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.939444221 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.939752071 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.955839678 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.967535831 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.941735851 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.998043192 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.949572819 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.061480713 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.951731575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.940255968 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.989390992 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.952013875 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.953221299 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.027261634 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.014518835 seconds)
  done (took 37.272571518 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.014206396 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.954140842 seconds)
  done (took 10.838125213 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.953047744 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.960924034 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.941534533 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.947649065 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.950728472 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.969711577 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.939227045 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.974097439 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.937438405 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.942888935 seconds)
  done (took 71.382535512 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.941520455 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.938632657 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.938177133 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.934067933 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.933254329 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.939636188 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.935695322 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.940535478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.602546273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.975191681 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.946155367 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.942287808 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.937463015 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.937824363 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.936838907 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.958640797 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.05530493 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.934650468 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.93401898 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.944012817 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.938081799 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.993100791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.950472805 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.938255663 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.969280928 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.601240618 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.947893013 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.942600169 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.044990932 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.935398352 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.936973512 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.123087591 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.94126039 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.395353707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.202979823 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.944264787 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.949819152 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.944095293 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.935346117 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.051674362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.938530563 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.943299428 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.835995764 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.179969061 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.034849786 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.980180981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.283556308 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.955276417 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.937901474 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.967316321 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.940022461 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.938530586 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.952674002 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.449346897 seconds)
  done (took 136.495834502 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.936356692 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.308781666 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.101475024 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.936829353 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.222317268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140875524 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.937699491 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983179272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.940198427 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1804523 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.183054975 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.043364078 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.93869066 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.93603025 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.937389613 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.93644547 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08671938 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.006513765 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.941094959 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.935524166 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.963802917 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.177443062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.078226375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.942575167 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.956252349 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.15093236 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.060015342 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.04280936 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.424767693 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.937860027 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.000022774 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.941657754 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.936925958 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.936334452 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.099570186 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.032988215 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.020728921 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.940551699 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.937004298 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.938043419 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.600451477 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13541423 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.034079226 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.067405036 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086586708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.144531908 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.719623838 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.936985753 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.679850625 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.099383991 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.1655594 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.184307116 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.059401322 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.943032654 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.202735862 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.936951654 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.937838953 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.18745707 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081145739 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.037163134 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.939451215 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.939380229 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.938189732 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.176602115 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.941350224 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.032841522 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.942233365 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.93998175 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.036004613 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.037314402 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.07805625 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150948863 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.967048053 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.670131245 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.161862037 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.183291077 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.006038256 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189522612 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.943612322 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.938041424 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017420583 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.783153726 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.144191112 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.184210288 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.194500182 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.410216724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.670568973 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.938408322 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.164999818 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.159214905 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.188409495 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086470506 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.09536316 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.322959991 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.939555769 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.939476422 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.171863238 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.065184599 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.942884969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.281109847 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17186749 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.499249175 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.957042673 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.244982385 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069520785 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.942778517 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.573610105 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.942101708 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.162563229 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.984133407 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.942831191 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.940140336 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.160986305 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.91348946 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.940832075 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.57344208 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.00123468 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.943259041 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.175995092 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.943584308 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.20237311 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.944282301 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.179344778 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.086766539 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971361173 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.113088584 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.08594701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.943295903 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.184806139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.183799299 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054701639 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.16211281 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.675858421 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.941170064 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.229223038 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.944921332 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.941776692 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.111425565 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.944660684 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.090287513 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.943496543 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224704887 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.964489331 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100785404 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.943989744 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.213620256 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.974625254 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990832724 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.945804701 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067932852 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.943924205 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.777060641 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.097228912 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.945941472 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.941098347 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.505239485 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.942323523 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.088126009 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.169392292 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.963318169 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.016869118 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.607588503 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.942061559 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022596712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.965028225 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.339215432 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.943865188 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.179150973 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.944843146 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.941772388 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.942558557 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.17971109 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.124922839 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.94616815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.946173251 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.838392988 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.943313024 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.942490517 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.122099529 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.338093512 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.943508092 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146412057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.946585591 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070508453 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.948802887 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.014824099 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.27729214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.942648905 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.943965274 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.943184157 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.943575192 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.942460502 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149746918 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.97502392 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.484374409 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.078401004 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210762778 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.251863796 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.194367842 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.98491237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.94571283 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.19707793 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.945493389 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.005721904 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.9470649 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.963695811 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17238538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.946119217 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.154520958 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.224496843 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.812704633 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.993878711 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.945827917 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.947145345 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.944574661 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.109159814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030809906 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.946687625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.943743289 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.058247582 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084985439 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.15181964 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.94614633 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.123897354 seconds)
  done (took 918.162860656 seconds)
done (took 1245.496568831 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.944488843 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.946815362 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.948402647 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.947316386 seconds)
  done (took 29.666086727 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.950010552 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.945855331 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.946810977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.947060364 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.949078473 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.946461509 seconds)
  done (took 13.561418068 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.268128599 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.948242174 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.94891992 seconds)
  done (took 22.041439552 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.020027879 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.331006689 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.086217982 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.363790608 seconds)
  done (took 10.677730321 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.948092989 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.949033185 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.949613076 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.948509578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.950998038 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.95109254 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.95079847 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.949249156 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.950869256 seconds)
  done (took 19.426508222 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.096043735 seconds)
done (took 101.345686318 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.957867711 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.05753205 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.945428245 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.481160014 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.071237905 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.102655198 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.447146201 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 5.704962459 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.104131063 seconds)
    (10/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.706375348 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.972106857 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.956564119 seconds)
    (13/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.828859279 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.470573569 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.277893381 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.958342343 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.056756516 seconds)
    (18/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.404392202 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.118254741 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.977743921 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.234779334 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.250660392 seconds)
    (23/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.087768108 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.033577847 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.056183165 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.107194113 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.319853562 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.960871641 seconds)
    (29/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.795995915 seconds)
    (30/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.214298643 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.086873585 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.042021592 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.04586915 seconds)
    (34/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.734482783 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.306438888 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.268690352 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.071777529 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.270914574 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.960324126 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.977416249 seconds)
    (41/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.977942811 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.981514148 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.975571836 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.408069137 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.13125667 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.215687649 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.503957464 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.065660666 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.346863036 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.381433421 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.198101024 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.312859893 seconds)
    (53/309) benchmarking ("sort", Int8, false)...
    done (took 4.823168387 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.614220633 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.210310053 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.969521681 seconds)
    (57/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.95666012 seconds)
    (58/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 3.548580971 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.064979628 seconds)
    (60/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.041733896 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.104571232 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.97402673 seconds)
    (63/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.362380797 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.087854457 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.957784136 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.30830975 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.964402802 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.954481507 seconds)
    (69/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.70618588 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.914540964 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.956688273 seconds)
    (72/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.046987112 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.951986891 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.553800677 seconds)
    (75/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.632628249 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.254344717 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.970915579 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.284074745 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.312562022 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.98776344 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.190150434 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.068738724 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.465609351 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.094933798 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.088998547 seconds)
    (86/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.967273907 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.726891684 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.955375081 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.494414405 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.95770084 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.364893901 seconds)
    (92/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.650873741 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.044564056 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.882500478 seconds)
    (95/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.873355343 seconds)
    (96/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.065902126 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.015362869 seconds)
    (98/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.03721804 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.439672879 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.085000096 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.150087877 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.190905241 seconds)
    (103/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.014391466 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.961528819 seconds)
    (105/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.691257748 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.342294635 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.706774601 seconds)
    (108/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.895737145 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.310266099 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.974038342 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.952235497 seconds)
    (112/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.489664439 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.9558814 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.356831995 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.453180821 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.985317374 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.266317998 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.108456952 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.086185143 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.350878898 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.267967076 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.253725514 seconds)
    (123/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.399131369 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.069151722 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.978923169 seconds)
    (126/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.808183719 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.957464499 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.248018145 seconds)
    (129/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.140920549 seconds)
    (130/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.43118458 seconds)
    (131/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.624940741 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.06203234 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.031651115 seconds)
    (134/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.03117527 seconds)
    (135/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.122469034 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.983209275 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.270266414 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.989731549 seconds)
    (139/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.509583111 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.209639226 seconds)
    (141/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.3152058 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.275367126 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.061477267 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.322172478 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.084017453 seconds)
    (146/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.97287453 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.958682183 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.297879378 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.920005622 seconds)
    (150/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.230422517 seconds)
    (151/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.143835368 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.165891646 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.955130867 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.316151235 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.171741521 seconds)
    (156/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.219320745 seconds)
    (157/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.983033476 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.089607103 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.971329132 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.956303169 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.586135206 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.98479843 seconds)
    (163/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.559717655 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.959629373 seconds)
    (165/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.946178812 seconds)
    (166/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.967656939 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.193647303 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.959315143 seconds)
    (169/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.420716809 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.214939283 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.972224627 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.955875026 seconds)
    (173/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.998263132 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.383218626 seconds)
    (175/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.053100578 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.576392535 seconds)
    (177/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.114603691 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.969976688 seconds)
    (179/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.105293513 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.791584717 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.234818967 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.086463741 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.291623972 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.112772978 seconds)
    (185/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.094317122 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.20985352 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.089708011 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.961813881 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.080317216 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.957938011 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.161114677 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.960707948 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.962729366 seconds)
    (194/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.127762145 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.991949981 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.142405891 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.974059374 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.108791185 seconds)
    (199/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.054746444 seconds)
    (200/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.855963847 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.963137742 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.052934758 seconds)
    (203/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.082281191 seconds)
    (204/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.96481707 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.022632527 seconds)
    (206/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.980884161 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.955372158 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.044693168 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.125742788 seconds)
    (210/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.929504766 seconds)
    (211/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.961719724 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.24962069 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.151188088 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.304722415 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.650164378 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.962108081 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.648380955 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.925880094 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.26761532 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.958070756 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.099931404 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.264560706 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.633457833 seconds)
    (224/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.024956656 seconds)
    (225/309) benchmarking ("sort", Float32, false)...
    done (took 5.6592154 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.961728425 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.451478313 seconds)
    (228/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.960804905 seconds)
    (229/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.137028314 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.966968377 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.093669356 seconds)
    (232/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.407253325 seconds)
    (233/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.961564249 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.055340673 seconds)
    (235/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.209670542 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.272911155 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.146139941 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.400659644 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.099336279 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.359006563 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.515499444 seconds)
    (242/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.056988567 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.081216072 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.179925802 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.986693248 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.963535379 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.960921808 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.339243717 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.066926941 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.961672696 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.199484524 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.183585832 seconds)
    (253/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.122593794 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.167430204 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.248964489 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.253733528 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.219073615 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.079592343 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.063230904 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.741141803 seconds)
    (261/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.734091904 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.00124081 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.089549426 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.959961672 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.979062215 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.961270552 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.295207192 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.985525521 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.331178128 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.992353763 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.085607402 seconds)
    (272/309) benchmarking ("sort", BigInt, false)...
    done (took 6.965432526 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.204730787 seconds)
    (274/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.965991739 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.115669707 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.330922325 seconds)
    (277/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.228870576 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.396459903 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.967749565 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.186392441 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.040460326 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.022153844 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.963966036 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.407767747 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.313561504 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.304345982 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.96504527 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.875461153 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.138800879 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.966398121 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.415580123 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.385137195 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.807314343 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.97392686 seconds)
    (295/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.040561103 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.214804939 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.397616307 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.972086386 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.078884532 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.963960781 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.9461408 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.910880375 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.908278267 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.082584794 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.179844517 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.054185316 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.411659148 seconds)
    (308/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.126475629 seconds)
    (309/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.100240173 seconds)
  done (took 1035.647888172 seconds)
done (took 1037.583161854 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.989590937 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.984852854 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.965294725 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.987174544 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.078201001 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.01217137 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.978260413 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.971255414 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.017509615 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.016853824 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.9662053 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.011154226 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.969579294 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.966957424 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.967744133 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.985425091 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.266425722 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.991246008 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.98579324 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.97866493 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.985475159 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.966026843 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.01600418 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.011885338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.971228 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.972742572 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.972386758 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.988623594 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.081249856 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.970747578 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.974755046 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.980381461 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.262832347 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.990613988 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.966458945 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.988595635 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.981694281 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.980803063 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.973230374 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.002471948 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.352161248 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.002653404 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.969961261 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.969114155 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.968097306 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.975215542 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.969686453 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.977751758 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9852411 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.985818934 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348236442 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.018352526 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.970838137 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.969653804 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.982414225 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.969929568 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.972938174 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.987514644 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.989733375 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.986366685 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.254424543 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.000618404 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.972842234 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.987770117 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.979059323 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.381789975 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.00020439 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.976614399 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351457011 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.009969914 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.384652308 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.014956138 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.97267523 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.984488841 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.004772751 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.267267209 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.991012833 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.969711914 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.981389988 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.968518628 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.984343804 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.985762828 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.976103564 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.970870876 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.989092009 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.01556161 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.98530332 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.971872508 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.982737127 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.991463739 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.981021199 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.984618003 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.97445257 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.96976183 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.984248401 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.976830155 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.97399618 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.975392443 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.977520059 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.985287038 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.350530312 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.022647525 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.969855826 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.969236496 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.972442493 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.985981472 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.350128174 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.007061158 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.995878275 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.022111806 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.974478188 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.256508303 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.998285609 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.989411707 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.983870057 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.974789142 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.972599812 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.256644805 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.37518494 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.022034469 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.97304952 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.971127868 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.98962995 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.973908793 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.97124152 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.268214454 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.998997844 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.989632955 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.097042668 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.987603054 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.007159917 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.975254539 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.978051211 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.018756389 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.991440796 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.005829519 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.977041856 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.991031072 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.99183459 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.972085943 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.986002683 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.987015651 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.974030632 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.981849443 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.971730775 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.019365512 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.992239 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.98941692 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.994858638 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.098564469 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.97228265 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.257762838 seconds)
done (took 309.272802552 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.050681446 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.971778555 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.07291034 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.973132688 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.063618484 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.044400396 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.972816536 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.972540898 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.972384864 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.474769953 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.972850433 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.979889391 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.972404106 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.973313385 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.04403374 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.972393577 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.972058018 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.424956134 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.975116689 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.052516623 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.973493903 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.973618459 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.974380603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.480048732 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.97204146 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.972655221 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.053865131 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.973213016 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.42766144 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.972930352 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.974156308 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.428620517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.05293975 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.003825294 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.981667805 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.979031928 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.062286216 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.984128399 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.041036369 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.041885724 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.066711885 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.006869757 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.973154255 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.974002084 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.977570979 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.975884968 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.973757954 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.006138626 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.973199813 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.979807538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.423718796 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.980629459 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.982394968 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.975858236 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.975020026 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.002950259 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.977051377 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.977690983 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.055126502 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.975769435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.042796816 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.481337964 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.47760117 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.975271714 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.974627633 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.975909769 seconds)
  done (took 192.295353184 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.040803116 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.053437352 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.039955214 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.979801089 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.023975675 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.042955691 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.980015593 seconds)
  done (took 16.064171781 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.983104785 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.975886561 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.037878577 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.036605028 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.975328671 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.157448831 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.988214862 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.980949207 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.006490615 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.978853109 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.711721084 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.039168086 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.98219719 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.975417741 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.988248966 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.048554794 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.978776827 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.977573933 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.091749181 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.125458615 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.982693754 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.984605544 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.004076422 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.988996841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.977066494 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.977544533 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.9760929 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.985953184 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.976423554 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.978012178 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.97912423 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.030372323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.977663004 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.976424518 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.977054105 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.979134802 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.978355002 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.977858738 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.976996057 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.978380823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.977524517 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.978115188 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.977443176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.977641851 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.978047184 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.001437775 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.979142542 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.979488246 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.980333888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.978503682 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.005098051 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.978921119 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.977958639 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.983948504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.022138696 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.985901212 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.979100073 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.976425986 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.979045927 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.979614317 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.979143422 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.12962963 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.041683727 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.97926842 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.043105544 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.170490747 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.979339321 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.979596302 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.978713439 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.066868597 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.979065246 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.042035331 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.982197534 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.120948127 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.982183463 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.162362079 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.003906859 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.984817238 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.983820312 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.979403154 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.988766004 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.981141533 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.983283736 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.988560927 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.986485805 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.981748658 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.981805313 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.983801982 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.991033048 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.981743944 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.03196671 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.979856015 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.979632067 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.119534262 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.980361037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.097194877 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.007295252 seconds)
  done (took 216.897831986 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.986684078 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.986738697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.982697005 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.995834461 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.980769017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.982795137 seconds)
  done (took 13.823070988 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.983626967 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.983389217 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.980905073 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.98053672 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.982253321 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.981246322 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.981215778 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.983409781 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.985771442 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.980883934 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.983487686 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.982018773 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.983164962 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.983833572 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.981480427 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.983499435 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.98399018 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.980471032 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.981649767 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.98133394 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.193572986 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.981947602 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.982374155 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.98535785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.986219289 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.985935994 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.995140556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.982018555 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.982022562 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.990302535 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.985820821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.982726142 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.984597863 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.988621907 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.985139424 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.985704114 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.98595468 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.983793952 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.981344519 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.981485418 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.985138006 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.981744521 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.981075821 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.984174808 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.983964665 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.989891811 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.987187062 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.99537631 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.983782164 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.983797768 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.984294424 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.983075689 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.981778349 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.984339945 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.988293914 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.988240433 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.988102081 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.983193873 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.98450397 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.98799853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.986628757 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.98311956 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.984539732 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.986255772 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.99066117 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.985171337 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.98800268 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.98723175 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.98242238 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.98257837 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.98504629 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.982956022 seconds)
  done (took 146.003199664 seconds)
done (took 586.997017077 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.235231944 seconds)
  done (took 9.145919102 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.030476433 seconds)
  done (took 8.997887671 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.273221502 seconds)
  done (took 10.189619035 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.00895419 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.002069771 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.996753864 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.986431276 seconds)
  done (took 29.917981475 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.015062014 seconds)
  done (took 8.927174353 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.007930121 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.98371146 seconds)
  done (took 15.930049816 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.98519814 seconds)
  done (took 8.898247553 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.302196067 seconds)
  done (took 9.221915743 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.00627913 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.986543849 seconds)
  done (took 15.927641792 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.993210062 seconds)
  done (took 8.907061616 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.337986429 seconds)
  done (took 10.270365379 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.011172168 seconds)
  done (took 8.991860922 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.023152484 seconds)
  done (took 8.938052608 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.911611024 seconds)
  done (took 9.827019397 seconds)
done (took 166.000895055 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.002218745 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.988086749 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.989030834 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.987691368 seconds)
  done (took 29.881352367 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.023240048 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.023012915 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.030975225 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.023347578 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.012930951 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.012762185 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.023317917 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.023352471 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.013931958 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.022229159 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.023276694 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.020346972 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.022626578 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.032501481 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.032104789 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.021494343 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.022930964 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.023766284 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.014259663 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.032691879 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.021696194 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.023493132 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.988129586 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.989006163 seconds)
  done (took 50.392336897 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.207114273 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.073921461 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.15808222 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.06332799 seconds)
  done (took 10.418411792 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.988868447 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.066206207 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.057193996 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.04707196 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.048631536 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.105190883 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.059244097 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.134767559 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.117683654 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.130471091 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.996870012 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.01115471 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.015289044 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.046124301 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.105537181 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.989531477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.990155014 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.109121291 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.068619588 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.18198713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.992023664 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.058535397 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.049753438 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.058508158 seconds)
  done (took 51.34619981 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.99149485 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.998737491 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.998110287 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.991365947 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.992033883 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.992004534 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.998190682 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.994042845 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.013574109 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.993961893 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.992688067 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.992304161 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.998174544 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.992102531 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.990880894 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.005009235 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.005276833 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.992279194 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.995001044 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.998423217 seconds)
  done (took 41.843858156 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.99088286 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.264284316 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.336291377 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.242983935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.991147222 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.992844147 seconds)
  done (took 32.736550428 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.004380241 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.99774755 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.991667927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.048281847 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.12743556 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.998506766 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.993072308 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.002520616 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.033661182 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.053020828 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.012843882 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.01849083 seconds)
  done (took 26.20029861 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.991571622 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.008209851 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.992936397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.004372882 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.001773554 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.997996398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.999924168 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.990189247 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.00430134 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.009008855 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.999362092 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.00403054 seconds)
  done (took 45.926047272 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.696595248 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068966367 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991348642 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.016448592 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423538538 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.539187476 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.887468453 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.614603151 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.825217122 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.922670264 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19890753 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.996164538 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083689846 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.998860453 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268056464 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.454056234 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204987136 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239984121 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996790971 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.089016776 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.200873069 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203700456 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.284024491 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99801168 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00019719 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.001519536 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.525698506 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.730522347 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103160183 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.201627218 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313905201 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.946303606 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045531058 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.001602422 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.011205099 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001354339 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004795787 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269329802 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.010928293 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187456772 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068828574 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247272211 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003888194 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.413174359 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.706085561 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.294921575 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.111324804 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.999051957 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001160426 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99811197 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.924105035 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080606937 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.001990681 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004704637 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.69873724 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.99901355 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072720207 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.000481517 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201885536 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.804635524 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686194517 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.002531589 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001745961 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.560693535 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.999930029 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.18554759 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.677627507 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446774531 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417843996 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.097196466 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.001011606 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00179241 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.193225822 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038489132 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.679191251 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108864727 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13487615 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.017131814 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640942385 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309467228 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.416477493 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.56538944 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91964569 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263172341 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.734824105 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060697964 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217307159 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.829848035 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.927016763 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205430235 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030592711 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004528371 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275327759 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676974094 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18741004 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.017979599 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42982179 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020066562 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006486614 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003534178 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216382846 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431891376 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.099355831 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122700266 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019155756 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08437596 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927205549 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.015253191 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.003328691 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.883157673 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.003135608 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894655539 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.122293393 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.87324722 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117861846 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.940855353 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005170883 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.008849919 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11700816 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.951814289 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245928433 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.291904174 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.628794848 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922896315 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.209851042 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.369266252 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234747834 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.008019327 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21610298 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542239897 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.400277613 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.056647269 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286166046 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.060368217 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290144926 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424480936 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069351419 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.697916564 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.606530636 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.220492117 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017328919 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.004387209 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007385227 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009292435 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939082136 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.819863787 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.368846145 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.172546685 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218278535 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.427261245 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.063067899 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896822873 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.385992245 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1409293 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009698247 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.63736515 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.269604923 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.788418288 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.091445736 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.19113991 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301157379 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.041856548 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018497558 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096229913 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022381712 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.016606546 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.307512144 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370012264 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.007103782 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.006179284 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95450762 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.010314184 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.008188796 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.531383451 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97315684 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.01291828 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.016659876 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.879936589 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067863577 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007864233 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00925111 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.550202904 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516523668 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.010737183 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.725350429 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.016220224 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151438755 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270254609 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.345067815 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13517535 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.706890868 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.399340438 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.116205979 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.708021355 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.933453575 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.006375197 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.946490376 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009747119 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.007302567 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012273689 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.194168741 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275341535 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306453794 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.474629571 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.069878561 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209757111 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.624830466 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031994888 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.009790241 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012338613 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.010069694 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008679169 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.504169888 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.555199391 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003585843 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112220923 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014820162 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136285249 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.019979621 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.933749675 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.013865424 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008969383 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463177602 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.103319246 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.965548398 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.299352272 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.760197363 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20299408 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056179874 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.020015374 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013517385 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.674417386 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.122254574 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935345033 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465463015 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121443924 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.632383274 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75324711 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.574575726 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298443888 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3166385 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.326454517 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.076036757 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.222411634 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095229689 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065941064 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098298943 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944942496 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.935482645 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.647075751 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338326076 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329023212 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020000608 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227008136 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.624874241 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309006925 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039125695 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.89302193 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384266936 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987596206 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028555648 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.453377255 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196088993 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094751267 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016065168 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.962929005 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338474119 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048531617 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.718506799 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026761925 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.364186415 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477317867 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243256976 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.381701605 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227723877 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.024697896 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355692935 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2595973 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129396076 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019351349 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.986846812 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.237084129 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592053006 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.852378476 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022304535 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.203536187 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371168539 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.922719649 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.017561701 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209070264 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350334894 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.015056563 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.346141515 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374388096 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.130003678 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067907099 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241884294 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.724099747 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388854026 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562818019 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.495066073 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.025053515 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.94430477 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.71847753 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.220001917 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.021817959 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982565901 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226271757 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249343912 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.694069555 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238479146 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261938326 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.027483485 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281808309 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087654317 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.114997361 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.315853411 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.455940275 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.260800344 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244241899 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574394563 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.235853726 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452895669 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.161995062 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.02040893 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224507797 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236454833 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.233454306 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.383217727 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183369251 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.728369237 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.022967824 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.22559413 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307851478 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077548554 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.379660343 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.196723498 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.10518003 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025275324 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094699059 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.025599831 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028224473 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.372703723 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546170453 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.034730189 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095099065 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025940974 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.586393818 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.026677321 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.024455912 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284398854 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374781122 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340651055 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001091669 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.02023105 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.021030897 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14873781 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.945355429 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025138986 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291796832 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.023018087 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452332714 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.246168029 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036465103 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.321942634 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.412005265 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.711337348 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129864639 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025810129 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228673261 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316368002 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.234568487 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.211932242 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293955008 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345900925 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.050941764 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.383212889 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266312563 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025282266 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 3.045341089 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024301649 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143341413 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.224324146 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290672039 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.525935203 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641960687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361311541 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.884924062 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024972593 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.697514725 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366434938 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287217813 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.071113863 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099022458 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027583301 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480217892 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.821947017 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15453264 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.87685742 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95220631 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.03065686 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.299411001 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.265222072 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.732323398 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026071234 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288359321 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324923288 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287200204 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.075070959 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.888820571 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241378326 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025767429 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.034262444 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.241562555 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234078854 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263723813 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027219997 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.02804207 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.831244281 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949803193 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.025795424 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069516977 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25054337 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042614507 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.538474288 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.724877105 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291269455 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06713874 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030102981 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287943518 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.54021695 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.563770815 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037907469 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224463057 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.971010431 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.402616065 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.027775195 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.494066851 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.405011318 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.025931463 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.589350623 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.347135872 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296671181 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.968964719 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037441046 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239557156 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.899948673 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.027524164 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008951568 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485883347 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334339571 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.761181228 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582384763 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.028681874 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.029615486 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.489222495 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136019316 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.490736781 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.125376945 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046491221 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.549460881 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.726829808 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.315725173 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269974987 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.587529113 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.701499343 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.02798492 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.026262007 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.029123191 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.945774148 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214521554 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.219472021 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297588087 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055887149 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495307138 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138575969 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.372571237 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134935131 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229780974 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14230868 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.551110457 seconds)
  done (took 1735.035197767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.043188822 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.066599964 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.066768093 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.033733123 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.04720478 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.047985501 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.125969651 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.111582484 seconds)
  done (took 58.49745386 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.025451621 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.123981036 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.030390622 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.025134549 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.032777818 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.025940081 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.210004031 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.039534912 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.05820031 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.033226205 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.027722009 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.027184373 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.332596669 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.048672725 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.027459636 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.033758963 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.031784325 seconds)
  done (took 77.093946314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.030310393 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.344611172 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.069655562 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.028553767 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.468255841 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.031447079 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.125249059 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.065288047 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.031855166 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.286607585 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.323237967 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.061671012 seconds)
  done (took 91.821085604 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.039397473 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.030232874 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.030587311 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.030349602 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.03113368 seconds)
  done (took 12.123876505 seconds)
done (took 2265.315382479 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.26264423 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.090817609 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.132473734 seconds)
  done (took 6.177375266 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.175510287 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.220290688 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.333216844 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.088978618 seconds)
  done (took 10.779727044 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.337555635 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.394801651 seconds)
  done (took 6.687350564 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.346850113 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.057300741 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.409505743 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.029910066 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.030414627 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.032495034 seconds)
  done (took 23.053505741 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.031576048 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.032047182 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.031240755 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.030269258 seconds)
  done (took 10.081274873 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.02978241 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.740551712 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.030719112 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.045046378 seconds)
  done (took 21.801887456 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.213195695 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.146126765 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.173282221 seconds)
  done (took 8.488588018 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.267825814 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.245668494 seconds)
  done (took 7.468675148 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.176153721 seconds)
  done (took 4.131929209 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.058633315 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.300258018 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.516774403 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.544443233 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.607914665 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.853765215 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.334977419 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.254181689 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.466237759 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.468576466 seconds)
  done (took 26.36263618 seconds)
done (took 141.06436491 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.356148272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.063676905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.234380204 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.372230335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.257991165 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.233669099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.25966407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.3602494 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.046779693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.035654597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.373919289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.25902651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.194679658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.048178413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.199814001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.048042281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.253756722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.373500894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.086662416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.357202814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.261423352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.022574238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.215562791 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.034706185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.260945426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.184016199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.564192853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.052088927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.22704642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.575515528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.190074489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.499777809 seconds)
  done (took 173.460619054 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.034071211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.033825207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.03434598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.032741396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.552472012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.034146181 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.033532555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.036488978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.419318324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.406946467 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.034032415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.543831095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.038553811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.033748473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.033323529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.034193551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.576532604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.035087261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.035365128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.033699503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.036085877 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.383514867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.035857447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.391380463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.571468761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.035774407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.035819258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.03514081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.033544642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.033944948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.036484498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.035201546 seconds)
  done (took 214.64196402 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.034676783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.036377507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.036057443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.035810296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.036708829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.037711347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.035877931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.035297653 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.773253802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.766872221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.036594252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.037485588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.039354329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.035821631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.037680671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.036457355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.036289463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.037198298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.037161909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.037859825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.039922202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.586934061 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.037409183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.591580224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.036527099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.038294524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.036525838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.042369702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.037117435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.038481589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.038027011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.035769448 seconds)
  done (took 225.720919371 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.275102411 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.036813619 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.037464651 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.026335614 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.0380093 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.03824021 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.016548744 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.290027966 seconds)
  done (took 20.726060098 seconds)
done (took 636.514506755 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.419084518 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.260602671 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.196585193 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.062404507 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.359902256 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.106067653 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.056309682 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.125905591 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.896345527 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.13369419 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.71722969 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.08068525 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.805360883 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.087211222 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.167762216 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.120295015 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.61232822 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.707086799 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.184595257 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.136222787 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.213545532 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.004515663 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.141921648 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.937683048 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.741365919 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.052097642 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091239401 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.615453889 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.072319854 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.194648065 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.762536294 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.343510919 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.073982281 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.058604999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.114897334 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.091790644 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.268264438 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.073174252 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.164421906 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.803535317 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.194242737 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.788973725 seconds)
  done (took 110.002856232 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.051855008 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.045331702 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.045550768 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.046284646 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.054609886 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.045603767 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.046387811 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.046646281 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.04549211 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.046566786 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.047068797 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.055001252 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.046077336 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.055727792 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.046919919 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.046996666 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.046883619 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.055927222 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.047245116 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.046787415 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.046805272 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.046491742 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.042045945 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.046820562 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.046478822 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.047747832 seconds)
  done (took 55.224233869 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.041170867 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.209870476 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.285228077 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062530327 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.042930325 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.045377776 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.060625452 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.048138947 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.045464281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.045786518 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.144647912 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.048664797 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.059992853 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.284963761 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.06006818 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.042009956 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.041729761 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.043004789 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.217352934 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.058835303 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.062347898 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.048450523 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.061349963 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.057094876 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.045862637 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.044066695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.047225327 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.504248688 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.053399913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.143035374 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087988238 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.065536018 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.430670263 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.294326031 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.09993074 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.049852744 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.043370472 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.148241204 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.051501733 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.044967654 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.062745641 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.050542674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.286781323 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.560381988 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.059705011 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.043847606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.51298641 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.157579575 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.085263017 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.055211878 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.290918292 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.062359687 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.046407981 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.046007831 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.081223078 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053864406 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.044594167 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.369795857 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.058551166 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.063392255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.049943648 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.046916254 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.225829519 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.054470081 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.211928599 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.055288389 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.051412914 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.048354883 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.287547643 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065342648 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.576881995 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.06085541 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.04428115 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.147644009 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.218025047 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.539369607 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.059543065 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.22731493 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.448348974 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.070964886 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.055255363 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.4931665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.074601758 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.053666433 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.048481696 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.047028214 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.045359715 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.091054365 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.062991211 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.488254414 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.574048666 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.385826465 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.074134723 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.064722763 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.047457268 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.365725949 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.055644184 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.046753811 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.280999043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.583327216 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.061672718 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.054344569 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.554160692 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.064781442 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.066972691 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.05617555 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.293983108 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.067324582 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.091942404 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.047214858 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.054470241 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.050361112 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.066568997 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.055995659 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.047254025 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.547745486 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.167212068 seconds)
  done (took 253.011318335 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.049688738 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.048685204 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.046423813 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.052160798 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.045730878 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.047449841 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.04680179 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.046290432 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.04815725 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.04633981 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.046463244 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.047437688 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.049343545 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.048320435 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.054023045 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.049147778 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.651934617 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.04686053 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.048971311 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.047756749 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.696788373 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.053849887 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.048258895 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.048357659 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.049666158 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.051251634 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.052007558 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.053004267 seconds)
  done (took 172.596552499 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.048487868 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.161009382 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.068297815 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.078555442 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.057732141 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.051116395 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.147479736 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.068100036 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.05658725 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.049711653 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.049519008 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.109201025 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.062695712 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.147884476 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.08132926 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.156726765 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.155077854 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.057585362 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.050050512 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.05055765 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.078683546 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.059997262 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.110826814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.174736189 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.069020138 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.164174122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.070445079 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.051164456 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.050110768 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.163338073 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.068007227 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.111198765 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.083313745 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.069138795 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.169515476 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.165915075 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.157042595 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.155861159 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.05833108 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.05136391 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.051465671 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.053430961 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.164880176 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.069713869 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.053749587 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.168692151 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.069652399 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.052376887 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.051740469 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.052190972 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.06531627 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.073111898 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.11629406 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.184092315 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.087433188 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.075463967 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.149616675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.180074035 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.052642683 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.149216745 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.059613016 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.164485725 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.074452496 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.054332283 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.053493203 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.058642505 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.081792319 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.158477908 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.157890144 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.060959809 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.151062648 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.08902299 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.060761157 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.053345493 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.053698902 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.166083378 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.169540735 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.088572429 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.089235526 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.084259962 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.065217688 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.053419361 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.055575813 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.070549125 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.057985825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.167136225 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.169636009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.060769498 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.054103568 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.054391264 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.053444113 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.078520279 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.174664716 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.089849967 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.161913752 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.121239574 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.130160389 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.06963083 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.068302514 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.059194743 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.116502729 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.070170109 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.067027956 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.352006923 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.114176419 seconds)
  done (took 222.153930214 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.457168221 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.105601287 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.112629731 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.380540552 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.42278277 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.118165901 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.099255748 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.103044269 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.125565435 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.291913616 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.176357977 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.120098333 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.090637105 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.076423978 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.101497074 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.123254703 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.110477593 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.443257396 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.317352432 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.303856491 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.091770805 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.377484601 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.421052779 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.674862611 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.154020889 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.514031266 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.68963571 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.24485215 seconds)
  done (took 67.233307446 seconds)
done (took 882.185574755 seconds)
SAVING RESULT...
DONE!
