cset: moving following pidspec: 20219
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.213593049 seconds)
loading group "string"... done (took 0.575786108 seconds)
loading group "linalg"... done (took 8.037831013 seconds)
loading group "parallel"... done (took 0.170206549 seconds)
loading group "find"... done (took 1.248749553 seconds)
loading group "tuple"... done (took 1.988744356 seconds)
loading group "dates"... done (took 1.309932507 seconds)
loading group "micro"... done (took 0.198673939 seconds)
loading group "io"... done (took 0.924264396 seconds)
loading group "scalar"... done (took 39.44338724 seconds)
loading group "sparse"... done (took 12.225074901 seconds)
loading group "broadcast"... done (took 0.959099902 seconds)
loading group "union"... done (took 13.779127177 seconds)
loading group "simd"... done (took 4.801615104 seconds)
loading group "random"... done (took 9.249757459 seconds)
loading group "problem"... done (took 1.693620413 seconds)
loading group "array"... done (took 21.502947752 seconds)
loading group "misc"... done (took 1.61583009 seconds)
loading group "sort"... done (took 3.354864736 seconds)
loading group "collection"... done (took 18.052197607 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540336904 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123571235 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136845363 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119374387 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14980099 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11740955 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124365102 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085116317 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.842182923 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147172716 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113725141 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416498527 seconds)
done (took 5.284123063 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17502828 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087378525 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079603869 seconds)
  done (took 1.208469947 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065673966 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127435746 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066960584 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067604876 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067847556 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067156182 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066880431 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067272326 seconds)
  done (took 1.572581434 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072629444 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070386298 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066171888 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06852374 seconds)
  done (took 1.319404097 seconds)
done (took 5.392796019 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.795372055 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209075495 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188438087 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408607957 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134871806 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177764726 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644128012 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319086325 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192553511 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094230254 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112516435 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390057476 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124734293 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64794152 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077879099 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095985578 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141506608 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434684842 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07110732 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085153488 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092967177 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1309628 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080365616 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076627567 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151564265 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070575125 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143531652 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085886319 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068893435 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255355754 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174984622 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657196478 seconds)
  done (took 10.414424631 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101535989 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099484342 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068618626 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125314001 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09847017 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069942653 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076095203 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068012333 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090110444 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128366857 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091216832 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108953354 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066267007 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06966402 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084087482 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197643815 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080248072 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081557122 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068362611 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078925961 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111458614 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078105584 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079967687 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079921285 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129413227 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16933222 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096855783 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098430386 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066763507 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0842503 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115943696 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127056298 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06697931 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066287531 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125134372 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095346235 seconds)
  done (took 4.52649329 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008114773 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151307798 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090596937 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090369587 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13527064 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065733745 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1100075 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066214358 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082957698 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237691407 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.451732158 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628542988 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122207709 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117419212 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104265856 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071102711 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069538317 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068230642 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.268951818 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09859395 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112373961 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083802106 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070983459 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069431499 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065822374 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074687457 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064476933 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068820085 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08718013 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07616243 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.331515746 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124365207 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069096075 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942944717 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165038613 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06799051 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105498026 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165377173 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094651531 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139711559 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067730688 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063825456 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.296801265 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065539534 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071968207 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067297988 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085095739 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109240235 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120181058 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065464767 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066037176 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168128557 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0930283 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064793314 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08208319 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.204841215 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153283506 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067192709 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296180182 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092622539 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07212426 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065652446 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065179502 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184564263 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119570988 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068822279 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068056756 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072641493 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068943942 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364669578 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066272653 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.885690594 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070718428 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078378441 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071285903 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071816303 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07963241 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079181792 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091575427 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067407435 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073635491 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067232716 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066518417 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067362523 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093700271 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.390338451 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067613645 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072429752 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06520023 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092687462 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098856598 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066931143 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066132601 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102364313 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071297402 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067113995 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067966431 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117102088 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070771385 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11265232 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067699031 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170241423 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065766204 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09743065 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070314676 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101248916 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079936777 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071427804 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466428871 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066097001 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072629562 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066623887 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068612211 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066927641 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078785624 seconds)
  done (took 21.751685804 seconds)
done (took 38.742986264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243192834 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083034815 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083634721 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08345589 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083528359 seconds)
  done (took 1.713306775 seconds)
done (took 2.831674265 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125343225 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098905129 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064985076 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097924604 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06478059 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100928625 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103083889 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084106902 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099858246 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064985501 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097873936 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065096714 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06559687 seconds)
  done (took 2.266834677 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082248199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083387392 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069594842 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084710509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063232294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082154404 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081430446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088290892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081160955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072337878 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062923747 seconds)
  done (took 1.95946058 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081064166 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082836384 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068877103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081512691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062880216 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080790076 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081479605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084856026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081757095 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073409682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063192194 seconds)
  done (took 1.946912027 seconds)
done (took 7.277865902 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07584427 seconds)
  done (took 1.170703256 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.531189031 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.583811143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078303126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099659263 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192178581 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108830218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.234341121 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.081822673 seconds)
  done (took 8.177380773 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095458651 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080619603 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07005021 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068981932 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069510266 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070642704 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069176412 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06970384 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069107895 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070250448 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069169673 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070037326 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07001235 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069701508 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070287197 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070003952 seconds)
  done (took 2.332559244 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09696361 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095333821 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073671441 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075327863 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07281412 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072816501 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074889396 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074176132 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070971755 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072866378 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075724005 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07361605 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073486262 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064498877 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074565568 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076142807 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071392818 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07450092 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075320369 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075824312 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075894854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063982415 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07323726 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074353916 seconds)
  done (took 3.007892771 seconds)
done (took 15.793241067 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105640012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067859647 seconds)
  done (took 1.274826957 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078174341 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079739772 seconds)
  done (took 1.268644279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077601791 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062916735 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083833025 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07359897 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063346419 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062795873 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082480967 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063690127 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063674888 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063614489 seconds)
  done (took 1.809223995 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064860604 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072683931 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068942741 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07899906 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07083944 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065006558 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069103567 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065747454 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073646751 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063912551 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068333737 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08313177 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068397547 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084938461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068510955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067743435 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07058765 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067105797 seconds)
  done (took 2.3874794 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062945872 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063957109 seconds)
  done (took 1.24513774 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06679836 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063622996 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066056414 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066070615 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06355648 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062871054 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063410727 seconds)
  done (took 1.565872281 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397505566 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121097232 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.32701743 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070488267 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079636516 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256407371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064617803 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069947756 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069848381 seconds)
  done (took 2.613808056 seconds)
done (took 13.283830964 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080328652 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086415188 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096725929 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414589975 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09316615 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068159235 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113444583 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181926919 seconds)
done (took 2.261204484 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207783908 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.806713658 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.481160959 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206701725 seconds)
  done (took 2.61557159 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343771856 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081098632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077219494 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066862618 seconds)
  done (took 1.698271349 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.181389417 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070474326 seconds)
  done (took 1.378545297 seconds)
done (took 7.030580932 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064642234 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089088479 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064603507 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065160642 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065376968 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064516021 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064929193 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.065163447 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065335265 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064873721 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064650387 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064665559 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065072811 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064862572 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065163463 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06488997 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064731461 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065436597 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064695179 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065728592 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065141608 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064535318 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065091813 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065127134 seconds)
  done (took 2.745259938 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081090485 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066976637 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068747959 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06877227 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069144757 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068319579 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068557594 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06746931 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069063812 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066971192 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069213665 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069085999 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066633449 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069321903 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066984915 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069622825 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069036272 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067519138 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06697867 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069329797 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06840722 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067148066 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069348159 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068657091 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068898334 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069119287 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066468127 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066850982 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068265877 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068955941 seconds)
  done (took 3.195941916 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068569585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061135521 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061639148 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070275838 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06161652 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062095357 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061135565 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06218544 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062368161 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061409746 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062630879 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061241539 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06120856 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0619187 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06168786 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065697187 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079208855 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061478568 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061696241 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06175564 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065302295 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061257232 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061353197 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063712432 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061380055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061263327 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061398056 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061559577 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062851078 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060932596 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064865963 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065780847 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061704205 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069588363 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065492087 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061317671 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065975885 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061232003 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061628682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061164674 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060736069 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061447952 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061375604 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070101604 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061514948 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062470456 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061329324 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062268521 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061906888 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063400242 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061150312 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061107868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06325284 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062861236 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066412961 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061253452 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062028996 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060934934 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062259083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061411776 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060956915 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060923215 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064606094 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061939357 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078754002 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070062247 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061087821 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062837634 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061786821 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064598097 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062817277 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076406999 seconds)
  done (took 5.705709954 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084986692 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08733949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066333522 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066235417 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061861466 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061776033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069961784 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062123371 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066668081 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081098088 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062606809 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066632606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066366278 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066259327 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062069994 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066851811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070361374 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062008039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062173071 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066131493 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062353254 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069758485 seconds)
  done (took 2.64297495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146436284 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068129276 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105223842 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072433169 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070403312 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072763902 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06853281 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068162353 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068485871 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068267158 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068659284 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068077209 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071315344 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068335709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068702178 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068316652 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067876435 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068175441 seconds)
  done (took 2.500691799 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078006449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067142231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087288451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066792275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067169363 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066780201 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071328685 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072193877 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067117955 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067902002 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072145804 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067177399 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067072711 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06697025 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06675234 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067366203 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067217484 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067138657 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072011906 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07191131 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07168894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081347402 seconds)
  done (took 2.693854603 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07805008 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065998338 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082878485 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068501282 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062279906 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061577615 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068139821 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06662651 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067788403 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066053286 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066516768 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062242444 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068774636 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066511697 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068879482 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066640621 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066077227 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066714781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066246845 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062141825 seconds)
  done (took 2.49395619 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083285876 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064972863 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064737447 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070990506 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064947556 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065067374 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071002946 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065002975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065101961 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085456508 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064892869 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065417385 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071637264 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068778609 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064859592 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070946515 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073827138 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071594381 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065048947 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065065542 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085434393 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065664454 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071278964 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064974062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065100105 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064976072 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064813947 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068775298 seconds)
  done (took 3.079983724 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065438295 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064759573 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064875223 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064813321 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065205446 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065153381 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065091444 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064978861 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064986463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064988303 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064475535 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064497038 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064367542 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064297349 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064471357 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064420832 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064712545 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065048824 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065003722 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065232305 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064589398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064509341 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064537708 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064646339 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065284993 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064333029 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065341259 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064523811 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064361235 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064804771 seconds)
  done (took 3.095358546 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075099307 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073177888 seconds)
  done (took 1.299239484 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063255113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078736011 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06122067 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072913663 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070173347 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065124065 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071001128 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070711988 seconds)
  done (took 1.700086701 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085079766 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075157708 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064383496 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075456155 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074500589 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084691149 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12584689 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063892981 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074617188 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065340425 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082830733 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066183318 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074409963 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068685603 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074439238 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078192169 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061485585 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068927625 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065260243 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061873333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064611766 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076918789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073073026 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06202715 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069177103 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091645635 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079551236 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063387422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07069524 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075844928 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073940739 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060802254 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0631664 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063645643 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061676374 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074392372 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081715646 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070315054 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076238242 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064747262 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071409833 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061498173 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072013422 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074751337 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079410375 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06395868 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063511773 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061589911 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064279107 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069965223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061724965 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068185184 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061208476 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075785945 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070946909 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079202574 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062846962 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069299895 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070212579 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070290039 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075657332 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069832274 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073626158 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06362301 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079719209 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073316118 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075364478 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061995823 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06058583 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061517631 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077692842 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091884491 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073057668 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063832793 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064155462 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061733726 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070553238 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063760262 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072375784 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074791482 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063069944 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067769502 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075425311 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067767563 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069532901 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069729981 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062191591 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066983079 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064668511 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083086859 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062505085 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061681978 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064883016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0788847 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072915488 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063053106 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064548007 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074517827 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060300094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063374828 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063780054 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068898491 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07651766 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066635417 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066515182 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075593891 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071304137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067558259 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068752094 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059966476 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.062837059 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064449106 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07345539 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059655661 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068723524 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066129338 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062425716 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073395746 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060790622 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061649647 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07412572 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073114573 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060857938 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059465335 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068988632 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062051356 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064132185 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07486498 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061116242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060193111 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060153452 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06949637 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.061682951 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069208205 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065261446 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068827277 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059670036 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.184349738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069051307 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076440276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067679258 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069819439 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074294312 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069875443 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063828063 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075825226 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070507047 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066343138 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074094609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06778383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061645076 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065868077 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070257914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062817048 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071185829 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065531464 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070539174 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063785661 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062236592 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068704676 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063982926 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065912699 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068651612 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062488279 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078244179 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069749043 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06159865 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061176096 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070144155 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064719566 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063363919 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065959797 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069994447 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064240257 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06149434 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06300337 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069421696 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070969449 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066623169 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064279595 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072836129 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080676934 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06297759 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070704794 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063646153 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064677534 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064610896 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077969851 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074321747 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067616149 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070512337 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061403105 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073105882 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075462887 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066652518 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061822589 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0660875 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067492576 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075000122 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067067332 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064454284 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062137626 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069318236 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065636715 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069984738 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063274903 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065872507 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06837548 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06211768 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068968001 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063900292 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077653101 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071370505 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061828518 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065936974 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061794414 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074619933 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061485112 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065250998 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06610455 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064154573 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062647572 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069979089 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060651915 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075777572 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076739753 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068773691 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065710704 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063020418 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075610822 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069280556 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072258557 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070713322 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072977667 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078574971 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065911398 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069855868 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078238909 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06313274 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061504581 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075532436 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062225815 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062471385 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062404259 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062348987 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071189837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070325552 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073339902 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060976746 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070060448 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061684735 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065950497 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060873103 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071274118 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069394267 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066589974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074468442 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062894991 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062126493 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069343699 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.061876 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06247635 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062897559 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069413313 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062139271 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068186333 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064506708 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067947863 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064483752 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060038073 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06781977 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061799212 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067204298 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070444498 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061344994 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067645933 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069067919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062683148 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068253856 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065882903 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065105381 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069114948 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067961367 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066565257 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06929651 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060554608 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073529955 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.061292568 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074384531 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066922196 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059760386 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066562949 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068434121 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06608724 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.062136557 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062235396 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067521282 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.061474839 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068351638 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073921906 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06346932 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076823496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072099999 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06779891 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068596154 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067104917 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067689281 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064847447 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06683767 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062709503 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06753435 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06191047 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070471371 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069002518 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067841006 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068533412 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062994833 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067759679 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063188429 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059741464 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06488583 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064050116 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.060862245 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073043081 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.061891946 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064579717 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061567012 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06185778 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060554214 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058924774 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06685078 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067514013 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06151175 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071852344 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064821776 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067245818 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076207679 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059111555 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.060090238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060399203 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062988589 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073309662 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.061219936 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07484524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066929799 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064411592 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060124148 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062156034 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06032022 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059588069 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060090695 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068906268 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063463838 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060754362 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061930153 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068593079 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0622592 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073528987 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060873417 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065725892 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.060898708 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059586727 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064020585 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063672999 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068289301 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061520224 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063207068 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059520787 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.061195515 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065605122 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0672062 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06111913 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066965382 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073770873 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061943577 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06849487 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063326379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060202082 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068226434 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061230489 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.061874702 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064389305 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068416935 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067950023 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.061754258 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07519711 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064194676 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067671343 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061675452 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06048619 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.060686706 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.060628991 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.061135058 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064121462 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06204097 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074623326 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060075334 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067056484 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066864143 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064967452 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070688447 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.062210133 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067226435 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065529964 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064062397 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0679451 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074999003 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064824675 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068553593 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06212735 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067690028 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070869495 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064347136 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072939215 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066887122 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062217782 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067092481 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063651868 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061911792 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061086149 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060886624 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071149532 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062274426 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063772378 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064216261 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.297530307 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070098157 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067393685 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079258125 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073064623 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072947346 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063732136 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062779936 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066270719 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067910766 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07233796 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073511342 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076511476 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073558647 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070149557 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065736418 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080612522 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076373118 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074577196 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067954356 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073654166 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065817912 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072845367 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069742115 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070126183 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066324717 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073813988 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070935244 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068024329 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075967623 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073205548 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065498254 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071110854 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070924132 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070010871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063560809 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065247986 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071365193 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073800594 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071659503 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06480077 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079753782 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065371034 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069373163 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066662822 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063681795 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072666998 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06240791 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070333015 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064192759 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064445349 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062114913 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06687357 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065524937 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070892024 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066893133 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062551989 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079734719 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078278414 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07060176 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063579526 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063084222 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062879143 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06250282 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067497308 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065220474 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070166583 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079267187 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066821435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067140161 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062681061 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064340559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071649974 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072247335 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062241892 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062618009 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067008684 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070653317 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076280606 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063339559 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063880352 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071845077 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070583571 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062435216 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066871449 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06149102 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072375083 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081110533 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06417012 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070621304 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074588667 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076980591 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06391634 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062556056 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064942871 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070321956 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070348194 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06523491 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065402674 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083783935 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071864335 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066962299 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063324871 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070976198 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067086774 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077853532 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06475544 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064443625 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075456045 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070261419 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070483031 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074404286 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074909464 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070012609 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070171156 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063099451 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069524302 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062505507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066706539 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064722989 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063901651 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067816209 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069679362 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068582651 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079040855 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077210606 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066055002 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061570533 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066334463 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066075848 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06190186 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064134853 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061856241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062182874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061924494 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062790565 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069295273 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071832936 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067207118 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063507574 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063047918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060650714 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072980551 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069644674 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069567899 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.198026887 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064510621 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064620457 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072101107 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066621092 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065557018 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070292946 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069275967 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069326597 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061970464 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075534402 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063313955 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069582593 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066522381 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063906217 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064928103 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071200706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067853844 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06502836 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070326759 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070677526 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065380914 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062179467 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06136811 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073003502 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061827279 seconds)
  done (took 41.975335556 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101012927 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06439923 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06285987 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063048778 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073025276 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064205177 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063305969 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063897695 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064148495 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066455677 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063109963 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063587469 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070581522 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077961484 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073082081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067416323 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063175336 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0642575 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063094345 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063746411 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07056867 seconds)
  done (took 2.719319652 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070749478 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078454271 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074725395 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080257742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071619577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06765694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076221177 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067960057 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075941475 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072720855 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07632607 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067720595 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073381716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073303346 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073486879 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068221405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076269055 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071733898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068077861 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075271112 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068272678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075383109 seconds)
  done (took 2.873366085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064935097 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063691105 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07035721 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061738504 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063266657 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062097589 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066906998 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06211629 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066792579 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067206863 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066669326 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067030371 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071007939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062381995 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068154727 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062997629 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108876222 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066949214 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064427674 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064924814 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062618714 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071714141 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062572201 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062803786 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066606688 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067500067 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064630827 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062975599 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064108119 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066859916 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064402586 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062564723 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070482285 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070251844 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066577163 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067087878 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063702997 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063991327 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062711577 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062675155 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072655848 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06315097 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064438397 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070821436 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06246423 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062991291 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071056702 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064234453 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06228912 seconds)
  done (took 4.527446005 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075104249 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111370337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069314218 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092069819 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077751676 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070017129 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068977917 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093348198 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064161956 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065555633 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078314643 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078459798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066451646 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068071784 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070943749 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065946019 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066949706 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065065409 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069480944 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065925596 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069598554 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070293326 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077421117 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077261685 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067541095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065302492 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06565307 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067879678 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077697779 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069695482 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068152652 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068669474 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078160385 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070929924 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066032662 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065553541 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07854089 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066672046 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065789999 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064125262 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065645243 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067802245 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070553514 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078697432 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066633144 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070789811 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066052993 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063504859 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077219767 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066059318 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070352039 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078185904 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067396627 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066089925 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067777788 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077470246 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066632637 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064568635 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066748934 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076736546 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063936876 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067112286 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078443155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065692639 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070054528 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078983288 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07097164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067254211 seconds)
  done (took 6.252685935 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073212652 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095130175 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079772319 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080047795 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073877239 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074221292 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073913196 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074574451 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089794817 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077499495 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074191503 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115210674 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069523715 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075245079 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073613992 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073517767 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073867095 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073187697 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073571766 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073076454 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073428552 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079627702 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073515804 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079598269 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076613931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069277074 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07339522 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073720701 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079682188 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073314505 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076692524 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073593004 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074170699 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079514142 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07653536 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073273134 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063793794 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073323368 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073505294 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07379945 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0700462 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079735713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073808783 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069309026 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073940798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073546876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080050479 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077217165 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075292072 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077279788 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073790548 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07997419 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073335779 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073738787 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07977807 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082492702 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079410661 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079901811 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073715801 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079661745 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079532567 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082619475 seconds)
  done (took 6.044337004 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078135586 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070849298 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081733028 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06240768 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061982369 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072781824 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062590872 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064623659 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07035884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070818934 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072503239 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072192311 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074882772 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072991156 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07269467 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075048244 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072880945 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072420791 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070666227 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072569395 seconds)
  done (took 2.741650193 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076906344 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080951951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068520015 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072402578 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06744376 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07233342 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067849338 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068041693 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068527234 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067774441 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073681406 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073542467 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06827846 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072604101 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073736685 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07212882 seconds)
  done (took 2.445847091 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083559571 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070413747 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077689982 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063829514 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067377369 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062732337 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064501861 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062724533 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063745973 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076538276 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063413854 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074882442 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063501752 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062529907 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062973578 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0689354 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06291042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063654386 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063801705 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076853237 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070701636 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064839303 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067505088 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064138653 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06878827 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071747013 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06541754 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067189308 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063594923 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063826927 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069311743 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070478851 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063210869 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064134116 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06287831 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063438824 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063574339 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063832071 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088279183 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063407729 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061827109 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068822821 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063612533 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064714251 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062630649 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064075682 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062682888 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069494366 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063676752 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069087241 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063557038 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065932047 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063894975 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070774009 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066065399 seconds)
  done (took 4.978609715 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078851914 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067467578 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062160906 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062075469 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067544752 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06826492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067707679 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068084961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068274841 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062451214 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068307409 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067444486 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068328622 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067531005 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068210794 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067523858 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062487659 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067764238 seconds)
  done (took 2.52472635 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072592069 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067223604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071282082 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067345669 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066549218 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066859605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062259334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06224904 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062736365 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067100614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066642499 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066593581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062433111 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066626708 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06727064 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066948541 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067021036 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062465195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067111955 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062542321 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066608204 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062271518 seconds)
  done (took 2.75869901 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095273988 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083536638 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139794726 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079602007 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086342529 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072284965 seconds)
  done (took 1.86603923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092787333 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097966564 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066710917 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06721401 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072638697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070009325 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070471888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070645913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075225538 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075579568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07099668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075596303 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074965706 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076947875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072919563 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075779812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070719122 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0710936 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067476898 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08045067 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070699625 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075508127 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07124868 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070455599 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071068443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077285066 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075175188 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075589655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070653355 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075350001 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073674455 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070777366 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075842144 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07559925 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067613379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075122349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071576122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080059528 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073358677 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077002966 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067021175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073138002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075566981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074418156 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075549444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07097752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074702813 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070758628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070872804 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08260981 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073356142 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077132299 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073731061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075558317 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075400539 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08202619 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075890172 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077069763 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073275592 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076141404 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077210126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073344447 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077209295 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075731402 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073301018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077373305 seconds)
  done (took 6.233755455 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104132065 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068335042 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071163447 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075354573 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07695932 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071061111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070789418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070740369 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070670624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068019948 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105876387 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071614811 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077426675 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077385746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070982136 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070989277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071025274 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077191748 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067932618 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082114306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070792842 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076967601 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076687383 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077012913 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07540712 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072988214 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070675634 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070553519 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070409165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070870383 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074339456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070784659 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076632659 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067890728 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076811828 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070684473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070840927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074806394 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07038464 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07307306 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077197988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080081043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071172111 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070607751 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075762782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071349556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070720849 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067809869 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070867761 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068063046 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075896678 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075564822 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076269856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076890084 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071096841 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071138128 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071411312 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072241162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071019828 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073217076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078908891 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070860218 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081975821 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071355214 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0709038 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077088992 seconds)
  done (took 6.222256907 seconds)
done (took 126.446319801 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20900886 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184805595 seconds)
  done (took 1.695816027 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073699794 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103904113 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082815969 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133173999 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071451292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105077818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10444947 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083634514 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071203084 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071210774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071358609 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073846946 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136557861 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071696231 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071505633 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074598166 seconds)
  done (took 2.720640693 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104546525 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16643313 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108428802 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069227961 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104538766 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076991695 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069724895 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082613816 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076076769 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071984675 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077354691 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078233367 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070951223 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075208854 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075483037 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076992682 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071215964 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077092463 seconds)
  done (took 2.856127187 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10305717 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094309579 seconds)
  done (took 1.521392451 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17800446 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135962552 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205437871 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344795227 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153348362 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.421267673 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140079903 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142485414 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117554171 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136126959 seconds)
  done (took 3.297429738 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103825998 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168373085 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294343088 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120202622 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076431192 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090465503 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122183868 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082247767 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083811068 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08330784 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083419477 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078685967 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103069716 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076558574 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076234921 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078235526 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107240176 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075576605 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076530773 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078933452 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106575567 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070110304 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076653592 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075137477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081248679 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081086424 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071708061 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070146843 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078545891 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076413962 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079851861 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087798858 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081342403 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105737657 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075215403 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107098121 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078542314 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076726638 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076328966 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07689864 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080606618 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080530554 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078972102 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078177754 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071539236 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078059024 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070962154 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069780584 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08029959 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071017931 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080104024 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079606931 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105335948 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071182838 seconds)
  done (took 6.135616547 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108309029 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107042189 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070976959 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113078622 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104891656 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070632482 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105781441 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099356773 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108255094 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071280417 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069422421 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071479069 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079613247 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081527989 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11618602 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107735216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073076866 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070346272 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107996896 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107755919 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07057058 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101800358 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097969257 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107053812 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068637842 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07148477 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069114499 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070602564 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076045133 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077728519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069367465 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07899769 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083564903 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077135079 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068490901 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069116905 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069136647 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078424886 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0787002 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078648487 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076656893 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068318787 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06945661 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070131671 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070281714 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068326265 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077458051 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077976354 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077195371 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068980398 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070436333 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0694243 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070235957 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077888705 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076399274 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07845006 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077853639 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069033512 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068965674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071610085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079193118 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078584368 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078054485 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069979928 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078678208 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068956197 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079317148 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08436889 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069247944 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070287093 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069018222 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069261348 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070042522 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076085869 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076645337 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070391361 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068896291 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068990446 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078711164 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07671692 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068949387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075710839 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068078169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068715772 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070034603 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070581507 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075981553 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077923667 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070299807 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069053414 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068852167 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069176577 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067891641 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075582482 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07783641 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077663126 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076971178 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06996628 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07748154 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076314005 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069990404 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076937801 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068201121 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070252351 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069113271 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076309899 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075102745 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077786746 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068511522 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068529248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076416147 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07851761 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069104725 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076667369 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079116649 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076718447 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067507377 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07824323 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068455392 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076695382 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068329594 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077443993 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201967598 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078446378 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070359219 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069610754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069932615 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078484253 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070925716 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069696484 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070511457 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069301477 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077272105 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081005665 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071008358 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077462808 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077363609 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070625232 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077206771 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069196402 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078374857 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070113281 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070398582 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068590938 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080232926 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069483634 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06899651 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069852008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078791463 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06941963 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079082857 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076585092 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068512113 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080453219 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078987846 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075875086 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079224639 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070934463 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069394822 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069702094 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069202994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076588046 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077786398 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071019044 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069529068 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076757879 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079132795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068756379 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077383292 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076920511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077793914 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069743465 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070002861 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079675708 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079410811 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077118792 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077999329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078085715 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069935476 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076648923 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077154484 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069316028 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083206524 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069566223 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081455416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077117029 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076052549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077768923 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078762476 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078957589 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079517415 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081220686 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068648935 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069244963 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077712524 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069467486 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069680112 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07657187 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070951989 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071172283 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081340979 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069758491 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079000917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068371102 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077831141 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068062451 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070454515 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081912006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069558811 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070567527 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077135239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069312887 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076621562 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078442059 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079275669 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069108611 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070582504 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077977538 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077681437 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069188522 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06899604 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070468953 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076761622 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075814227 seconds)
  done (took 18.459851795 seconds)
done (took 38.024163211 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204090675 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152138698 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182611557 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114353957 seconds)
  done (took 2.078320566 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107029753 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097458478 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087567406 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065495582 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093296144 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065876052 seconds)
  done (took 1.874762679 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28430077 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194658591 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177720495 seconds)
  done (took 2.011025042 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208781253 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189326127 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458416103 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281019694 seconds)
  done (took 2.588431837 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140005736 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08188503 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064942108 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08225323 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123535114 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148194059 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092201448 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117117036 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075406658 seconds)
  done (took 2.336549312 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145933008 seconds)
done (took 12.41082624 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097423721 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.256884164 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129079923 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068730901 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070953118 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084494716 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074949095 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.205434698 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14988706 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07889048 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.182128551 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076326282 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.149588169 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.228880369 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137635468 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178290956 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080427196 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.22971968 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075334372 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.438773651 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074800916 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066162726 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.125273812 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076705698 seconds)
    (25/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.117641957 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10158038 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073016594 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084466228 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228662064 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07633355 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076563752 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065517372 seconds)
    (33/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074636211 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067909246 seconds)
    (35/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.214162771 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12956522 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075121248 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075027077 seconds)
    (39/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.138198704 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070297852 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066295265 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065110194 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.241577119 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076194698 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075176691 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069098579 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117159851 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.155504287 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076916038 seconds)
    (50/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.165574726 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.066623114 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194547658 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202131723 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07506411 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087131178 seconds)
    (56/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.23169803 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073368784 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084337891 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089685692 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198293592 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07609477 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119130737 seconds)
    (63/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126088294 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065602728 seconds)
    (65/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087476544 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074815167 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078675412 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108723669 seconds)
    (69/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077664262 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067148619 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065066069 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086495485 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067132106 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12340915 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087212219 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138037994 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.162527856 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076446044 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.177830599 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.196259815 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191315232 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122074616 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176669924 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071826732 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073270725 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088476986 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078815342 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066350838 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083475958 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167174678 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072949551 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189784922 seconds)
    (93/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066231222 seconds)
    (94/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.28145388 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11857791 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075785821 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082404266 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100592238 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067375689 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066398183 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181770844 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07715837 seconds)
    (103/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066935534 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144232046 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072726497 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.238879923 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088507618 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088051066 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.178315621 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066315434 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067717556 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19629787 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078939959 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127958957 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065923035 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065550047 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071176762 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070023948 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074013792 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.07921697 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075212764 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079937005 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066778675 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075398541 seconds)
    (125/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17278923 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073157939 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.127249276 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065341363 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139260932 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066783213 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066138282 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073966024 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076026073 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11752854 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.098790356 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087993966 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066211971 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074215612 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.164778838 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073386191 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090452355 seconds)
    (142/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071436911 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11727734 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073525298 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0666894 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066559395 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131560145 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131756242 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090317866 seconds)
    (150/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066563716 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07463959 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07396395 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065790939 seconds)
    (154/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12052485 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177496978 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066931335 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090505041 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131922918 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065567612 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091722768 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064723863 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066447216 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13716801 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065950398 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085514201 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072966826 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124691938 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140101154 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067609494 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06566823 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215846131 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066472248 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066941766 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066284272 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092921583 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074916457 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.137599444 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.141573522 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136586585 seconds)
    (180/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069066475 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193334211 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066419993 seconds)
    (183/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.174688868 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163339925 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091851927 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065815844 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086636854 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067821491 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087024682 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067695026 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082702194 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066568424 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065789769 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074732081 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066267053 seconds)
    (196/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065978315 seconds)
    (197/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066469254 seconds)
    (198/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06699919 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067860194 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078309934 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065309181 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.176969787 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065822968 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066381117 seconds)
    (205/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065668398 seconds)
    (206/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.123943166 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16910551 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071642348 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072612782 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065149375 seconds)
    (211/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122620574 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071648943 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089668545 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071582901 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075704136 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06621922 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 0.130710516 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.324189005 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069729205 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094727188 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06731436 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076661118 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074839715 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137142997 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067158166 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090713509 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07417975 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066917212 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143152593 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074661172 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217357548 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09258774 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171208061 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066536199 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066265101 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089174869 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087669499 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.169222118 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12380056 seconds)
    (240/309) benchmarking ("sort", Float64, false)...
    done (took 0.132048577 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086986035 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079606396 seconds)
    (243/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066563909 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07081237 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065895365 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065452054 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066106007 seconds)
    (248/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.078479724 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079025044 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074338786 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065920063 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067974569 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066261704 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070666478 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067404378 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067014299 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067242422 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122263913 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.178981959 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168901799 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066853126 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079167703 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066833551 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073247537 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067307095 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075426243 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069996248 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073877795 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181261775 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09352896 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072925841 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090329699 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067198999 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069784604 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.082504651 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076890407 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068244783 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066852969 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067446361 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066744931 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066290841 seconds)
    (282/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191026514 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067444726 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069972978 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066679553 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074523722 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065544394 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066149084 seconds)
    (289/309) benchmarking ("sort", Int8, false)...
    done (took 0.145865883 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066474818 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068447983 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075105563 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06704245 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180646436 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073215877 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066461233 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069543367 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066176275 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066028491 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06653559 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077469871 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085752687 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064988604 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066161267 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073957022 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065542424 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066122098 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132736676 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065949542 seconds)
  done (took 32.857343942 seconds)
done (took 34.227984167 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085969995 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099270031 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073938106 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093632919 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081530837 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096146604 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074630082 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079347701 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081977246 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081180692 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079145802 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072843364 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074936039 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075202691 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07307442 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09690231 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080077647 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07478251 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074611544 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065754035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07501546 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066126829 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065833671 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072530023 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077226121 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073105661 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075753052 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075172915 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066629581 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067013569 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071384164 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075050313 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066147778 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078540024 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075042852 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074411973 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076216017 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078388474 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066029658 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066620961 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076329476 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066401728 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073955654 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072798861 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070652007 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072250196 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0742191 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077941162 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096415962 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070984264 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075972091 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076706134 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077848851 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071617538 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071357027 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074182398 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0723118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096504751 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074773468 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070743814 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076119895 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075500998 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072225581 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074188487 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074010449 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076560913 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078148167 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072720436 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076123954 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07353557 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065917549 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074263023 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070908252 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066154604 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076963536 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078766689 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065658835 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070399656 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076203445 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074339391 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06593885 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070464855 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065758539 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070718745 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070278317 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071938362 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071223393 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073334516 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065543147 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07430008 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072864859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073762973 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065485393 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078680432 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066119079 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072188958 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065941819 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066353423 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06544431 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070894754 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065540153 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070683402 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074614761 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065237062 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070745716 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078723318 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065717171 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072995554 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064937785 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065692527 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077190661 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076559876 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065792039 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069855772 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065443365 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071456014 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065438241 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065453887 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065344833 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065501204 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070600297 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065617985 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07026861 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070723816 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07803527 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065374722 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070826714 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070211927 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065454647 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072669243 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065594593 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065563444 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064753364 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078248325 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069794433 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065359389 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070465676 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069594251 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072998865 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064357013 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073670052 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07094953 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069866363 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071905007 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064837848 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075902235 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06967518 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06928704 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064630862 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065058226 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064264306 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064975082 seconds)
done (took 12.512188813 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069891703 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116133433 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092070974 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092062343 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082388569 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067207831 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074174601 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091616134 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068341345 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095810215 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088176792 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088385231 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108752325 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066121043 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066751222 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067756828 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068094958 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078004235 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093712352 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088226338 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105787773 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066893748 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085741404 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08712385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083383473 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088135067 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067622399 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06779786 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069529973 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089108669 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091389988 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069610026 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067627844 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08996014 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084604703 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079470403 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067297986 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075305855 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067715967 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06640673 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068055377 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087100396 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074783304 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075163234 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068145293 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074743615 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068178065 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082532102 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087201783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075057315 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081825548 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.08999907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070586595 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082855652 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065885952 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082130535 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075585695 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0670961 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066964261 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071856625 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067053443 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069341549 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077983631 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076053757 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070988789 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08192827 seconds)
  done (took 6.611413315 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083966535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093601207 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083195645 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083098572 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066740127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067113312 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069741192 seconds)
  done (took 2.006337271 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066829639 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086824204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090029412 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090547297 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080701806 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091127315 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074668856 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067290438 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095406411 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066389266 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086587239 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09753923 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070756357 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078500837 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0925092 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067005959 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091164085 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06753624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06764231 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090966945 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071935993 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094458287 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078377098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067395174 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079567765 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067776051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099346301 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074872708 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068752626 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06866259 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068589742 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093647622 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079318949 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078931318 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068977596 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082324636 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080549452 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070725361 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077884412 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079205334 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080515146 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068194297 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066488993 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06911495 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070376549 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078443697 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066308306 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06840711 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068285862 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086346594 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066161168 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078892776 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071132777 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072562061 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072906637 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072190357 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075287522 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069243879 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086309266 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068606306 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083742292 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083205535 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080723829 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083305377 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066871258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079412633 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080083897 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068027995 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069078999 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068821711 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083502507 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070365097 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069182924 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078705329 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066955555 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091144793 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09097834 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066946578 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080284159 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067893384 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068379351 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079089998 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090877391 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072857773 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069030538 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071701721 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069410612 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070569443 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066023987 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071025241 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068764432 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072494948 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068703819 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070667449 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069392114 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083133315 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066540392 seconds)
  done (took 8.83007598 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069649971 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067829578 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069061542 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068137409 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068148656 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068606703 seconds)
  done (took 1.898808463 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09033053 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067694366 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080648944 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068408149 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103360255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083319356 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083161431 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077576176 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081563322 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079588084 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083369357 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08609575 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087393637 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070628714 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082963519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069254338 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083808153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072775849 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078916919 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070430605 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080911719 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070064084 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070353284 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086833059 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071900758 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069274511 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07804027 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079205196 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079294793 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077338608 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070500113 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071837873 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075371034 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07714362 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083669829 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074481939 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06860448 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074087831 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071117159 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071527197 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086072357 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070117704 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073803159 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074007383 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076766437 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07464008 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074385336 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076512162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082995658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074200102 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074616796 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068613484 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071520735 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07400181 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074638819 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076722325 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074334107 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082936835 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070137272 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074850982 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067945915 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071956828 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076659146 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071573751 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075617786 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074013206 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075020477 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070228642 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070559902 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068042309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074649727 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068155835 seconds)
  done (took 6.931769798 seconds)
done (took 27.753562076 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.51499141 seconds)
  done (took 1.958986524 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613424697 seconds)
  done (took 2.086070714 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.557526559 seconds)
  done (took 8.026142496 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.380498284 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453734139 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.73411909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13450794 seconds)
  done (took 3.203646197 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.69792071 seconds)
  done (took 2.178101952 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234268674 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224390058 seconds)
  done (took 1.946625703 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34723373 seconds)
  done (took 1.818139287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.066642223 seconds)
  done (took 2.538387951 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233950432 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159998154 seconds)
  done (took 1.869537665 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.441876331 seconds)
  done (took 1.913403765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.204648332 seconds)
  done (took 5.677995588 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217507664 seconds)
  done (took 1.726550302 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234576727 seconds)
  done (took 1.708262194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.704832796 seconds)
  done (took 3.180722058 seconds)
done (took 41.316738296 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082389492 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084903262 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08501746 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081330002 seconds)
  done (took 1.79200227 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07468931 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070306574 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073948913 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070473179 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074340697 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070622375 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071976829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073386552 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070354566 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070575139 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070554818 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070410719 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073274707 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072292815 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069232618 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073497131 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074468069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07045855 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073580265 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070371095 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069336113 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073123459 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073170928 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069842645 seconds)
  done (took 3.203171314 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078595407 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072586643 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075497243 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071903973 seconds)
  done (took 1.783512888 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076179268 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087287334 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085428902 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076833303 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.087752359 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083518346 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067110596 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06716084 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068169062 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076906936 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066200653 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092336264 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085650809 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076683861 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078760925 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063176343 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065790162 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084567389 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077175612 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077785975 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068370739 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077017571 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.065927529 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086063743 seconds)
  done (took 3.322195482 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081012339 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066264319 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080019378 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090993457 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092665769 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066171394 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079374312 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093059571 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135129084 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066642252 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071999786 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066138296 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109568437 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066205374 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080565848 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109606913 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111935293 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069874856 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100512369 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065974458 seconds)
  done (took 3.193884051 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082886799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069690036 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07021942 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065615506 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076164814 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073052547 seconds)
  done (took 1.92910738 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068077363 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067965836 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067439093 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066903146 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072038051 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067727266 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066353373 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068366653 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068041663 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067603855 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067740252 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066136664 seconds)
  done (took 2.301612363 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189997719 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068206502 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068362443 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065942628 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070210602 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066823827 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082001039 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067582037 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093105249 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066585852 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06720545 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069155827 seconds)
  done (took 2.462739465 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189170942 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073325169 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219656765 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143135813 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101538127 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108676999 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110585494 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106873931 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132268649 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09677165 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151775569 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158104607 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102201805 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127700625 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086545709 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118797151 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143705358 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154044308 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098667711 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152579406 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133457741 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121047134 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140383248 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09614475 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100556912 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111715695 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071621687 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077018772 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156924392 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122028088 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134223428 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103999496 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089169219 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164275434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159790195 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130588773 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140467519 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081340541 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117304186 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128643331 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191452263 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0859565 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148155745 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101478017 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077247439 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122179545 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108214095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113245503 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097824338 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08504578 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272377397 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171263705 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127727517 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083535771 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115159891 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105255494 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108826166 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112922661 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16665556 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148352225 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119729157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069037184 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105908067 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141319824 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125053896 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103532016 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116994458 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089754881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12305604 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149953885 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116899992 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132003666 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111191209 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084081351 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114084401 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129165068 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118974848 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160033655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116743118 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070577199 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114221049 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094169603 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077393006 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142030704 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073325937 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163242345 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094965995 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120429592 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124129911 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104357895 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103978416 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14826617 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132509027 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099883067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083572676 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098964604 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112903739 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135566658 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083733376 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103174321 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107642948 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075944771 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124782917 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07195483 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113361278 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091949091 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113287896 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118863688 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076506658 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114127345 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241646476 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098728398 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121175959 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14724912 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085006459 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078410255 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155303951 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115510334 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099668854 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13349969 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147511968 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116974673 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093540091 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136240442 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161610571 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086988662 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150710595 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098610054 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080753427 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.101514469 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116895448 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105577724 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118285822 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078733075 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114347015 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152801174 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072272135 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093524459 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125691049 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07848198 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077897317 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100331639 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099220193 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093152335 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097339937 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099890566 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129033025 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116629696 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101195254 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117040619 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096079499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154537373 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084555702 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099000947 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099790778 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07090801 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.124659113 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145617119 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076281234 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148963638 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115504583 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109800449 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111917717 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079904701 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127638126 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075693168 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070673489 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130495722 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106961058 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102843814 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139510078 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254386925 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117703071 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.114164522 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12408396 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121030171 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122618666 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10278123 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08606102 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109305093 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121837562 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071431221 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088016249 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079785579 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098284064 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090259104 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08086542 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131605673 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114840169 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106363232 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109135822 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093145826 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13986179 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07594636 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116727254 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116260888 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091525613 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145212287 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142267712 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125187862 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097144193 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128291513 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071409071 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072330954 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085944643 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116586906 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081282548 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081379563 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107828153 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140167853 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11890879 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128382403 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117259343 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110819823 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147726672 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070794454 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115366519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135215881 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114535964 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100840086 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087791869 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093833925 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134506497 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098982853 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168227578 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107459842 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116727929 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145340611 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.0974207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075986874 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098181666 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121216497 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095896098 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.281685367 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095454947 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084143311 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103509914 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076524494 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098441178 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118657548 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111033572 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127727168 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106328068 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123815129 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075800962 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106403619 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116681717 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114748207 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081241366 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11082663 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155190306 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093121887 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11025721 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140146855 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076474934 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133752699 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160885554 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13436042 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082079089 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099877273 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115924139 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11984605 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111805326 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130392766 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100102253 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129427031 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106299113 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.081694698 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083121294 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092073614 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098903734 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108329376 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09957251 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109489531 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092487171 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121980471 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098274782 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105446856 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112068939 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09661074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092471769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09270955 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162360589 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112336279 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157278089 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095663497 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132595999 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147751629 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07303532 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075432545 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077769232 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128241055 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080757125 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121094999 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.252508759 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110826415 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11712911 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129102711 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093036479 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069326212 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1048376 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125875947 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116769245 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092439583 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099267002 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147942223 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113402698 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076800612 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106739899 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110647891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100043697 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161555883 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079045912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104784098 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074916482 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076929569 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118523252 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141754146 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080253917 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100475649 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114418768 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105964369 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119518434 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093662851 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10646067 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124572155 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137164975 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119560656 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086893163 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105626535 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12100174 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143500947 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099563 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096431729 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162448191 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14412929 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148284241 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084702336 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108977273 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108706199 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104576573 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128937015 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081115287 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149320189 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078782734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125552808 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096472117 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085489951 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119364908 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106888579 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084024882 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133758543 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109722945 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078544269 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076584734 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254205313 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113404425 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099096939 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072737766 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129514163 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071770976 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127465514 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158028835 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077878322 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100567889 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092514421 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079838741 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098608267 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097313971 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082819371 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096732168 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158540522 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08437573 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136925149 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124120003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104837386 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128644787 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099933234 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639642749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077284833 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141527674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10971881 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164833301 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094647934 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112619332 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106313725 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114621485 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13326868 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097525892 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174796907 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122461858 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112372404 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076666765 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097323622 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098636086 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085607279 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101805475 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108153043 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108074808 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091055982 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11228729 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114923441 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079924314 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093111171 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145161251 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10992552 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133291708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129077135 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080965723 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110956022 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126940536 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076774386 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111462297 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138513106 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247856115 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096839615 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080550148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096640186 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161439625 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071176687 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147856617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114078496 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108097793 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107450737 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105018347 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123269456 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099148459 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114314828 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089684366 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140051921 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108309577 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080277536 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076381112 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100534374 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104744099 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094195413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093701971 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096332492 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141362782 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070259665 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09391932 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109000789 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134759272 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158715734 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101494903 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081192498 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112577441 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113296318 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108588867 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114985092 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079532307 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078785147 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079174141 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098310923 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120381318 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108573104 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113642882 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104565872 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149482509 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081391914 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221774173 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092204259 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100694733 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086460155 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077745846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092324694 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092263311 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098713535 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106192451 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161900301 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091986189 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086611053 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088981244 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072768438 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081079045 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117903479 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103464681 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110055776 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098090492 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079235867 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244831251 seconds)
  done (took 56.233479324 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103300167 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.076926482 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09756016 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143232553 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121221553 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199230199 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149561006 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188107971 seconds)
  done (took 2.654155018 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068136603 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093383812 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103140794 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082606089 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066853657 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068413665 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222649299 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080706915 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066625899 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090763169 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076762534 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068915778 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.442049248 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066748412 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067545853 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07583484 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067512112 seconds)
  done (took 3.383281041 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378105845 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600709171 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.344678811 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075174713 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.968711489 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091855706 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.2016555 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140513505 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081294256 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549214657 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36889271 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131818312 seconds)
  done (took 18.521831275 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081641944 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075188735 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089241086 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089634298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.0776416 seconds)
  done (took 1.997840433 seconds)
done (took 104.298280612 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081215929 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.426979049 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068847401 seconds)
  done (took 2.105876394 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090683345 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087961852 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088094753 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085927325 seconds)
  done (took 1.948139389 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074449944 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076477848 seconds)
  done (took 1.737724183 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225702336 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174274088 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094984027 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083112796 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079884556 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080394442 seconds)
  done (took 1.836356939 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072363109 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072054042 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072557584 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073262125 seconds)
  done (took 1.877941814 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067727805 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066565617 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06879244 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071809962 seconds)
  done (took 1.863897792 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083910467 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084326166 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078976529 seconds)
  done (took 1.836602387 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100206589 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089790358 seconds)
  done (took 1.779275938 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0808728 seconds)
  done (took 1.668364406 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08835215 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.097882228 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130856364 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113446142 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137151737 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113882012 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084365367 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084726025 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078393118 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085853303 seconds)
  done (took 2.601417411 seconds)
done (took 21.413921186 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077991505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366532313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359353404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0897073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66988132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356702237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968769434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092406662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139911732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068301875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085019526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649717571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960973657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323356914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946746323 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319956827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650268853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068821636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067858521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068605022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955558136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067886462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068015035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068531222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649217114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37237479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068754169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319664462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06908504 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070890008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356684674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068929806 seconds)
  done (took 16.034847939 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07017569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12084419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072512121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084419482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070331021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07014968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071813426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069385666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120039916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068618675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085254127 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068267633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072284258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068852319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088036008 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068618825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069483178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069939534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068962925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069267764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088225533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069056655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072067355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069741139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069181825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081558998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069873039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069686228 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06950369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071235786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072176968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070194563 seconds)
  done (took 4.021648254 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115522817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123917011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073987686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105560203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111889239 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071327907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146024353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092981906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127087511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068517808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085750993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068694545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102951745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069966105 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089009487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06981632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070575825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070207459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069371826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069482169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088549882 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069102074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069330338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069785052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069618238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08309705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06979903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069321148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069635709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071344847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07287262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070153575 seconds)
  done (took 4.278812577 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070740304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07295501 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079959347 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081144679 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067306363 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070258335 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071258059 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067154522 seconds)
  done (took 2.186529797 seconds)
done (took 28.116630757 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078231274 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067690828 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070950396 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086720185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073654451 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078794898 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065511551 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074428127 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071637259 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071822655 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073685165 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067626345 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070353046 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065369884 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072297121 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066338955 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080710687 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070466785 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080048678 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080748366 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069756314 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07294578 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074806483 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080326295 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080457265 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08123581 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076424768 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073024577 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06792798 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070768949 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070121393 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07919231 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080727854 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080605729 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067198782 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067291502 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071714516 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068711041 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082295246 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0762981 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069044447 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076737226 seconds)
  done (took 4.683466636 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084349251 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089120523 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081884241 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079474666 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089959726 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082231162 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085950607 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077722218 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077518556 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085466045 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073747438 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080346167 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078617862 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072474441 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077434918 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074921685 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079346476 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073602551 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076939243 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077496964 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086636585 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072756954 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087361355 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079900017 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074483217 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080052847 seconds)
  done (took 3.695803598 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073129651 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085383616 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092460413 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142855936 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110457986 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079588401 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08192765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091804711 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095872009 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068414089 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072689293 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092915771 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092528887 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073939021 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06877851 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084738834 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083782444 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070038706 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075204644 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096532137 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089131526 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085282526 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093354024 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084638151 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06771005 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070554151 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072712199 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086540343 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071038139 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078960825 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0707554 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072383177 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069493102 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078559477 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070819003 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067292097 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091822414 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079059736 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080460201 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068565921 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077567462 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068950349 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093494819 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127388227 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067095232 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071653615 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07183765 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079327004 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067456074 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095120543 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079914595 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067790573 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068439983 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067175576 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067275765 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070573267 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07026431 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070746761 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077970379 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074284306 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089451599 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072887575 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084956548 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067852695 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078047004 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067231156 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070101571 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067782844 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096271332 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069438635 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110942391 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069216314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066615283 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078701609 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077899047 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074328305 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067675273 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084909838 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079561588 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07231758 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075861447 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071477311 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071964039 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097909788 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068292162 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068106932 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066507708 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071485917 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071217725 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068380659 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079699152 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067206551 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071361812 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085405187 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068125614 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068859386 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071637322 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07056685 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067265538 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078350163 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071877996 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069218624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078380978 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068357413 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071456625 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081128172 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074820455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066928868 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070188523 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071551899 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069062616 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069566359 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071962121 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070258573 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074504964 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074787331 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.0733361 seconds)
  done (took 10.668708003 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162502854 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154298509 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070459903 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146943185 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076564236 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080267029 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150675249 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094738579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068657379 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070202757 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068569141 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109062489 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104547474 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115263368 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080741988 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069173541 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090775893 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11385753 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152348547 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14603033 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090814112 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.0759725 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070672088 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069951793 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070182961 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078351598 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085129478 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077833229 seconds)
  done (took 4.391036379 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077398174 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102654284 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072550182 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090667345 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087886954 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068711559 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070549548 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070441261 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085254991 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078268369 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068756439 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073676715 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072153351 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071889879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069282976 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075383719 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075886427 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068329084 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072645949 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074718722 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078693362 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092921432 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072686314 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068366596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07135415 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069089575 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076330591 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08346397 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068984415 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103106219 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066240486 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073383858 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083002257 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069198532 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068113455 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069020784 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068575012 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068419127 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07048723 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067076284 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067752439 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072871937 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067318539 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076357526 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082058192 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070888843 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070771669 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07125784 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071537513 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066484442 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071324701 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071383116 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071499953 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075912985 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072737357 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071600029 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070174394 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095174632 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07460245 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067970199 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06782716 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067568164 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07104701 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078285245 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084040607 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071101942 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067547237 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068551659 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081075205 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081218016 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068042526 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073385521 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066470782 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070775957 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071901905 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071149246 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069327355 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067380477 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067980035 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071389173 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069486725 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068437908 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067897616 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071375547 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067021411 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06761432 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068960757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070351515 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076670884 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068231658 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072233559 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070057439 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067290778 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071179724 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074056932 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071731797 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079352442 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079331051 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068909875 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067163207 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082068126 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071433174 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067854607 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074219559 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073550666 seconds)
  done (took 9.333594437 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090626917 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069077196 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084342487 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090843416 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078527162 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073900642 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078420263 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068138381 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084850329 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073600617 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07630695 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06680123 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079166157 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078348205 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068912822 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078509923 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0713694 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086071846 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082934245 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067330548 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077254946 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080716467 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08022682 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082766003 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082651432 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08319408 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080401938 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078068095 seconds)
  done (took 3.850065981 seconds)
done (took 38.22306388 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.691632129 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.850015795 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.675956412 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.877571427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.891558298 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.702151983 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.866438618 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.670610327 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.918354685 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.720199062 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.910923459 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.914663763 seconds)
done (took 64.441116925 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.708028512 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.831793902 seconds)
    (2/2) benchmarking "String"...
    done (took 1.933928117 seconds)
  done (took 5.381236569 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.878358243 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.343735391 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.909601183 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.674569602 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.682907374 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.928907691 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.472777995 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.120299366 seconds)
  done (took 29.748594531 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.859258495 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.898852002 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.375278268 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.406181893 seconds)
  done (took 15.198452341 seconds)
done (took 61.624669256 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.68603644 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.736601679 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.713776711 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.673390498 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.768811023 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.683732991 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.148799158 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.729058055 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.677447075 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.688627671 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.677813885 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.16001474 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.684856355 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.070755864 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.67599142 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.677711335 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.699564807 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.279560178 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.831150115 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.690417958 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.696954333 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.683407283 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.681612881 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.685468049 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.702590999 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.676935195 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.074429416 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.684557446 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.5052812 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.681542308 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.731286369 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.225474559 seconds)
  done (took 201.599629959 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.675196926 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.80664979 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.917795972 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.697889982 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.201462593 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.853006991 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.780844966 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.252902531 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.680596634 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.683529165 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.814643643 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.677045495 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.811486139 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.706617656 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.712367221 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.71142897 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.991888706 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.836490345 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.720533887 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.825494558 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.683032459 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.654493865 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.630374243 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.809036968 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.688203249 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.777296262 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.704491357 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.698825585 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.866269182 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.968501776 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.689718251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.694046954 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.878227161 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.545230605 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.696349415 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.695051122 seconds)
  done (took 166.653968887 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.857688324 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.678438193 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.676984571 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.677604842 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.67629365 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.683189311 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.677411659 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.799071903 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800733121 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.333521527 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.425533359 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.733842415 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.678355098 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.434932824 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.678756206 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743028955 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.68929352 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.679492459 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.692698673 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.704790884 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.677627177 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.68015309 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799548249 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.691724229 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.678284998 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688484751 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.679332404 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.683327841 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.065813492 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.67892275 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.783065446 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.682503675 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.684864818 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.91875952 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.678712633 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681452991 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.503867475 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.679415117 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762840902 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.680937791 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.68459962 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.678565844 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.897330618 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.680330287 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.680090431 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.680097691 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.67965658 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.78796966 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.681380273 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800659001 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.681281482 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154390402 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.678251076 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.678894801 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.681620202 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.914485766 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.250640542 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.68232082 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.682133299 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.679474762 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.68143011 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.687239418 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.67915862 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.928715368 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.750774923 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.681724855 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.680794757 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.685551599 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.680209814 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.813717433 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.680481732 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.126227152 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.695042627 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.920763515 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80085852 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.684283088 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745331475 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772213641 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.680217889 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.679727903 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.680591366 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.680415149 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.760868236 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.681079303 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.764872919 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.693057724 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.682621223 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.735694706 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.751211747 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.68241953 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499360137 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.683409403 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.681707727 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910970671 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745981473 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.682269368 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.684073718 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.764507226 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803146379 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.39809018 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.683157529 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.986036907 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.681333753 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.755261469 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.682678367 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.7923526 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.685388651 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761917765 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.689892083 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.684490786 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718021573 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.682956948 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.692921825 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.682017976 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.053791866 seconds)
  done (took 390.067667147 seconds)
done (took 761.855295248 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.308183407 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.267973695 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.364401419 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.286363134 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.2580031 seconds)
  done (took 13.108096443 seconds)
done (took 14.731451959 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.759245867 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.765129268 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.701834191 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.763071699 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.698113096 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.761395154 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.747497252 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.70577475 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.731440496 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.707279301 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.732680758 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705414753 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.690143727 seconds)
  done (took 24.092303479 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.909853802 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908734488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.747155358 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91019637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.722805791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.911625301 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.836409548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.829053586 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.825631295 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.695710732 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.691977987 seconds)
  done (took 21.613298851 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.912986131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9214246 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.753364116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918820214 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.726090639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.917172811 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840622573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.834125318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830677984 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.695598948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.693043495 seconds)
  done (took 21.66842902 seconds)
done (took 68.998602031 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.687260104 seconds)
  done (took 3.31165527 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.706751977 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.86316668 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.687351852 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.687998352 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.687512278 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.688197426 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.687687278 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.68798902 seconds)
  done (took 15.322675098 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.68867849 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.686443331 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.686773706 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.68662212 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.687276468 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.687529949 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.687058698 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.68797995 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.687483522 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.687975561 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.6878302 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.68767631 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.687845295 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.687601896 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.688002994 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.687637418 seconds)
  done (took 28.625952369 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.689013718 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.688816805 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.688332167 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.688047837 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.688745316 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.689188455 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.68890446 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.688904632 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.687700528 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.688826935 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.688727629 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.689258585 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.688640392 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.689043564 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.68891465 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.689084036 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.68904839 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.689458998 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.694625863 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.689512915 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.689673295 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.689125233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.689603894 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.689357374 seconds)
  done (took 42.16878753 seconds)
done (took 91.056221692 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.423919755 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.27928771 seconds)
  done (took 9.330077898 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.693337641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.689327136 seconds)
  done (took 5.073912354 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.689073502 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.689067436 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.689114389 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.689552513 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.689062554 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.689589889 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.689268181 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.689483942 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.689786507 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.689143284 seconds)
  done (took 18.52026768 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.689349626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.690594636 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.68894687 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.689538371 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.688758407 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.68891678 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.689525678 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.689275296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.689222473 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.689740505 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.689962149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.690678221 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.689080329 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.69144962 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.690304895 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.690119957 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.690669438 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.690217557 seconds)
  done (took 32.044581251 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.690127975 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.690468592 seconds)
  done (took 5.008101704 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.689865647 seconds)
    (2/7) benchmarking "second"...
    done (took 1.690442066 seconds)
    (3/7) benchmarking "month"...
    done (took 1.690023113 seconds)
    (4/7) benchmarking "year"...
    done (took 1.690902614 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.689967575 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.691125508 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.690063313 seconds)
  done (took 13.460439084 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.691400107 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.838784743 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.897876254 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.275167014 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.692144532 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.69426038 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.57243793 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.694791863 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.695945271 seconds)
  done (took 18.681334145 seconds)
done (took 103.747119182 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.555873471 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.690932067 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.916237623 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.745635333 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.704061141 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.028524422 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.723904137 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.971680773 seconds)
done (took 41.96792756 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.706369985 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.398241664 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.65031442 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.726614661 seconds)
  done (took 15.404710739 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.690815547 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.083016025 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.719889775 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.54704695 seconds)
  done (took 21.674355857 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.052732679 seconds)
    (2/2) benchmarking "read"...
    done (took 2.039705311 seconds)
  done (took 5.72676786 seconds)
done (took 51.144456195 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.692389949 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.692414916 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.691797063 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.692468448 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.693134477 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.692779409 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.692200689 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.692031328 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.692539512 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.692250925 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.692337364 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.69221384 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.692452962 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691313286 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692116103 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69202552 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691386935 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.692852308 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.692097998 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69181127 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692745298 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.692378087 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.692732624 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.69276248 seconds)
  done (took 42.245840973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.691813867 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.69301679 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.693722739 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.692595404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.693619677 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.693222143 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.69258285 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.692297357 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.692575399 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.693529485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692750453 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.693860961 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.693043962 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.693508633 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693179474 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.694044544 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.693744117 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693133014 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692997645 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.693925504 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.693825805 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694376578 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.693821376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.69324949 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.69333639 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693654892 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.694589719 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.695088599 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.694752572 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.694340346 seconds)
  done (took 52.435594256 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.699724546 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.700989599 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.69435286 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.694335837 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.694091754 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.694263764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.693550116 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.694162579 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.694286138 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.694622217 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.694952995 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.694568421 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.694347258 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.6955472 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.694740345 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.695290024 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.695326273 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.698077691 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.694777701 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.695023224 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.696019213 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.694586463 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.695919035 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.694211453 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.694671099 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.694825513 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.695279619 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.694603035 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.695875364 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.696271132 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.695991761 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.695959922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.695672115 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.695326288 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.695764237 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.69646457 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.700068218 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.704137641 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.696021642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.696385861 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.694933928 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.696037075 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.696615808 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.695608818 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.696129417 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.696265011 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.696876474 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.695978851 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.696952888 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.696103626 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.69591947 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.696142858 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.696421537 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.696506529 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.697610537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.697154475 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.698842474 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.697203394 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.697310591 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.697749624 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.697066885 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.697348636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.697184964 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.697247044 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.698064882 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.697684402 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.697721637 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.697074392 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.697354464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.698119409 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.696794432 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.698303619 seconds)
  done (took 123.767104648 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.697373481 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698193969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.698250879 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.697103396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697572548 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.697590663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.699775665 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699381056 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698734215 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.700487327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699144557 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.699628501 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699813966 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.699193971 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699087433 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.700456363 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.700606692 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.699185465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.699154847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.699608786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700575572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.70044292 seconds)
  done (took 39.018096879 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699696491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698807024 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.699952715 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.700089281 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.701062657 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.701317724 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.700671644 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700082184 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700104507 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.700309663 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700257831 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700395092 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.701126539 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700529623 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700955996 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.700681732 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701681686 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.700312156 seconds)
  done (took 32.245056786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.702132573 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.701915583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.701229273 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.702037872 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.701804704 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.701677732 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.701844553 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.702085933 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.701409361 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.701965066 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.701064192 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701803263 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.702055488 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701298415 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701381085 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.702351304 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.701386618 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70199505 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701246458 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.702193463 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.702011928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702178042 seconds)
  done (took 39.078567933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.701945548 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.701343416 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.702028853 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.702366476 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.701665177 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.702640918 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.702263785 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.701764849 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.701912093 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.70261453 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70295835 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.702074845 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.702791465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.702393303 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.703134963 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.703434386 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.702782511 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.703536914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.702947972 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.702416272 seconds)
  done (took 35.689101328 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703786476 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.703132411 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.703782878 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.703888949 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.704964517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.704628161 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.704025538 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.704533613 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.704594968 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.704174255 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.704435002 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.70406103 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.70443895 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.705571131 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704246027 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.704901105 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.706409133 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.704737916 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.705530275 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.705692743 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.704857759 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.705453668 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.705299489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.705343654 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.705895419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.705413394 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.706532805 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.70496628 seconds)
  done (took 49.377190553 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7043747 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.705388706 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.704504496 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.706214029 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.704200259 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.70630011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.704966757 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.704761957 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.704198843 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.705123774 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.705346277 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.705059629 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.704205727 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.705815813 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.704989949 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.705350782 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7050677 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.705472114 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705840645 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705419428 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.705920727 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705499585 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.705100856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.705371104 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705961021 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.705532206 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704840219 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.706096533 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704689927 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.705883835 seconds)
  done (took 52.79973692 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.726245677 seconds)
    (2/2) benchmarking "in"...
    done (took 1.726195756 seconds)
  done (took 5.095011777 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.705332065 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.704828941 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.70384442 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.704985887 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.703769763 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.704140267 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.704639278 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.704553362 seconds)
  done (took 15.279295491 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.708924062 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.706887085 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.707246143 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.707893923 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.707962009 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.708712073 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71567222 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.708924084 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.711531689 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.708887047 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.716276411 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.717994934 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.712026705 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.710295034 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.709473052 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711833806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.707782276 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.7077559 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.708238825 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.707890239 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708237308 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712150522 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.712593331 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.708423283 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.710546329 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.720592477 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.714549744 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.7080366 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711329501 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.714644639 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.71090355 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.707890406 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.709245862 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.709677008 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.709444086 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.709038615 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.718840002 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.711426926 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.716821171 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709927162 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709409548 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.708447502 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.712023875 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.712725584 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71318496 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.710031218 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.7093106 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.708821382 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.710110719 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.714120794 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.717522535 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711562965 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.710015741 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716719329 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.712363999 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719039696 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.7117824 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.714074259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.720626852 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.722533079 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.723634621 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.719829003 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714061477 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.711678605 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.721142762 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.736085796 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.719470057 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.711656494 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.710981591 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.711739994 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.71968017 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.724004675 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.723085621 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.71173738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.712061218 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.71064997 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713131347 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7119978 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.720186978 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.7177202 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.712128223 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711899761 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.721707009 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.736671458 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.713199879 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.711896772 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.711270771 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.71128148 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.71268775 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.724355545 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.71165816 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.711919001 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.71222472 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.714239629 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.713209126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.712459997 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.712080119 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.714457449 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.711797991 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.712635831 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.712721048 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.717549092 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.723884121 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.713097167 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712664337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.720149873 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.712113033 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.713450812 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.720870317 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.712590625 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712068582 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.713534956 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.721134912 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.713439629 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.718992938 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.721866946 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.713959243 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.717494603 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.71363438 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.71326631 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.724056079 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.74295868 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.713949633 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.713475067 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.719890817 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.725703172 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.714817507 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.71945315 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.713801472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.714349403 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.714208649 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.716766083 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.713619502 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.716678606 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.714112991 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716584769 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.713834794 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.7147452 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.714136951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.717348461 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.715934608 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.717283859 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.716573322 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.717890782 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.71452103 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.719074343 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.725062665 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.714975971 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.717930414 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.716581974 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.714757907 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714905802 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.71803196 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.714518976 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.715582436 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.715396084 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.717339465 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.716096486 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.714840564 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.71463907 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.714438546 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.715968083 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721846776 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.715343376 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.720578476 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.716926625 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.715023321 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.716011857 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.716075312 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.716111211 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.715091756 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.71509457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.72084364 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.724286704 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.716306239 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.715870199 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.720072069 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.716632612 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.716511276 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.715740507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.722056494 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.726647378 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.715977864 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.724537439 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.717998986 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.716547969 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.716888594 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.718639352 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.717881709 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.717145738 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.721694082 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.723888986 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.730012159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.727232916 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.717065026 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.721618743 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.719620864 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.723105467 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.72564159 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.718572749 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.719083584 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.718778235 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71952649 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.716943446 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.720583882 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.7173276 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.717631706 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.717051118 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.717178203 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.717620097 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.717368655 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.71973994 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.720497987 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.717749156 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.717533634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.718834374 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.719888144 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.71791661 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.71716931 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.718769397 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.718968693 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.718185002 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.727161457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.718871507 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721500495 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.72238396 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.719852793 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.718207333 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.718259518 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723636137 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.720468375 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.726223215 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.719742208 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.721240016 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.726795536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.719548286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.718716323 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.723132266 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.719325902 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.718243779 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.723340261 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.727807497 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.719065961 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.719830904 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.720949299 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72173421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71947784 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.727629537 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.719633485 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.721087605 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.719855358 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.722206196 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.71995651 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.723263024 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.722435911 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.721662973 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.724476639 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.719589976 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.719464344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72327443 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.719584408 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.720235348 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.72013396 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.72415345 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.728320974 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.727024847 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.721464189 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.723370879 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.721429607 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.724465882 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.722726749 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.720023445 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.723062187 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.734100731 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.7298745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.729425575 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.724697246 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.720816145 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.728218057 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.722659548 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.726306664 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.722791138 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723178576 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.722186842 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.722469914 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.720139416 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.724587759 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.721678723 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725306673 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.724047185 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.725186826 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.721542838 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.72336651 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.721483446 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.722169706 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.722161391 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.722658726 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.721323119 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.725711855 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.725762147 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.721832168 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.724315522 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73104893 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725254748 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.724942955 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.724065032 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.724586398 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.722460293 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.723310346 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.722793717 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.726750001 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.730077667 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.727983413 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.73351819 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.724893046 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.733518567 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.723825408 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.727595533 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.731394064 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.721805648 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.722431212 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.723685789 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.723029644 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.730848686 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.723055821 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.724747698 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.727786735 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.723350219 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.723420232 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.723587991 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.722940274 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.724192145 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.723032045 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.732675607 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.725288451 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.729282876 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.727694713 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.72371713 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.723933412 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.724326389 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.723694527 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.729672482 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.724661674 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.725993658 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.725532126 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.724306718 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.724368007 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.725153614 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.724522097 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.725416942 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.72423124 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731802821 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.726263261 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.729227131 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.725359874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.734027182 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.72500873 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733880447 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.725526199 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.727107935 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.725482018 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.725158071 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.726081068 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.72526928 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.729217592 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.726173856 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.72722144 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.729899576 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.726216938 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.728222862 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.728660261 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.725824223 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.727965763 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735169805 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749585018 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.729040777 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729681661 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.725647858 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.728517069 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.730740296 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.725739548 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.725661754 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.730848873 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737756755 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734153233 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.728094635 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.725816619 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.728686921 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.727157704 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.726689351 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.726433284 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.726795783 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.727381976 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.726926362 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.726333575 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.73207871 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7258637 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.72750005 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.72906009 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.727839725 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.738517231 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.726808301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.728258262 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726981155 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.726242896 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.72904551 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.729577522 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.727048044 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.729539933 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.727171477 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.729450673 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736457995 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.734608492 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.732545772 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.728675377 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.728327476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.730640293 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.728243928 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72884926 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.728167668 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728040441 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.730392828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.72794901 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.729028947 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.727731791 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.728369622 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.729003323 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728942042 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.731492085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.736969196 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.729748239 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.72681647 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.72737595 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.728728724 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.727605449 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.730139205 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.737477152 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.732926683 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.740308872 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.737199283 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.732182084 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.730548622 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.732991454 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.739059622 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.727949398 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.731281036 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.728604176 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.731208316 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.730122175 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.734814867 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729218013 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.738039825 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.73134832 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.729415013 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738774863 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.73257611 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.728872727 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.732357919 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.735141724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.731638295 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.729291607 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.72918203 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.731605668 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.738849361 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.732782828 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.72948057 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733091256 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.729903377 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.732781269 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.734728718 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729827537 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.73252235 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.728953133 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.731481559 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729467689 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730760039 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.730160815 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.730266354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.730369756 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.735292962 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.738917563 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.729930363 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734983998 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.733400695 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.732611933 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.731314973 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.733575853 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.730550377 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.730291434 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.731074422 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.730701027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.732713645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.736008527 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.731491771 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.732995942 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.735056395 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73135713 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738576095 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.7432855 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.739614921 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.730655835 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.731990467 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.73290552 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.737636734 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.731854904 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.731190954 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.734244916 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.736276685 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.732977808 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732255067 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.731378789 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.73722769 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.751032793 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.732482655 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734270769 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.733514937 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.73792722 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.732688627 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.732504797 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.732612815 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.73471143 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.736837423 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.741972437 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.73212782 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741360831 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.734458679 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.735055989 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.738130505 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.737792107 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.742287812 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.738031219 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732372652 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.734037334 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.73952473 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.752007751 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.733730992 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.744369732 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765006814 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.735434326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.737264517 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.734458035 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.735032844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.733859468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.736631462 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.733078795 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.734616816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.733917376 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.734008956 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.734518209 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741194346 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.737374259 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.733624172 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.734009765 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.733287169 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.736468539 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.733843149 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.735602934 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.733643875 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.734923751 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.735237612 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.735021331 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.736804228 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746944334 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.744896552 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.733970436 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.734850269 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.734886578 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.740069741 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.739046791 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746716797 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.743065762 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.734790945 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.736198309 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.738145076 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.736382107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.736295709 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.738631642 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.736781763 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737356119 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.736096888 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.748603429 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744550243 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.742852453 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.735482988 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.735157456 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.736193237 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.738373597 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736201476 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.736631409 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.739825481 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.737228997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740523041 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.735448165 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.736495595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.741054877 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.744357451 seconds)
  done (took 1029.600011623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.735999508 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735495065 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.736715339 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.736001818 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736280527 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.736157512 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735841244 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.737266647 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.737119768 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.737064941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.738143832 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736503332 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.736611483 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.736945227 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.736556142 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.736585091 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7370857 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.737084138 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.737291515 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.737442043 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.737977541 seconds)
  done (took 38.144921853 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.737428144 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.736180224 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.73810387 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.738878824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738095649 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.737650964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.737502432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736732102 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.73754483 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736598451 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.738142332 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737812235 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.737511152 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.737567436 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737747543 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737026271 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.738921087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738341004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.737651232 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.738825332 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738377645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.738179358 seconds)
  done (took 39.904605747 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.73903163 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.738600429 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.740667902 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.738704419 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.738684544 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.737661605 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.738515139 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.738798351 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.738481125 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.739969516 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.738943123 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.740994379 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.74692772 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.747052636 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.741489804 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.739056261 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.883908324 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.7401709 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.740288428 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.740060803 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.738670411 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.747364286 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.739327875 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.739730284 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.738845666 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.739877853 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.74048137 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.738832999 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.739010284 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.741184289 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.744567895 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.738697146 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.741419948 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.743731187 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.739601585 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.740628559 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.743664723 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.739584215 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.740939068 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.739703575 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.751189729 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.765417373 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.740922906 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.748356773 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.740379587 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.740647033 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.744900603 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.749080407 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.740317172 seconds)
  done (took 87.16089208 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.740304152 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.740649685 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.740370353 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.741237357 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.741440898 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.739017813 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.739852139 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.73952575 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.739525153 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.739399358 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.739961135 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.739504301 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.739711263 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.73888522 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.739198457 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.740313134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.739467943 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.740109645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.740093325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.740143048 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.739603116 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.740825284 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.739973596 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.740235255 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.740354991 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.740093884 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.740105069 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.739909846 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.740293326 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.739848196 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.74054541 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.740696459 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.740406944 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.740362112 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73938572 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.739374066 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.738875385 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.738364659 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.73967086 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.738995588 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.739265215 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739677318 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.739358157 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.739719077 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.739617379 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.738157213 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.739031646 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.739409526 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.73872127 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.738960048 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.738993596 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.739161981 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.737811226 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.738894142 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738590789 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.738807256 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.739291704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.73871753 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.739383872 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.73889037 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.739117983 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.739615046 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.735155365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.734672901 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.734312753 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.734550635 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.73573528 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.765830239 seconds)
  done (took 119.975279116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.73459468 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.734042099 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73480589 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734401652 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734769011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.732906346 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.732657426 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.733386249 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.733073071 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.733906107 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734740039 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.733401043 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.733479925 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.733255096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.734355699 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733866925 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.733569484 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.734368422 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.733488611 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.733054048 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.733390044 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.733712051 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.733061704 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.733444943 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.733467469 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.733313398 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.734236803 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.734607998 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733924453 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.734208377 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.733823059 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.733927625 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.733762024 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.734604666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.734474543 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.734679556 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.733576745 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.734840957 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.734756841 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.733604162 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.733906245 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.734823053 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.733879136 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.734258784 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734840654 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.734162449 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.734855684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.734610381 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.734466655 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.734416339 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.736654034 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734353283 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.734662458 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.73493394 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.734537258 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.734793688 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.736328691 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734999642 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735700015 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.734877988 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.735559251 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.73506892 seconds)
  done (took 109.195038304 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734878373 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.734453999 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.734530159 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.733937386 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.737149793 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.734951339 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.735286904 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.734195155 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.736071912 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.734791509 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736074754 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.735137821 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735527908 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734847833 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.734647061 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735648239 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735228343 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.735006666 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.733891731 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.734926088 seconds)
  done (took 36.373835649 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.734454915 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.73499717 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.733884733 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.734750699 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.734596683 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.735454435 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.735318053 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733712784 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734918646 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734628801 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.73809481 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.735159263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73680143 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.734128464 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.734136057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.734416312 seconds)
  done (took 29.430894395 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.733604317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.733695172 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.731276626 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.731421168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.731732424 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.731873657 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.730189009 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.730645272 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.727850907 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.728343254 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.727253419 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.728472451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.726736279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.727692031 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.727860905 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.727537543 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.727925202 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.727817394 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.72810016 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.727961554 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.727562065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.72881642 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.728696297 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.727659453 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.729760248 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.728068593 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.727537331 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.727659809 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.727197947 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.727322194 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.729130261 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.728556778 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.727853074 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.727608077 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.727876463 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.727502941 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.727290667 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.727972602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.727931963 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.727111262 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.728224534 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.728783784 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.727291321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.726963835 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.727393056 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.72745707 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.727241508 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.727466788 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.728746794 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.728636378 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.727351951 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.728493023 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.728356971 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.728726933 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.728180377 seconds)
  done (took 96.738533444 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72830689 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727585641 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.728245796 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.728586405 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.72786607 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.728201746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.728301957 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.728798443 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72882923 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.728377399 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.729080268 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.728191874 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728576074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.729263371 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.730547942 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728088187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.727858004 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.728724733 seconds)
  done (took 32.778556716 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.729211752 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.729125035 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.728342207 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.728284629 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.728138991 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.727995181 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.727736115 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.730448294 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726484245 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.728222853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731083427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.72650557 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727737328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.728379751 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.727389758 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726239993 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.726260373 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726566877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.72613794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726265411 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.725559925 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.725335959 seconds)
  done (took 39.672425275 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.725955174 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.727211583 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.739736323 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.746345527 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.745457057 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.759298409 seconds)
  done (took 12.105739951 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726415255 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724323191 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724501435 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724412158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723812648 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725087761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725883884 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723364546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724044581 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724522391 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723997483 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724131663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725153695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722895594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722348156 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722754447 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722495578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722255733 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723255381 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722096647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723411782 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722184711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722783946 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723099667 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723058769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722516016 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.723195182 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724080688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723094958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723769387 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722577006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723255393 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722516227 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72270291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722897228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722656255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721857077 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722024946 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722257631 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722007518 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.721528766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722952679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722084414 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721273983 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72213649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722461812 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721398554 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721728742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720752078 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720757188 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720001868 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720532652 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721757994 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719276643 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720310088 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720615159 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720983495 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720501519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721232951 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720328305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719224731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720700873 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719999442 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720404695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720816408 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718733059 seconds)
  done (took 115.338947848 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719132482 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.718435397 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719682064 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72247631 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71908632 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719588813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718985383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719401853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719352039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720053835 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719553425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71892373 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719579714 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719654495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719457952 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719155058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720194854 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72014314 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719147964 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719627255 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720548901 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719581697 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718917304 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719982715 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719828637 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71964212 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719759364 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716563607 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717319863 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716346862 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717138214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717308593 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71719279 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.717590606 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71651949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717002257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7172536 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716936099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717534606 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716609872 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715881611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716380755 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718474883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718102776 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71940337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718047659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717877107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719015663 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718430131 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717991025 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716586775 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715236399 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715132386 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715088766 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715663149 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716611053 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716025416 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716214611 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71616141 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716669953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716561374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717426022 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716913647 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71639731 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716957935 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716712412 seconds)
  done (took 115.049162914 seconds)
done (took 2390.135204449 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.736245708 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.757229679 seconds)
  done (took 15.146675756 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.881816561 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.83194497 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.718643742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.773364581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.718234124 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.720089858 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.742494648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.718067897 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.717108859 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.717592109 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.718233826 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.903848446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.775402276 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.71799953 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.718445607 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.808354425 seconds)
  done (took 49.837300552 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.720235695 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.722296101 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.731157916 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.722937249 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.719962378 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.7328046 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.751378504 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.72425514 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.755874838 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.73298922 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.788428205 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.730702257 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.720327895 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.771081236 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.733365799 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.73409554 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.817276862 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.79526567 seconds)
  done (took 33.055882676 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79658091 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.728122005 seconds)
  done (took 10.183533558 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.726041292 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.727439449 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.738391406 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.724028793 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.732306016 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.717761003 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.752941838 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.758053366 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.735845149 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.725924928 seconds)
  done (took 68.99233026 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.721597742 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.721260153 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.717499643 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.715551411 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.713778036 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.718615975 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.716907138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.716438458 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.375086812 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.752557502 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.724682292 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.720891424 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.717288526 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.71902165 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.716321509 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.742817376 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.83338668 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.71523422 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.715463741 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.724061507 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.718991652 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.775767815 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.729770599 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.716173745 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.746735151 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.373396137 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.726488742 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.722099302 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.828746009 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.714206952 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.716824793 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.902644389 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.719795757 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.172424155 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.998481078 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.723417874 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.730750681 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.724133334 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.71420769 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.828439537 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.719866413 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.722853771 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.631120958 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.975302984 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.821137823 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.761932166 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.027457164 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.735205548 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.718485041 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.746750362 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.719935459 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.717800022 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.729411256 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.217502809 seconds)
  done (took 124.377943288 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.713619932 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.061446655 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88200654 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.716222846 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997532689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.924140911 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717494195 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760168637 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.716831824 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943260615 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97380685 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819149658 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.717288424 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.717972424 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.713322202 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.713859561 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.86744824 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.785307689 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.71674389 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.714924841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743318852 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953872693 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.836652478 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.717515957 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.740823529 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924034413 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.835515009 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.817504486 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.497961352 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.715143667 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777198654 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.71840409 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.716391953 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.714591778 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.870461493 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80928027 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796964328 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.718969034 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.714723814 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.715802854 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.459430962 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91383009 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.809067062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.844001673 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.966028029 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.918781785 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492965965 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.715896108 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.448944751 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.881754196 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.942058118 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.942796503 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.836967257 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.720418141 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.243128736 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.715084538 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717026072 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963893536 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937620579 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.815526087 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71856371 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.71518108 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.716076264 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004713173 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.71897349 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811465022 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717547702 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.717034071 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.81234606 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813671546 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.946370021 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928546581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.746401072 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.055819525 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.231152888 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961867905 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.780109859 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.965384578 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.723145429 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.716645366 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793691966 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.558159478 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.968487757 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.997953134 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963590093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754321701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.438639636 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.718081191 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.941081501 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.936291434 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.974571292 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.959302263 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.955279131 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.052810444 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.717406075 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.717189596 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.952974135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.840649601 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.720777987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.06351309 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946164997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.241504392 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.742598264 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.01803918 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.84909053 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.721080011 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.355591081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.716740523 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.94533244 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.756793867 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.719896217 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.719564138 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935526803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.703353396 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.718320308 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.674738183 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.77891678 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.722503783 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948760431 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.723274265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.985524124 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.721484032 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953180403 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.135226128 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.747872101 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.945775485 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.964349714 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.72115641 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.956546079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960282882 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.833101137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.992538777 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.616358281 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.719272832 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001914144 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721864081 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.720229922 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.886988202 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.720571019 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.860603587 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.722670182 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.009712116 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741539052 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951936631 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722841277 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971410132 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.752479032 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768864001 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.721436822 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.849422355 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722948008 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.545733364 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.87598307 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723006826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.719451282 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.51466908 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.720436395 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.867367068 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94457567 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740740345 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.206661007 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.379170445 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.720266794 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797969862 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742202448 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104170644 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.720827471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.97403477 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.723713743 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.72102801 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.72111259 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005336828 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.956680314 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.723785004 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.721180808 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.621451548 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.72175503 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.721143648 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.901392756 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.047135333 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721451052 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921786042 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722495665 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.847482987 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.727134678 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.801800192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.060041413 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.721659197 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.721537411 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.720625973 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.722929114 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.722729252 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981306962 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.745650803 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.224752156 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.858354644 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992560395 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.030827314 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.960061808 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.763430187 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.725962155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974241479 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.725900512 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.784024779 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.725212323 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.741692642 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947883065 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.727437425 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.929532201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990443166 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.569793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768748599 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.72507643 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723207918 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.723049147 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867227808 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805242736 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.724800237 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.724247798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.838677742 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.843768483 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929085029 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.725091065 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.798343743 seconds)
  done (took 870.209809593 seconds)
done (took 1173.457928724 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.72233331 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.723960959 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.726287799 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.726347991 seconds)
  done (took 28.559842688 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.727497875 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.725562887 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.726185358 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.725829815 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.729144537 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.725357773 seconds)
  done (took 12.019803953 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.723024871 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.726422444 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.726786394 seconds)
  done (took 20.838006837 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.797860552 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.111193303 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.864083368 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.143015453 seconds)
  done (took 9.577295949 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.726225117 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.725792727 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.728503422 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.728418044 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.729149253 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.728601069 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.728528989 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.728496497 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.731663151 seconds)
  done (took 17.217154282 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.011404051 seconds)
done (took 93.886313986 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.799974488 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.726483149 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.432249359 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.828185135 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.785163376 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.80976778 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.877731969 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.805210685 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.729973752 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.973683099 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.885306843 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.748478389 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.626080393 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.173770985 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.752912095 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.822778022 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.727571049 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.799000297 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.978782277 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.914541046 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.750315959 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.067581559 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.584006012 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.728248661 seconds)
    (25/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.008227703 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.391544804 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.102588744 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.816220036 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.730232672 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.947099271 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.263858158 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.912515451 seconds)
    (33/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.748709299 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.725635775 seconds)
    (35/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.425634221 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.864867211 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.896441536 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.819671798 seconds)
    (39/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.855674056 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.792816716 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.068593773 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.834062065 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.505354918 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.740613581 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.805256867 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.787202958 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.726854006 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.072926248 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.728701091 seconds)
    (50/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.954446097 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.403363203 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.900397796 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.474660541 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.753643519 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.964203734 seconds)
    (56/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.038730538 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.985581404 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.050756186 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.486460213 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.732251447 seconds)
    (61/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.730216335 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.977771138 seconds)
    (63/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.802772479 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.881768897 seconds)
    (65/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.026107547 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751452881 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.374826387 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.857959345 seconds)
    (69/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.858390016 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.033306653 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.822432687 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.820388566 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.952396621 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.856112695 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.03985988 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.731469363 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.732248364 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.088211186 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.746712585 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.111247168 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.119559495 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.731413238 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.949182906 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.828628097 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.729755643 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.174757489 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.373205318 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.739735695 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.65541115 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.841430062 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.755595384 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.036952384 seconds)
    (93/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047480424 seconds)
    (94/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.839091456 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.864909294 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.729121725 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.317813785 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.630886523 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.027653011 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.867415197 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.73012868 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.735268078 seconds)
    (103/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.110750544 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.733593545 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.749667087 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.039469001 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.067694587 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.628334062 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.936639273 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.064204432 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.735391621 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.851053463 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.96797936 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.866814796 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.856770592 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.809511627 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.82804834 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.040573447 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.930752955 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.960023568 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.759825819 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.218228268 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.036697043 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.751260585 seconds)
    (125/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.644183456 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.871036688 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.82554444 seconds)
    (128/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.892045373 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.8654087 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.009536235 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.943713226 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.861873588 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.760884376 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.73553826 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.954403454 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.122142502 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.052904488 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.986466428 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.732290286 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.160154046 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.401119559 seconds)
    (142/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.846128227 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.734694122 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.505191571 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.495704759 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.103803483 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.773222906 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.856991756 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.042256933 seconds)
    (150/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.815094219 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.758539922 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.754694756 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.104709068 seconds)
    (154/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.733971287 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.73539505 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.960985678 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.517341254 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.736791721 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.887417445 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.349714488 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.75829583 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.081631959 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.986785826 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.983244001 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.570017995 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.759323409 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.030864498 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.735586225 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.735346279 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.720180498 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.736189087 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.128510274 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.839906851 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.103646888 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.73780054 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.852679724 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.988053733 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.262109833 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.891505555 seconds)
    (180/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.818366857 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.069896565 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.880569081 seconds)
    (183/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.214935226 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.848623549 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.220185677 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.13081682 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.69356571 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.74284264 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.832666863 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.735936188 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.836832786 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.377595095 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.403340332 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.739460265 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.839071872 seconds)
    (196/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.077909217 seconds)
    (197/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.997568266 seconds)
    (198/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.737854242 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.474707382 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.410176417 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.41544607 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.952235169 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.736311669 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.453185055 seconds)
    (205/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.93060961 seconds)
    (206/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024225128 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.902021956 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.751302931 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.800418855 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.131849622 seconds)
    (211/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.817271183 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.741588302 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.347617921 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.977896468 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.193668565 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.739091783 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 5.553989914 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.995339243 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.743108955 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.879714833 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.822859037 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.393444561 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.955615293 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.735140123 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.701623164 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.738705329 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.29866467 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.940881075 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.737372094 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.891992831 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.075435745 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.780144238 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.736218442 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.847499571 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.920007497 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.740689166 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.882858888 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.930999286 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.850766904 seconds)
    (240/309) benchmarking ("sort", Float64, false)...
    done (took 5.511696329 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.661285756 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.746714905 seconds)
    (243/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.839425202 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.827382797 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000048053 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.876373954 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.837025197 seconds)
    (248/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.885107484 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.921894046 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.774464001 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.97408104 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.740196701 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.839688697 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.913647626 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.920699037 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.889745213 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.742972544 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.952004521 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.953267455 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.849256235 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.636763249 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.74339343 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 3.244145168 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.761873309 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.738732919 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.206160023 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.996711428 seconds)
    (268/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.818848654 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.737279652 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.766568819 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.756008591 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.751220766 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.983050877 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.908856117 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.758193822 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.196667776 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.74473554 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.033082622 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.741738295 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.24648279 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.865496451 seconds)
    (282/309) benchmarking ("sort", BigInt, false)...
    done (took 6.740454783 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.522482934 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.800969185 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.989405524 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.507922954 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.836089924 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.053821627 seconds)
    (289/309) benchmarking ("sort", Int8, false)...
    done (took 4.630595196 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.742436822 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.829743105 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.046443673 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.145022728 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.745148977 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.769836666 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.739904824 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.984028165 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.078010151 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.953399699 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.744284502 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.578805582 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.714466072 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.754152387 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.929050287 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.769430508 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.949451851 seconds)
    (307/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.185229704 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.746268031 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.054283986 seconds)
  done (took 965.614516089 seconds)
done (took 967.342677925 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.767425515 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760605229 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.744282862 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.765931568 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.855290996 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.789765527 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.75855827 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.748369263 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.794460527 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.793475904 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.742638589 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.78882969 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.744689695 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.745553808 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.745178073 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.761037401 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.046422773 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.770892926 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.762291602 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.756032598 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.762281309 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.742301604 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.79402971 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.788310866 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.749048704 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.749464578 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.747986534 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.764274983 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.858177691 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.7487181 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.749604677 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.75831881 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.048076999 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.768217055 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.742894963 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.764164161 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.757033947 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.756833381 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.749565026 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.777892879 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.134316475 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.777778177 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.746948949 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.74554005 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.7452895 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.753169315 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.745741735 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.752692222 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.76119387 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.761204564 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.127604015 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.795292164 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.749429852 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.746583273 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.759666011 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.746935074 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.75087057 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.762353316 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.766219894 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.76365803 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.032886145 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.779183944 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.749690937 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.765590784 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.757064562 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.165367604 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.779866487 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.754657882 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.136143379 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.789738392 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.166437788 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.790179203 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.748837486 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.760845449 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.778784825 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.049835338 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.769684249 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.74545082 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.756328733 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.745394971 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.761193525 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.762134463 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.750658961 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.746764778 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.76323652 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.793098872 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.760248605 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.747140654 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.760060689 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.766621944 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.757008904 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.758736425 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.751921634 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.745562317 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.759582679 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.752348482 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.750749248 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.752205718 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.753179712 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.762432137 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.133320076 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.797992728 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.745546196 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.745932709 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.748462858 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.763146656 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.133049362 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.781461916 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.772008197 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.798129994 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.750572977 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.035213152 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.777492297 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.765686881 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.761522257 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.751647597 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.747003484 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.037465057 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.156302806 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.797164794 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.749644999 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.74719637 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.766142596 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.751116513 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.747683545 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.053152978 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.777316098 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765840401 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.873001764 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.76262123 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.781374052 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.747909246 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.752863202 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.799146858 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.767386403 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.782542848 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.753030676 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.76645919 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.768324807 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.74707653 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.763105207 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.763549371 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.749267563 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.758186416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.748122877 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.799924219 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764404858 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765275031 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.771149417 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.873126053 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.747367235 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.037433332 seconds)
done (took 275.174181071 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.826966 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.750588325 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.841170475 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.749526975 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.835942722 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.820954656 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.748970761 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.74930431 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.749912337 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.240100832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.749306171 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.75415649 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.747401763 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750273557 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.819223118 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.750225343 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.750826952 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.190255137 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.750189625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.8288942 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.747676398 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.74972136 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.750334759 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.246216535 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.751162788 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.748678676 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.830970169 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.749679268 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.202256543 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.748700221 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.747304399 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.20587139 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.83373596 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.777370811 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.757467694 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.758758016 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.836400827 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.758054846 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.817330129 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.817825043 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.843377648 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.783224639 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.748966803 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.749332375 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.753147461 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.752007973 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.751897695 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.78287832 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.749124101 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.758417873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.190480173 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.75530367 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.755930458 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.750466729 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.752128423 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.781105915 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.751813132 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.752294527 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.829568819 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.75183311 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.820407519 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.248297929 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.242254515 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.750333489 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.752098982 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.751706091 seconds)
  done (took 177.233735279 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.81641549 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.827257555 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.816994227 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.755669341 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.798554747 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.817679883 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.757790308 seconds)
  done (took 14.275190861 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.757779332 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.75242284 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.807880934 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.801125045 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.752707437 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.90673313 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.751662903 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.762980974 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.756485967 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.77862717 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.753398003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.752512142 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.759346657 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.750865122 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.800071435 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.763403254 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.867651334 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.754413283 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.754398817 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.899273611 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758259414 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.759958436 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.778414036 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.76451759 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.754810217 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.759755939 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.328013578 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.753694741 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752618248 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.754638538 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.752057008 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.794734178 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.753147004 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.751490986 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752042752 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866790383 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.75164279 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75226545 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.754118647 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.750925722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.754410264 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.75369995 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.753606221 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.752684045 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.753331971 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.775807711 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.754560233 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.754114691 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.753302097 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.75397803 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.779291604 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.753663209 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.754941907 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.758539791 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.796819462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761314887 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.754313692 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.754724992 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.754621677 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753603636 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.900763375 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.802677606 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.75392281 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.80429735 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754616548 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.755440892 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.754431544 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.75494057 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.842447174 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.755128697 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.803808768 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.755900631 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.915863605 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.777303563 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.755485308 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.758551285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.758125929 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.754588669 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.753364477 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.761931261 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.755376769 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.757102654 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.761251557 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.760976515 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755463992 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.867258983 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894441051 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.755945332 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.757508508 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.76385029 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.755182551 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.799566936 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.754827911 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.756308029 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812620099 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.871276142 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.782761957 seconds)
  done (took 194.433504063 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.762681691 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.762091537 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.757762203 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.770184698 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.757200554 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.755538393 seconds)
  done (took 12.255460825 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.759392485 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.759431485 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.756522981 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.756698217 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.75705921 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.757334252 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.757231826 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.757827927 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.759571006 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.757641833 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.756948877 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.757583378 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.757781132 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.75732335 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.757616922 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.756957981 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.757190445 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.757592382 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.757023053 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.757192357 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.008057283 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.756909761 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.758669625 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.761264059 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.760515371 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.757053949 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.77083401 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.758052112 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.758131431 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.766144756 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.760914544 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.759987818 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.761565139 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.762482238 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.761211381 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.760805578 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760274919 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.75949644 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.758099537 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.759771375 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.759204046 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.758325972 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.758333566 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.759655496 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.759646978 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.766260583 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.762522011 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.770903194 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.758814105 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.759384852 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.759866883 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.75911616 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.759348822 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.7598424 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.763533917 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763855659 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.763991316 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.759014295 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.759218378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.76233337 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.761962655 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.758838364 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.762041826 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.762677412 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.766248782 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.759555177 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.761469819 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.762867073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.7601949 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.75884411 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.760295231 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.759448578 seconds)
  done (took 129.662505864 seconds)
done (took 529.559391455 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.04978287 seconds)
  done (took 8.742984211 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.825277642 seconds)
  done (took 8.858198111 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.702761853 seconds)
  done (took 10.406921246 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.783911021 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.778070678 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.782018546 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.779923102 seconds)
  done (took 28.858585973 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.942247935 seconds)
  done (took 8.645738816 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.793209483 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.769602173 seconds)
  done (took 15.332717261 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.911865215 seconds)
  done (took 8.616777962 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.78341104 seconds)
  done (took 8.500198652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.78872669 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.792637209 seconds)
  done (took 15.309422511 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.773039008 seconds)
  done (took 8.475811076 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.956035777 seconds)
  done (took 9.758570766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.798265218 seconds)
  done (took 8.571963392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.825640963 seconds)
  done (took 8.530033856 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.885452943 seconds)
  done (took 8.588592483 seconds)
done (took 158.890765988 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.774554581 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.768832872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.772354683 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.772381273 seconds)
  done (took 28.791068816 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.80375514 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.804095831 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.805709171 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.814374894 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.806673863 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.805649848 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.797695288 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.796812059 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.814998476 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.807314681 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.805369568 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.807267951 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.807153206 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.798300082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.807000201 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.806352146 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.815465829 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.807455336 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.797409209 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.808256396 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.772730988 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.815711235 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.806740233 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.774925809 seconds)
  done (took 44.99280093 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.962820741 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.84336728 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.926045989 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.825807894 seconds)
  done (took 9.2632007 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.823871501 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.824437312 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.835972393 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.875517603 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.899781173 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.832998311 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.795144579 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.793355247 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.780934161 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.826391664 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.900492299 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.820315986 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.909348538 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.772550846 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.958290223 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.772850613 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.772730363 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.825069772 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.875846467 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.890342874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.773529177 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.823748899 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.827320649 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.820819456 seconds)
  done (took 45.738196274 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.773515589 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.782329815 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.781030746 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.773680852 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.774921772 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.77448335 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.781534228 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.776432578 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.79593351 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.776366465 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.774914164 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.775309664 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.783753819 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.775218404 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.775078312 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.788442415 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.789226027 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.775428508 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.779106429 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.781965438 seconds)
  done (took 37.295047294 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.77301098 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.620322207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.118572742 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.024775552 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.773309588 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.774736399 seconds)
  done (took 30.791367127 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.785568279 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.779170502 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.775351916 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.833449167 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.914245196 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.781644076 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.774056958 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.785629543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.821683523 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.840561808 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.798194678 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.803530115 seconds)
  done (took 23.400807175 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.776834472 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.780342612 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.777058372 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.789729153 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.787981312 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.78316547 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.784227932 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.774604226 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.789967233 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.795179881 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.783553544 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.789418554 seconds)
  done (took 43.123127409 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854228008 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650377023 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215296594 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238377404 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.302753994 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97777374 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.777839881 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87014527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.777130731 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048377285 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.129175402 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976388488 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018957308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.574989052 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781045392 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.241809479 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061696432 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987357871 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80730712 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38444504 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879108067 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342963529 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.449351981 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88305354 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979820521 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.898264994 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.034882251 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.72704215 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825091006 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782656576 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781881893 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777698089 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049297771 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911713901 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847139772 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78261497 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.190197368 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.483765552 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.790235285 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.452047172 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.299498657 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.893157151 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780783861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777591486 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703553816 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33609401 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86900761 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.780489303 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.478105625 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.77878568 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782878563 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852630637 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.778926971 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.585325895 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463264952 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047828829 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.778694677 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781308657 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340459599 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773637309 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440522124 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.71416853 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.872645724 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.461201628 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225225558 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.931732295 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.780297844 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780707456 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707288619 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.446804216 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889268641 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917579548 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.796179896 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41829574 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061296086 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.190988916 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828190112 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047851557 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.616849367 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.711804412 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996051187 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.728818051 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706985915 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.610877631 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70745862 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989855711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815221616 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.368504854 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812843417 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.8612645 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784747373 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795830291 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780730355 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993524197 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.674427805 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779961807 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.062815052 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029115055 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79652798 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.863781727 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707637766 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.781864933 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024095951 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.983133042 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.074799956 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.253407637 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864869986 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772624853 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.795200143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.7381298 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790212671 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.045137713 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841111398 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795217356 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894590037 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.729825913 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028882691 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798794937 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.879648351 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.14667405 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014676113 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.114581929 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025863053 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842575649 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781679674 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.78085048 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.468261165 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38799167 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.997317876 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.794462176 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307909934 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.7894633 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.78033761 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713981788 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.43736616 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.143443349 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.857546308 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995235128 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781578288 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057731014 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707517406 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922771386 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.775028406 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.996185975 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.431991081 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.865351943 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030160343 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071391827 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.066917739 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791169282 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796182337 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873580513 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798781178 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.322686368 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028810843 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.782916579 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.783548524 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.468793428 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83191816 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786921198 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.78637941 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333582602 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052621136 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.805450003 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.788825131 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657518217 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.793421272 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844787424 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785195138 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.788585098 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.30361588 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28938615 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.78850705 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.44252778 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9986612 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7865308 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.405864746 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955422723 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.795781411 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049094432 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848732197 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.70999317 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.482864818 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.484299883 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78339663 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710739833 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.784081983 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787510702 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789018199 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.972219466 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055645176 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837462225 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.453999768 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.88787745 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789624624 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.787037401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784640639 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.276055073 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793556774 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442909372 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.791676053 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914066169 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.797136154 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.711837332 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.786387443 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788859369 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.786058121 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.736949555 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833462171 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.456566973 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98636345 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035682087 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.190957836 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793595049 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.456556477 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.899830499 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.800285768 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.074606318 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340183034 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.896491192 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859677132 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.792243749 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.456936621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51927051 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349569615 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072533585 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099160954 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127835601 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.185669606 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.114812887 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87075397 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01303367 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306744546 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842901132 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878955842 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725793427 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800950611 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.436776329 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139873541 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796133516 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004249412 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06868624 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.15281377 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918839233 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990214316 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817030412 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.630442688 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82006744 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.323205527 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803784273 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.233527219 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989452216 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86862938 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.078344685 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.872952449 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.787914384 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12912428 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829349479 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.49217177 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.139599118 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.203735971 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.267791075 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015942646 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.795575645 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.226165038 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133677614 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.996638363 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.913730092 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716026072 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.793911996 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.793782027 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.800943127 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.761134297 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.649285849 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.038855038 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793841562 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015534379 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.941872186 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157992081 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.742404787 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.791948432 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788407191 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033077949 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485515321 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949011116 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.123904144 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.362631685 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795514773 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.715054194 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716014644 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.488976587 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.795285111 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757400994 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000095419 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.895771627 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.471786876 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.19606071 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107218479 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033196919 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.801727199 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057885176 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065487325 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.28371692 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811993268 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.888455222 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096999103 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.485490447 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.005152524 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016926463 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320693967 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.007515939 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248584742 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.762761195 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.791714516 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99722921 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.005424363 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.162402165 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96313085 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.501062556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.805333314 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14745595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855152663 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.171981051 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974533222 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.876899065 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798119322 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867940902 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794519886 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.799481903 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.796838451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803849497 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.157800863 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90866087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.803969137 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868003904 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811623098 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.3583783 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.800484675 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061238406 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144278202 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119913159 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857223947 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.79291089 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801627182 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718957263 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922420948 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231700144 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064315654 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.910489345 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.928159775 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813754929 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.101237639 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.069696031 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107229728 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065868635 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.675450119 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450488209 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91731268 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.009478028 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798540641 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.998527514 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010938143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097916772 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363222865 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.951821608 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988935306 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06590874 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158200274 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.794584089 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378264639 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.798598961 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19624665 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.827990125 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.163248781 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047454584 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79700272 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913705401 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798028654 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.996966721 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.244648717 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.471413049 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139613189 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651895925 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.79821887 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068641809 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122463715 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098328538 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871613793 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800897743 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.486446163 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927542083 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.695406491 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035127368 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.795887828 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999494356 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.505251991 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.799223503 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064458769 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099390188 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.796057878 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.723910319 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835562607 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.798572718 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010172115 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009801455 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041108786 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79933081 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.801730649 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.602479853 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067943845 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85638505 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722904016 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.797942841 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842154741 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022798341 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814573271 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.311454084 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.498053632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07580676 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.70586777 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813962811 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227747193 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175002639 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125639225 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.314945821 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015550971 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349477704 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.665884845 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178060707 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.799580848 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.2224746 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1805213 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.798123549 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325289841 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912283065 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.063795624 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123098151 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.812398714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556468988 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.826965111 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010927126 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150455699 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728170295 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80084941 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.844724878 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.797733085 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.781352254 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807009351 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.760579196 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26636517 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.642537229 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357492255 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.801636529 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.804276939 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.136269971 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356524468 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910044006 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814425826 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801368973 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.498359704 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.086161801 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040645096 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.325290363 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.894233197 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.79978779 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799081025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717295195 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.980401602 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.987018598 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080799903 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.168405096 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.912300754 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800345441 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.006808853 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002313666 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.164858478 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927976727 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956032075 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91599392 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.762136158 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50486419 seconds)
  done (took 1622.691206406 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.813456271 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.831921936 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.818798893 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.876459009 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.82357882 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.82395058 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.87111307 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.809457283 seconds)
  done (took 56.402127527 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.800190627 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.960614186 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.807109257 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.803215977 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.807710519 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.802250776 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.96088063 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.854472703 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.806659488 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.807565269 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.801463798 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.803019458 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.084437298 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.823599848 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.802144975 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.805520051 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.272686445 seconds)
  done (took 73.547959396 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.844632728 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.907076062 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.839434876 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.803003451 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.893596176 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.818672489 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.946455681 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.816744335 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.80870961 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.058896278 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.099757965 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.83148165 seconds)
  done (took 89.406265037 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.817184156 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.80690731 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.80664794 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.808395418 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.806203243 seconds)
  done (took 10.791715567 seconds)
done (took 2117.959581205 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.15635502 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.99693894 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.043639373 seconds)
  done (took 5.778021456 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.94142093 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.992342489 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.106351784 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.112059542 seconds)
  done (took 9.890276444 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.084022559 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.165832076 seconds)
  done (took 5.983914564 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.12211211 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.822119988 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.214916117 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.801674143 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.80635827 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.806060557 seconds)
  done (took 22.154585799 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.802849236 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.801922062 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.802813502 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.804165831 seconds)
  done (took 8.947120406 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.800947116 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.519468374 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.80421851 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.813756609 seconds)
  done (took 20.672978943 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.949991656 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.917682823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.945798269 seconds)
  done (took 7.547855558 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.020575764 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.595038622 seconds)
  done (took 6.351492237 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.964546704 seconds)
  done (took 3.699697371 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.830290796 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.073246501 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.309586599 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.32640504 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.386032545 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.630226105 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.127038718 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.027213501 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.258626305 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.257926669 seconds)
  done (took 23.962338137 seconds)
done (took 130.04223329 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.146744751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.831733155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004020055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.157483048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.044614663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.00299906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.025651533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.149220575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.843574077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825366363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.157093923 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.037771591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.967706988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.828437294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.974045668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.810561816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.032473986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.168718489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.842212781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.060909613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.035429402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.802288688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.99481267 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.820346203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.03628961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954916938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.347818797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.811426645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.982171127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.35907152 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.959668451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.200004718 seconds)
  done (took 165.951717605 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.805004766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.806201769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.804712601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.804532342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.258914537 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.805035727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.806032615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.806043564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.213475648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.202170292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.806490016 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.241210136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.807903656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.805095669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.805898396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.805908681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.357242077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.805995987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.805066884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.805325851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.805907962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.079787615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.806744896 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.09602099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.358227717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.806801172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.804849881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.805835732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.805961734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.804865769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.805919279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.805726336 seconds)
  done (took 206.884439929 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.805569504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.807092286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.810000215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.806781804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.807375564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.809203355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.807798236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.805883018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437662791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.562139482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.808855565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.80826909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.806785492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.806896628 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.807713644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.806906807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.806939406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.805687859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.80809489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.807517024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.810005908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.581719181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.812042339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.585835209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.807308604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.808678671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.806696427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.810633207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.812261666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.807793559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.80753616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.8108028 seconds)
  done (took 218.534158741 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.047290053 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.810436299 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.80880376 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.716388997 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.808901277 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.810766418 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.801727702 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.056112741 seconds)
  done (took 18.604880134 seconds)
done (took 611.720828901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.180897865 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.004208611 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.992023357 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.835507857 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.07740919 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.878064835 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.828262905 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.896365775 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.637848388 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.91293137 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.464681331 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.854518251 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.563166063 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.865091306 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.952438211 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.894108549 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.420080228 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.523199291 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.011766187 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.899434712 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.014112426 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.725314782 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.917124584 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.676514915 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.588718161 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.78584852 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.85460197 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423534834 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.843290212 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.990088315 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.490783607 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.085755026 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.844071513 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.827435049 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.883642525 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.8613857 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.025634055 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.840770059 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.955684268 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.522658524 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.894038932 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.54410309 seconds)
  done (took 100.028682165 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.820985421 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.815071137 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.816478247 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.81604284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.825613981 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.816344658 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.816503561 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.817437835 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.816586467 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.816802108 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.818328059 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.826690552 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.81901732 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.826956589 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.818468862 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.817178399 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.816702354 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.826050582 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.81697222 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.816868555 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.816802861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.816028937 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.815658956 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.817353833 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.816465174 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.816733499 seconds)
  done (took 49.038162347 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.813318944 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.992214416 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.058567338 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.832251014 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.811801233 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.815077506 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.834440534 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.817031049 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.813854553 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.813966198 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.914772079 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.818791849 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.837835692 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.061209324 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.829256818 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.81274222 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.812842395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.817186351 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.994164338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.828800512 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.833643714 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.817940454 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.832410094 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.826849255 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.814599556 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813750953 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.816651478 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.259978497 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.822219885 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.914450415 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.861591372 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.837071277 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.205201592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.069553109 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.871315142 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.824043965 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.816027383 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921473242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.821482516 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.813558204 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.832365095 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.819350108 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.057199151 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.333471581 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.829143052 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.814042098 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.269800639 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.9298594 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.85758788 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.825513678 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.064175551 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.832323403 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.816623762 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.816125019 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.850948395 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.820337052 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.815929867 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.122885503 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.827618906 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.834360568 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.821123827 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.816099875 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998864541 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.824242912 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.987512478 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.824138127 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.821778044 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.816285407 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.062911148 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.831999522 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.345793548 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.82940747 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.815900401 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918093188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.993162453 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.29740996 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.828861827 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.999850459 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.221914276 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.84058339 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.82370138 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.249866487 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.844236416 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.823300167 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.818172518 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.816947074 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.8157367 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.860229083 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.832221355 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.257884849 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.345786082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.138320902 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.843273916 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.832350836 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.817860822 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.122017683 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.826387519 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.817239222 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.056432208 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.355650468 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.831137732 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.822868272 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.32606795 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.83280291 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.836221415 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.825087986 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.06769869 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.832956808 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.860493841 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.816480794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.823796846 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.819033628 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.836005617 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.824981408 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.81663394 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.319929457 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.939779652 seconds)
  done (took 225.86681114 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.81867607 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.822270152 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.815898225 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.820581764 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.815997952 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.817297829 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.814611717 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.81510884 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.817280664 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.815523517 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.815920756 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.815800536 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.818615243 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.815352628 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.82387474 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.817625452 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.42072656 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.815309633 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.815501199 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.817597529 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.455995114 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.822290775 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.818346132 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.816611215 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.817632204 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.818013242 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.820215245 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.822520468 seconds)
  done (took 165.892644793 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.818824506 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.931122633 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.838006595 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.848033724 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.826245359 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.81893266 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.91541719 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.836635932 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.824217316 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.819546878 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.818450734 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.878765937 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.829640958 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.915460949 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.849909388 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.925258237 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.922523058 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.826602475 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.819673912 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.81958825 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.847759478 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.828094856 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.878911158 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.941914814 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.839077592 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.931122001 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.839579423 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.82016191 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.818871603 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.931408036 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.838571241 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.881327133 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.847065665 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.83735383 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.936711988 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.935469192 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.923445024 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.923416225 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.826418831 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.821506052 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.821716657 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.821420201 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.932908969 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.841862256 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.821421105 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.935682605 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.839310045 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.82089892 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.820900057 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.820393419 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.834041544 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.839511583 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.884938821 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.94768707 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.859557466 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.844628234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.917631804 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.948708219 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.821724644 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.917927633 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.829824031 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.93325976 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.842406816 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.823488728 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.822565171 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.825092894 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.850913588 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.926446012 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.925197719 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.829006501 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.917983749 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.857933993 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.829470053 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.82225685 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.822576312 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.934130063 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.938684837 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.85835851 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.8580302 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.852500627 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.831613505 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.821121842 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.824235046 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.838576381 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.82750905 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.935750135 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.938937354 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.828299479 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.822685312 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.822067694 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.823873754 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.847391597 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.942492515 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.860630573 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.927502043 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.889349552 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.896748752 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.838010212 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.837131685 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.829140402 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.885082189 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.83732548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.834897265 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.121207749 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.882602635 seconds)
  done (took 197.622283201 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.213491121 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.873254102 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.878434092 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.145609025 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.170086267 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.737432055 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.870546378 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.871554519 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.893837048 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.0524555 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.946639768 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.888237212 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.858352174 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.844476869 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.868371139 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.891028463 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.878863734 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.208031097 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.075776231 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.029080356 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.863755106 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.136516136 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.175461922 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.447349193 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.920393679 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.266184531 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.427722849 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.998628664 seconds)
  done (took 60.193291041 seconds)
done (took 800.383280556 seconds)
SAVING RESULT...
DONE!
